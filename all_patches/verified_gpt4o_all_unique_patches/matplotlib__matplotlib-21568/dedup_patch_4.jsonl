{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-21568", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex f565bc8..1f26ee2 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -631,7 +631,7 @@ class DateFormatter(ticker.Formatter):\n \n     def __call__(self, x, pos=0):\n         result = num2date(x, self.tz).strftime(self.fmt)\n-        return _wrap_in_tex(result) if self._usetex else result\n+        return f'\\\\textrm{{{_wrap_in_tex(result)}}}' if self._usetex else result\n \n     def set_tzinfo(self, tz):\n         self.tz = tz\n@@ -840,10 +840,10 @@ class ConciseDateFormatter(ticker.Formatter):\n             # set the offset string:\n             self.offset_string = tickdatetime[-1].strftime(offsetfmts[level])\n             if self._usetex:\n-                self.offset_string = _wrap_in_tex(self.offset_string)\n+                self.offset_string = f'\\\\textrm{{{_wrap_in_tex(self.offset_string)}}}'\n \n         if self._usetex:\n-            return [_wrap_in_tex(l) for l in labels]\n+            return [f'\\\\textrm{{{_wrap_in_tex(l)}}}' for l in labels]\n         else:\n             return labels\n \n@@ -965,7 +965,7 @@ class AutoDateFormatter(ticker.Formatter):\n \n         if isinstance(fmt, str):\n             self._formatter = DateFormatter(fmt, self._tz, usetex=self._usetex)\n-            result = self._formatter(x, pos)\n+            result = f'\\\\textrm{{{self._formatter(x, pos)}}}'\n         elif callable(fmt):\n             result = fmt(x, pos)\n         else:\n", "occurrence": 1}
