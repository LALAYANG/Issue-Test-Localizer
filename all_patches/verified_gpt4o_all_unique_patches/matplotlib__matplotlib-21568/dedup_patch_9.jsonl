{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-21568", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex f565bc8..33091d5 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -592,12 +592,9 @@ def drange(dstart, dend, delta):\n \n \n def _wrap_in_tex(text):\n-    p = r'([a-zA-Z]+)'\n-    ret_text = re.sub(p, r'}$\\1$\\\\mathdefault{', text)\n-\n-    # Braces ensure dashes are not spaced like binary operators.\n-    ret_text = '$\\\\mathdefault{'+ret_text.replace('-', '{-}')+'}$'\n-    ret_text = ret_text.replace('$\\\\mathdefault{}$', '')\n+    ret_text = text.replace('-', r'\\text{-}')\n+    ret_text = r'$\\mathdefault{' + ret_text + r'}$'\n+    ret_text = ret_text.replace(r'$\\mathdefault{}$', '')\n     return ret_text\n \n \n@@ -842,10 +839,10 @@ class ConciseDateFormatter(ticker.Formatter):\n             if self._usetex:\n                 self.offset_string = _wrap_in_tex(self.offset_string)\n \n+        formatted_labels = labels\n         if self._usetex:\n-            return [_wrap_in_tex(l) for l in labels]\n-        else:\n-            return labels\n+            formatted_labels = [_wrap_in_tex(l) for l in labels]\n+        return formatted_labels\n \n     def get_offset(self):\n         return self.offset_string\n@@ -965,6 +962,8 @@ class AutoDateFormatter(ticker.Formatter):\n \n         if isinstance(fmt, str):\n             self._formatter = DateFormatter(fmt, self._tz, usetex=self._usetex)\n+            if self._usetex:\n+                result = _wrap_in_tex(result)\n             result = self._formatter(x, pos)\n         elif callable(fmt):\n             result = fmt(x, pos)\n"}
