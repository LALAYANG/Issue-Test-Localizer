{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7236", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 28ce115..28d0544 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -224,6 +224,13 @@ class TestCaseFunction(Function):\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, \"tearDown\", lambda *args: None)\n \n+            # Ensure tearDown is not called on skipped tests\n+            def new_run(result=None):\n+                if hasattr(result, 'skipped') and result.skipped:\n+                    return\n+                self._testcase(result=result)\n+            self._testcase.run = new_run\n+\n             # we need to update the actual bound method with self.obj, because\n             # wrap_pytest_function_for_tracing replaces self.obj by a wrapper\n             setattr(self._testcase, self.name, self.obj)\n"}
