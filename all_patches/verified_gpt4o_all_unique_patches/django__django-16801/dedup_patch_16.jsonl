{"model_name_or_path": "agentless", "instance_id": "django__django-16801", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 3d75101..e5ff55e 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -437,12 +437,13 @@ class ImageField(FileField):\n \n     def contribute_to_class(self, cls, name, **kwargs):\n         super().contribute_to_class(cls, name, **kwargs)\n-        # Attach update_dimension_fields so that dimension fields declared\n-        # after their corresponding image field don't stay cleared by\n-        # Model.__init__, see bug #11196.\n-        # Only run post-initialization dimension update on non-abstract models\n-        if not cls._meta.abstract:\n-            signals.post_init.connect(self.update_dimension_fields, sender=cls)\n+        if self.width_field or self.height_field:\n+            # Attach update_dimension_fields so that dimension fields declared\n+            # after their corresponding image field don't stay cleared by\n+            # Model.__init__, see bug #11196.\n+            # Only run post-initialization dimension update on non-abstract models\n+            if not cls._meta.abstract:\n+                signals.post_init.connect(self.update_dimension_fields, sender=cls)\n \n     def update_dimension_fields(self, instance, force=False, *args, **kwargs):\n         \"\"\"\n@@ -507,4 +508,4 @@ class ImageField(FileField):\n                 \"form_class\": forms.ImageField,\n                 **kwargs,\n             }\n-        )\n+        )\n"}
