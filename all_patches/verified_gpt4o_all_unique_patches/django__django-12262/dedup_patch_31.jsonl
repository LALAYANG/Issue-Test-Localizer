{"model_name_or_path": "agentless", "instance_id": "django__django-12262", "model_patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex e9453ed..f4fb1f0 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -251,10 +251,7 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n     args = []\n     kwargs = {}\n     unhandled_params = list(params)\n-    unhandled_kwargs = [\n-        kwarg for kwarg in kwonly\n-        if not kwonly_defaults or kwarg not in kwonly_defaults\n-    ]\n+    unhandled_kwargs = list(kwonly)\n     for bit in bits:\n         # First we try to extract a potential kwarg from the bit\n         kwarg = token_kwargs([bit], parser)\n@@ -301,11 +298,12 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n         # Consider the last n params handled, where n is the\n         # number of defaults.\n         unhandled_params = unhandled_params[:-len(defaults)]\n-    if unhandled_params or unhandled_kwargs:\n-        # Some positional arguments were not supplied\n+    missing_params = [p for p in unhandled_params if p not in kwargs]\n+    missing_kwargs = [kwarg for kwarg in unhandled_kwargs if kwarg not in kwargs and (kwonly_defaults is None or kwarg not in kwonly_defaults)]\n+    if missing_params or missing_kwargs:\n         raise TemplateSyntaxError(\n             \"'%s' did not receive value(s) for the argument(s): %s\" %\n-            (name, \", \".join(\"'%s'\" % p for p in unhandled_params + unhandled_kwargs)))\n+            (name, \", \".join(\"'%s'\" % p for p in missing_params + missing_kwargs)))\n     return args, kwargs\n \n \n"}
