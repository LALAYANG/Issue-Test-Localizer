{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8269", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex ace1ed3..ddb4750 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -97,16 +97,13 @@ class CheckExternalLinksBuilder(Builder):\n             try:\n                 if anchor and self.app.config.linkcheck_anchors:\n                     response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n-                    found = check_anchor(response, unquote(anchor))\n-                    if not found:\n-                        raise Exception(__(\"Anchor '%s' not found\") % anchor)\n-                else:\n                     try:\n-                        response = requests.head(req_url, config=self.app.config, auth=auth_info, **kwargs)\n-                        response.raise_for_status()\n-                    except HTTPError:\n-                        response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n                         response.raise_for_status()\n+                        found = check_anchor(response, unquote(anchor))\n+                        if not found:\n+                            return ('broken', __(\"Anchor '%s' not found\") % anchor, 0)\n+                    except HTTPError as err:\n+                        return ('broken', str(err), 0)\n             except HTTPError as err:\n                 if err.response.status_code == 401:\n                     return ('working', ' - unauthorized', 0)"}
