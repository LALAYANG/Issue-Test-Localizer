{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..8964ea1 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -54,7 +54,7 @@ def is_separable(transform):\n         array([ True,  True,  True,  True]...)\n \n     \"\"\"\n-    if transform.n_inputs == 1 and transform.n_outputs > 1:\n+    if transform.n_inputs == 1 or isinstance(transform, CompoundModel):\n         is_separable = np.array([False] * transform.n_outputs).T\n         return is_separable\n     separable_matrix = _separable(transform)\n@@ -94,7 +94,7 @@ def separability_matrix(transform):\n         array([[ True, False], [False,  True], [ True, False], [False,  True]]...)\n \n     \"\"\"\n-    if transform.n_inputs == 1 and transform.n_outputs > 1:\n+    if transform.n_inputs == 1 or isinstance(transform, CompoundModel):\n         return np.ones((transform.n_outputs, transform.n_inputs),\n                        dtype=np.bool_)\n     separable_matrix = _separable(transform)\n@@ -303,7 +303,7 @@ def _separable(transform):\n     \"\"\"\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n-    elif isinstance(transform, CompoundModel):\n+    elif isinstance(transform, CompoundModel) or isinstance(transform, _CompoundModel):\n         sepleft = _separable(transform.left)\n         sepright = _separable(transform.right)\n         return _operators[transform.op](sepleft, sepright)\n", "occurrence": 1}
