{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6903", "model_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex 1397b08..07bc266 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -31,8 +31,8 @@ def _query_cpu() -> int | None:\n     elif Path('/sys/fs/cgroup/cpu/cpu.shares').is_file():\n         with open('/sys/fs/cgroup/cpu/cpu.shares', encoding='utf-8') as file:\n             cpu_shares = int(file.read().rstrip())\n-        avail_cpu = int(cpu_shares / 1024)\n-    return avail_cpu\n+        avail_cpu = int(cpu_shares / 1024) or 1\n+    return avail_cpu or 1\n def _cpu_count() -> int:\n     cpu_share = _query_cpu()\n     cpu_count = None\n@@ -93,7 +93,7 @@ class Run:\n                 print('Multiprocessing library is missing, fallback to single process', file=sys.stderr)\n                 linter.set_option('jobs', 1)\n             elif linter.config.jobs == 0:\n-                linter.config.jobs = _cpu_count()\n+                linter.config.jobs = _cpu_count() or 1\n         if self._output:\n             try:\n                 with open(self._output, 'w', encoding='utf-8') as output:"}
