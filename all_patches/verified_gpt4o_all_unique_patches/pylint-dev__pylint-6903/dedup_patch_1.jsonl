{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6903", "model_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex aabf0aa..2269227 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -53,12 +53,14 @@ def _query_cpu() -> int | None:\n             cpu_period = int(file.read().rstrip())\n         # Divide quota by period and you should get num of allotted CPU to the container, rounded down if fractional.\n         avail_cpu = int(cpu_quota / cpu_period)\n+    if avail_cpu < 1:\n+        avail_cpu = 1\n     elif Path(\"/sys/fs/cgroup/cpu/cpu.shares\").is_file():\n         with open(\"/sys/fs/cgroup/cpu/cpu.shares\", encoding=\"utf-8\") as file:\n             cpu_shares = int(file.read().rstrip())\n         # For AWS, gives correct value * 1024.\n         avail_cpu = int(cpu_shares / 1024)\n-    return avail_cpu\n+    return avail_cpu if avail_cpu > 0 else 1\n \n \n def _cpu_count() -> int:\n@@ -182,7 +184,7 @@ group are mutually exclusive.\",\n                 )\n                 linter.set_option(\"jobs\", 1)\n             elif linter.config.jobs == 0:\n-                linter.config.jobs = _cpu_count()\n+                linter.config.jobs = max(_cpu_count(), 1)\n \n         if self._output:\n             try:\n"}
