{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-8898", "model_patch": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 58062ab..a1a7fd3 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -111,11 +111,17 @@ def _regex_transformer(value: str) -> Pattern[str]:\n         raise argparse.ArgumentTypeError(msg) from e\n \n \n-def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n+def _regexp_csv_transformer(value: str) -> Sequence[Pattern[str]]:\n     \"\"\"Transforms a comma separated list of regular expressions.\"\"\"\n     patterns: list[Pattern[str]] = []\n-    for pattern in _csv_transformer(value):\n-        patterns.append(_regex_transformer(pattern))\n+    # Use a placeholder delimiter that is unlikely to be in the regex.\n+    placeholder_delimiter = \"|||\"\n+    # Temporarily replace commas within regex patterns with the placeholder.\n+    value = re.sub(r\"\\\\,\", placeholder_delimiter, value)\n+    for pattern in value.split(\",\"):\n+        # Restore commas within regex patterns.\n+        pattern = pattern.replace(placeholder_delimiter, \",\")\n+        patterns.append(_regex_transformer(pattern.strip()))\n     return patterns\n \n \n", "occurrence": 1}
