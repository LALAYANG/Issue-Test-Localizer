{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14539", "model_patch": "diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py\nindex 0a08301..606f9bd 100644\n--- a/astropy/io/fits/diff.py\n+++ b/astropy/io/fits/diff.py\n@@ -1342,6 +1342,13 @@ class TableDataDiff(_BaseDiff):\n         super().__init__(a, b)\n \n     def _diff(self):\n+        def compare_vla_elements(vla1, vla2):\n+            if len(vla1) != len(vla2):\n+                return False\n+            for elem1, elem2 in zip(vla1, vla2):\n+                if not np.allclose(elem1, elem2, rtol=self.rtol, atol=self.atol):\n+                    return False\n+            return True\n         # Much of the code for comparing columns is similar to the code for\n         # comparing headers--consider refactoring\n         colsa = self.a.columns\n@@ -1449,14 +1456,12 @@ class TableDataDiff(_BaseDiff):\n                 arrb.dtype, np.floating\n             ):\n                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)\n-            elif \"P\" in col.format:\n+            elif \"P\" in col.format or \"Q\" in col.format:\n                 diffs = (\n                     [\n                         idx\n                         for idx in range(len(arra))\n-                        if not np.allclose(\n-                            arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol\n-                        )\n+                        if not compare_vla_elements(arra[idx], arrb[idx])\n                     ],\n                 )\n             else:\n", "occurrence": 1}
