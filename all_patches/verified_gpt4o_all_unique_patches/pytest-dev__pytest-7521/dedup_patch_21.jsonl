{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7521", "model_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 230e591..c8a2d9c 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -171,7 +171,7 @@ class SysCaptureBinary:\n class SysCapture(SysCaptureBinary):\n     EMPTY_BUFFER = ''\n     def snap(self):\n-        res = self.tmpfile.getvalue()\n+        res = self.tmpfile.getvalue().replace('\\n', '\\r\\n').replace('\\r\\r\\n', '\\r')\n         self.tmpfile.seek(0)\n         self.tmpfile.truncate()\n         return res\n@@ -252,7 +252,7 @@ class FDCapture(FDCaptureBinary):\n     def snap(self):\n         self._assert_state('snap', ('started', 'suspended'))\n         self.tmpfile.seek(0)\n-        res = self.tmpfile.read()\n+        res = self.tmpfile.read().replace('\\n', '\\r\\n').replace('\\r\\r\\n', '\\r')\n         self.tmpfile.seek(0)\n         self.tmpfile.truncate()\n         return res\n@@ -467,7 +467,7 @@ class CaptureFixture:\n             captured_err += err\n         self._captured_out = self.captureclass.EMPTY_BUFFER\n         self._captured_err = self.captureclass.EMPTY_BUFFER\n-        return CaptureResult(captured_out, captured_err)\n+        return CaptureResult(captured_out.replace('\\n', '\\r\\n').replace('\\r\\r\\n', '\\r'), captured_err.replace('\\n', '\\r\\n').replace('\\r\\r\\n', '\\r'))\n     def _suspend(self) -> None:\n         if self._capture is not None:\n             self._capture.suspend_capturing()"}
