{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7521", "model_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 230e591..c7ce982 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -166,7 +166,7 @@ class SysCaptureBinary:\n     def writeorg(self, data) -> None:\n         self._assert_state('writeorg', ('started', 'suspended'))\n         self._old.flush()\n-        self._old.buffer.write(data)\n+        self._old.buffer.write(data.replace(b'\\r', b'\\r'))\n         self._old.buffer.flush()\n class SysCapture(SysCaptureBinary):\n     EMPTY_BUFFER = ''\n@@ -177,7 +177,7 @@ class SysCapture(SysCaptureBinary):\n         return res\n     def writeorg(self, data):\n         self._assert_state('writeorg', ('started', 'suspended'))\n-        self._old.write(data)\n+        self._old.write(data.replace('\\r', '\\r'))\n         self._old.flush()\n class FDCaptureBinary:\n     EMPTY_BUFFER = b''\n@@ -257,7 +257,7 @@ class FDCapture(FDCaptureBinary):\n         self.tmpfile.truncate()\n         return res\n     def writeorg(self, data):\n-        super().writeorg(data.encode('utf-8'))\n+        super().writeorg(data.replace('\\r', '\\r').encode('utf-8'))\n CaptureResult = collections.namedtuple('CaptureResult', ['out', 'err'])\n class MultiCapture:\n     _state = None"}
