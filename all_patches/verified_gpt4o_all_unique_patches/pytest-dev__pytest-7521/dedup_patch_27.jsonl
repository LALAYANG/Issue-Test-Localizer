{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7521", "model_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex f40cad0..de16b5a 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -327,10 +327,10 @@ class SysCaptureBinary:\n     def writeorg(self, data) -> None:\n         self._assert_state(\"writeorg\", (\"started\", \"suspended\"))\n         self._old.flush()\n-        self._old.buffer.write(data)\n+        # Modify the data to preserve \\r characters correctly\n+        self._old.buffer.write(data.replace(b'\\r', b'\\r'))\n         self._old.buffer.flush()\n \n-\n class SysCapture(SysCaptureBinary):\n     EMPTY_BUFFER = \"\"  # type: ignore[assignment]\n \n@@ -342,10 +342,10 @@ class SysCapture(SysCaptureBinary):\n \n     def writeorg(self, data):\n         self._assert_state(\"writeorg\", (\"started\", \"suspended\"))\n-        self._old.write(data)\n+        # Modify the data to preserve \\r characters correctly\n+        self._old.write(data.replace('\\r', '\\r'))\n         self._old.flush()\n \n-\n class FDCaptureBinary:\n     \"\"\"Capture IO to/from a given os-level filedescriptor.\n \n@@ -485,8 +485,8 @@ class FDCapture(FDCaptureBinary):\n \n     def writeorg(self, data):\n         \"\"\" write to original file descriptor. \"\"\"\n-        super().writeorg(data.encode(\"utf-8\"))  # XXX use encoding of original stream\n-\n+        # Modify the data to preserve \\r characters correctly\n+        super().writeorg(data.replace('\\r', '\\r').encode(\"utf-8\"))  # XXX use encoding of original stream\n \n # MultiCapture\n \n", "occurrence": 1}
