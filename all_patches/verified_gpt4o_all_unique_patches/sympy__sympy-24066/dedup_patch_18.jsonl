{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24066", "model_patch": "diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py\nindex 33c8d4e..c91381c 100644\n--- a/sympy/physics/units/unitsystem.py\n+++ b/sympy/physics/units/unitsystem.py\n@@ -117,7 +117,11 @@ class UnitSystem(_QuantityMapper):\n             return (factor, dim)\n         elif isinstance(expr, Function):\n             fds = [self._collect_factor_and_dimension(arg) for arg in expr.args]\n-            return (expr.func(*(f[0] for f in fds)), *(d[1] for d in fds))\n+            args_factors_dims = [self._collect_factor_and_dimension(arg) for arg in expr.args]\n+            factors, dims = zip(*args_factors_dims)\n+            if all((self.get_dimension_system().is_dimensionless(d) for d in dims)):\n+                return (expr.func(*factors), Dimension(1))\n+            return (expr.func(*factors), expr.func(*dims))\n         elif isinstance(expr, Dimension):\n             return (S.One, expr)\n         else:"}
