{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24066", "model_patch": "diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py\nindex 33c8d4e..d030bb0 100644\n--- a/sympy/physics/units/unitsystem.py\n+++ b/sympy/physics/units/unitsystem.py\n@@ -117,7 +117,12 @@ class UnitSystem(_QuantityMapper):\n             return (factor, dim)\n         elif isinstance(expr, Function):\n             fds = [self._collect_factor_and_dimension(arg) for arg in expr.args]\n-            return (expr.func(*(f[0] for f in fds)), *(d[1] for d in fds))\n+            factor, dim = (expr.func(*(f[0] for f in fds)), Dimension(1))\n+            for d in fds:\n+                dim *= d[1]\n+            if expr.func == exp and self.get_dimension_system().is_dimensionless(dim):\n+                return (factor, Dimension(1))\n+            return (factor, dim)\n         elif isinstance(expr, Dimension):\n             return (S.One, expr)\n         else:"}
