{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24066", "model_patch": "diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py\nindex 33c8d4e..e39ca12 100644\n--- a/sympy/physics/units/unitsystem.py\n+++ b/sympy/physics/units/unitsystem.py\n@@ -117,7 +117,13 @@ class UnitSystem(_QuantityMapper):\n             return (factor, dim)\n         elif isinstance(expr, Function):\n             fds = [self._collect_factor_and_dimension(arg) for arg in expr.args]\n-            return (expr.func(*(f[0] for f in fds)), *(d[1] for d in fds))\n+            func_factor = expr.func(*(f[0] for f in fds))\n+            func_dim = Dimension(1)\n+            if all((self.get_dimension_system().is_dimensionless(d[1]) for d in fds)):\n+                func_dim = Dimension(1)\n+            else:\n+                func_dim = expr.func(*(d[1] for d in fds))\n+            return (func_factor, func_dim)\n         elif isinstance(expr, Dimension):\n             return (S.One, expr)\n         else:"}
