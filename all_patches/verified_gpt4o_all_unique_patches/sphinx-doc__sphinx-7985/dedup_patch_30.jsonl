{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7985", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 4e6b0df..b3417ea 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -212,7 +212,7 @@ class CheckExternalLinksBuilder(Builder):\n             # check for various conditions without bothering the network\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return 'unchecked', '', 0\n-            elif not uri.startswith(('http:', 'https:')):\n+            elif not uri.startswith(('http:', 'https:')) and not self.is_local_uri(uri):\n                 return 'local', '', 0\n             elif uri in self.good:\n                 return 'working', 'old', 0\n@@ -299,6 +299,11 @@ class CheckExternalLinksBuilder(Builder):\n                              lineno, uri + ' to ' + info)\n             self.write_linkstat(linkstat)\n \n+    def is_local_uri(self, uri: str) -> bool:\n+        \"\"\"Check if the URI is a local file within the documentation.\"\"\"\n+        rel_fn, abs_fn = self.env.relfn2path(uri, self.env.docname)\n+        return path.isfile(abs_fn)\n+\n     def get_target_uri(self, docname: str, typ: str = None) -> str:\n         return ''\n \n"}
