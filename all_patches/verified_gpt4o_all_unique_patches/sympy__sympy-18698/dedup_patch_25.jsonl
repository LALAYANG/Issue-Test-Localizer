{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..aa23cef 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -105,17 +105,27 @@ def dup_sqf_list(f, K, all=False):\n     if dup_degree(f) <= 0:\n         return (coeff, [])\n     result, i = ([], 1)\n+    last_factor = None\n     h = dup_diff(f, 1, K)\n     g, p, q = dup_inner_gcd(f, h, K)\n     while True:\n         d = dup_diff(p, 1, K)\n         h = dup_sub(q, d, K)\n         if not h:\n-            result.append((p, i))\n+            if last_factor and last_factor[1] == i:\n+                last_factor = (dup_mul(last_factor[0], p, K), i)\n+                result[-1] = last_factor\n+            else:\n+                result.append((p, i))\n             break\n         g, p, q = dup_inner_gcd(p, h, K)\n         if all or dup_degree(g) > 0:\n-            result.append((g, i))\n+            if last_factor and last_factor[1] == i:\n+                last_factor = (dup_mul(last_factor[0], g, K), i)\n+                result[-1] = last_factor\n+            else:\n+                result.append((g, i))\n+                last_factor = (g, i)\n         i += 1\n     return (coeff, result)\n def dup_sqf_list_include(f, K, all=False):"}
