{"model_name_or_path": "agentless", "instance_id": "django__django-15128", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex c6ee433..e246b38 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -332,7 +332,15 @@ class Query(BaseExpression):\n         joinpromoter = JoinPromoter(connector, 2, False)\n         joinpromoter.add_votes((j for j in self.alias_map if self.alias_map[j].join_type == INNER))\n         rhs_votes = set()\n+        def unique_alias(existing_aliases, base_alias):\n+            suffix = 1\n+            new_alias = base_alias\n+            while new_alias in existing_aliases or new_alias in change_map.values():\n+                new_alias = f'{base_alias}{suffix}'\n+                suffix += 1\n+            return new_alias\n         rhs_tables = list(rhs.alias_map)[1:]\n+        existing_aliases = set(self.alias_map)\n         for alias in rhs_tables:\n             join = rhs.alias_map[alias]\n             join = join.relabeled_clone(change_map)\n@@ -341,7 +349,9 @@ class Query(BaseExpression):\n                 rhs_votes.add(new_alias)\n             reuse.discard(new_alias)\n             if alias != new_alias:\n+                new_alias = unique_alias(existing_aliases, new_alias)\n                 change_map[alias] = new_alias\n+                existing_aliases.add(new_alias)\n             if not rhs.alias_refcount[alias]:\n                 self.unref_alias(new_alias)\n         joinpromoter.add_votes(rhs_votes)"}
