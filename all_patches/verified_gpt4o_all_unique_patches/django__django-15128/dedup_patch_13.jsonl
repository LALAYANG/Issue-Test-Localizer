{"model_name_or_path": "agentless", "instance_id": "django__django-15128", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex c6ee433..7b2f83c 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -333,10 +333,13 @@ class Query(BaseExpression):\n         joinpromoter.add_votes((j for j in self.alias_map if self.alias_map[j].join_type == INNER))\n         rhs_votes = set()\n         rhs_tables = list(rhs.alias_map)[1:]\n+        existing_aliases = set(self.alias_map).union(set(rhs.alias_map))\n         for alias in rhs_tables:\n             join = rhs.alias_map[alias]\n             join = join.relabeled_clone(change_map)\n             new_alias = self.join(join, reuse=reuse)\n+            while new_alias in existing_aliases:\n+                new_alias = '%s%d' % (self.alias_prefix, len(self.alias_map) + 1)\n             if join.join_type == INNER:\n                 rhs_votes.add(new_alias)\n             reuse.discard(new_alias)\n@@ -344,6 +347,7 @@ class Query(BaseExpression):\n                 change_map[alias] = new_alias\n             if not rhs.alias_refcount[alias]:\n                 self.unref_alias(new_alias)\n+            existing_aliases.add(new_alias)\n         joinpromoter.add_votes(rhs_votes)\n         joinpromoter.update_join_types(self)\n         self.subq_aliases |= rhs.subq_aliases"}
