{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10081", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex c60e5c9..04c1093 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -196,14 +196,15 @@ class TestCaseFunction(Function):\n         if is_async_function(self.obj):\n             self._testcase(result=self)\n         else:\n-            if self.config.getoption('usepdb') and (not _is_skipped(self.obj)):\n+            if self.config.getoption('usepdb') and (not _is_skipped(self._testcase)):\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, 'tearDown', lambda *args: None)\n             setattr(self._testcase, self.name, self.obj)\n-            try:\n-                self._testcase(result=self)\n-            finally:\n-                delattr(self._testcase, self.name)\n+            if not _is_skipped(self._testcase):\n+                try:\n+                    self._testcase(result=self)\n+                finally:\n+                    delattr(self._testcase, self.name)\n     def _prunetraceback(self, excinfo: _pytest._code.ExceptionInfo[BaseException]) -> None:\n         super()._prunetraceback(excinfo)\n         traceback = excinfo.traceback.filter(lambda x: not x.frame.f_globals.get('__unittest'))"}
