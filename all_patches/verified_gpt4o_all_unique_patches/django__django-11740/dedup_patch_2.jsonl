{"model_name_or_path": "agentless", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..077fcc1 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -512,6 +512,7 @@ class MigrationAutodetector:\n                 self.add_operation(app_label, operations.RemoveConstraint(model_name=model_name, name=constraint.name))\n     def _get_dependencies_for_foreign_key(self, field):\n         swappable_setting = getattr(field, 'swappable_setting', None)\n+        dep_app_label, dep_object_name = (None, None)\n         if swappable_setting is not None:\n             dep_app_label = '__setting__'\n             dep_object_name = swappable_setting\n@@ -521,6 +522,7 @@ class MigrationAutodetector:\n         dependencies = [(dep_app_label, dep_object_name, None, True)]\n         if getattr(field.remote_field, 'through', None) and (not field.remote_field.through._meta.auto_created):\n             dependencies.append((field.remote_field.through._meta.app_label, field.remote_field.through._meta.object_name, None, True))\n+        dependencies.append((field.remote_field.model._meta.app_label, field.remote_field.model._meta.object_name, None, True))\n         return dependencies\n     def _generate_altered_foo_together(self, operation):\n         option_name = operation.option_name"}
