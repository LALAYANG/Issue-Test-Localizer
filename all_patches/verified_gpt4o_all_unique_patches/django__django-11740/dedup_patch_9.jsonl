{"model_name_or_path": "agentless", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..26efc9c 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -51,6 +51,19 @@ class MigrationAutodetector:\n                 del deconstruction[2]['to']\n             fields_def.append(deconstruction)\n         return fields_def\n+    def generate_altered_fields(self):\n+        for app_label, model_name in sorted(self.kept_model_keys):\n+            old_model_name = self.renamed_models.get((app_label, model_name), model_name)\n+            old_model_state = self.from_state.models[app_label, old_model_name]\n+            new_model_state = self.to_state.models[app_label, model_name]\n+            for field_name, field in old_model_state.fields:\n+                if (app_label, model_name, field_name) not in self.new_field_keys:\n+                    continue\n+                old_field = self.old_apps.get_model(app_label, old_model_name)._meta.get_field(field_name)\n+                new_field = self.new_apps.get_model(app_label, model_name)._meta.get_field(field_name)\n+                dependencies = self._get_dependencies_for_foreign_key(new_field)\n+                if self._fields_differ(old_field, new_field):\n+                    self.add_operation(app_label, operations.AlterField(model_name=model_name, name=field_name, field=new_field), dependencies=dependencies)\n     def _detect_changes(self, convert_apps=None, graph=None):\n         self.generated_operations = {}\n         self.altered_indexes = {}"}
