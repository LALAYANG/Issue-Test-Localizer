{"model_name_or_path": "agentless", "instance_id": "django__django-16642", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex b918697..b0bfdb5 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -606,13 +606,19 @@ class FileResponse(StreamingHttpResponse):\n         if self._no_explicit_content_type:\n             if filename:\n                 content_type, encoding = mimetypes.guess_type(filename)\n-                # Encoding isn't set to prevent browsers from automatically\n-                # uncompressing files.\n-                content_type = {\n-                    \"bzip2\": \"application/x-bzip\",\n-                    \"gzip\": \"application/gzip\",\n-                    \"xz\": \"application/x-xz\",\n-                }.get(encoding, content_type)\n+                # Custom handling for specific encodings and extensions.\n+                extension_to_type = {\n+                    \"br\": \"application/x-brotli\",\n+                    \"Z\": \"application/x-compress\",\n+                }\n+                if filename.split('.')[-1] in extension_to_type:\n+                    content_type = extension_to_type[filename.split('.')[-1]]\n+                else:\n+                    content_type = {\n+                        \"bzip2\": \"application/x-bzip\",\n+                        \"gzip\": \"application/gzip\",\n+                        \"xz\": \"application/x-xz\",\n+                    }.get(encoding, content_type)\n                 self.headers[\"Content-Type\"] = (\n                     content_type or \"application/octet-stream\"\n                 )\n", "occurrence": 1}
