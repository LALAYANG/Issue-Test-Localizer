{"model_name_or_path": "agentless", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 215532d..c63f264 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -473,6 +473,14 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         sql = connection.ops.combine_expression(self.connector, expressions)\n         return expression_wrapper % sql, expression_params\n \n+\n+class TemporalAddition(CombinedExpression):\n+    def as_sql(self, compiler, connection):\n+        connection.ops.check_expression_support(self)\n+        lhs = compiler.compile(self.lhs)\n+        rhs = compiler.compile(self.rhs)\n+        return connection.ops.add_temporal_duration(self.lhs.output_field.get_internal_type(), lhs, rhs)\n+\n     def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):\n         c = self.copy()\n         c.is_summary = summarize\n@@ -509,6 +517,14 @@ class DurationExpression(CombinedExpression):\n         return expression_wrapper % sql, expression_params\n \n \n+class TemporalAddition(CombinedExpression):\n+    def as_sql(self, compiler, connection):\n+        connection.ops.check_expression_support(self)\n+        lhs = compiler.compile(self.lhs)\n+        rhs = compiler.compile(self.rhs)\n+        return connection.ops.add_temporal_duration(self.lhs.output_field.get_internal_type(), lhs, rhs)\n+\n+\n class TemporalSubtraction(CombinedExpression):\n     output_field = fields.DurationField()\n \n", "occurrence": 1}
