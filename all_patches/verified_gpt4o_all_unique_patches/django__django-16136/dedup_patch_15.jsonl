{"model_name_or_path": "agentless", "instance_id": "django__django-16136", "model_patch": "diff --git a/django/core/handlers/exception.py b/django/core/handlers/exception.py\nindex 1832412..e2e8ce3 100644\n--- a/django/core/handlers/exception.py\n+++ b/django/core/handlers/exception.py\n@@ -62,7 +62,10 @@ def response_for_exception(request, exc):\n         response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\n         log_response('%s: %s', response.reason_phrase, request.path, response=response, request=request, exception=exc)\n     if not getattr(response, 'is_rendered', True) and callable(getattr(response, 'render', None)):\n-        response = response.render()\n+        if asyncio.iscoroutinefunction(response.render):\n+            response = await response.render()\n+        else:\n+            response = response.render()\n     return response\n def get_exception_response(request, resolver, status_code, exception):\n     try:"}
