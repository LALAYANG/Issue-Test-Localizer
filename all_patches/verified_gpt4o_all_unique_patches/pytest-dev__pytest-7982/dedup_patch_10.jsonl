{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7982", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex e00a6f3..bb16246 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -519,7 +519,7 @@ class Session(nodes.FSCollector):\n     def _recurse(self, direntry: \"os.DirEntry[str]\") -> bool:\n         if direntry.name == \"__pycache__\":\n             return False\n-        path = py.path.local(direntry.path)\n+        path = py.path.local(direntry.path, follow=True)\n         ihook = self.gethookproxy(path.dirpath())\n         if ihook.pytest_ignore_collect(path=path, config=self.config):\n             return False\n@@ -532,7 +532,7 @@ class Session(nodes.FSCollector):\n         self, path: py.path.local, handle_dupes: bool = True\n     ) -> Sequence[nodes.Collector]:\n         assert (\n-            path.isfile()\n+            path.isfile() or path.islink()\n         ), \"{!r} is not a file (isdir={!r}, exists={!r}, islink={!r})\".format(\n             path, path.isdir(), path.exists(), path.islink()\n         )\n"}
