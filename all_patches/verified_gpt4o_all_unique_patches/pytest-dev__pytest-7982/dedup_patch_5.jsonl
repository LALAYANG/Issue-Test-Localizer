{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7982", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex df5c6f0..6961fd9 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -314,7 +314,7 @@ class Session(nodes.FSCollector):\n         norecursepatterns = self.config.getini('norecursedirs')\n         if any((path.check(fnmatch=pat) for pat in norecursepatterns)):\n             return False\n-        return True\n+        return True if not path.islink() else path.isdir()\n \n     def _collectfile(self, path: py.path.local, handle_dupes: bool=True) -> Sequence[nodes.Collector]:\n         assert path.isfile(), '{!r} is not a file (isdir={!r}, exists={!r}, islink={!r})'.format(path, path.isdir(), path.exists(), path.islink())"}
