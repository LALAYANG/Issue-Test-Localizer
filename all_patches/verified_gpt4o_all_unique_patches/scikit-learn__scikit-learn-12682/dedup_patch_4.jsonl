{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-12682", "model_patch": "diff --git a/sklearn/decomposition/dict_learning.py b/sklearn/decomposition/dict_learning.py\nindex 8cfbe5f..3e459ee 100644\n--- a/sklearn/decomposition/dict_learning.py\n+++ b/sklearn/decomposition/dict_learning.py\n@@ -933,7 +933,7 @@ class SparseCoder(BaseEstimator, SparseCodingMixin):\n         normalized to unit norm.\n \n     transform_algorithm : {'lasso_lars', 'lasso_cd', 'lars', 'omp', \\\n-    'threshold'}\n+    'threshold'}, transform_max_iter=1000\n         Algorithm used to transform the data:\n         lars: uses the least angle regression method (linear_model.lars_path)\n         lasso_lars: uses Lars to compute the Lasso solution\n@@ -995,9 +995,10 @@ class SparseCoder(BaseEstimator, SparseCodingMixin):\n         self._set_sparse_coding_params(dictionary.shape[0],\n                                        transform_algorithm,\n                                        transform_n_nonzero_coefs,\n-                                       transform_alpha, split_sign, n_jobs,\n+                                       transform_alpha, split_sign, n_jobs, transform_max_iter,\n                                        positive_code)\n         self.components_ = dictionary\n+        self.transform_max_iter = transform_max_iter\n \n     def fit(self, X, y=None):\n         \"\"\"Do nothing and return the estimator unchanged\n"}
