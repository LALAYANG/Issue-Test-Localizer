{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-12682", "model_patch": "diff --git a/sklearn/decomposition/dict_learning.py b/sklearn/decomposition/dict_learning.py\nindex 8cfbe5f..cf5f227 100644\n--- a/sklearn/decomposition/dict_learning.py\n+++ b/sklearn/decomposition/dict_learning.py\n@@ -140,7 +140,7 @@ def _sparse_encode(X, dictionary, gram, cov=None, algorithm='lasso_lars',\n         # sklearn.linear_model.coordinate_descent.enet_path has a verbosity\n         # argument that we could pass in from Lasso.\n         clf = Lasso(alpha=alpha, fit_intercept=False, normalize=False,\n-                    precompute=gram, max_iter=max_iter, warm_start=True,\n+                    precompute=gram, max_iter=self.max_iter, warm_start=True,\n                     positive=positive)\n \n         if init is not None:\n@@ -991,7 +991,8 @@ class SparseCoder(BaseEstimator, SparseCodingMixin):\n \n     def __init__(self, dictionary, transform_algorithm='omp',\n                  transform_n_nonzero_coefs=None, transform_alpha=None,\n-                 split_sign=False, n_jobs=None, positive_code=False):\n+                 split_sign=False, n_jobs=None, positive_code=False, max_iter=1000):\n+        self.max_iter = max_iter\n         self._set_sparse_coding_params(dictionary.shape[0],\n                                        transform_algorithm,\n                                        transform_n_nonzero_coefs,\n"}
