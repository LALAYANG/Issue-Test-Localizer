{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7490", "model_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex d85ae4c..6215173 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -136,6 +136,9 @@ def pytest_runtest_call(item: Item) -> Generator[None, None, None]:\n         if xfailed and (not xfailed.run):\n             xfail('[NOTRUN] ' + xfailed.reason)\n     yield\n+    xfailed = item._store.get(xfailed_key, None)\n+    if xfailed and (not xfailed.run):\n+        xfail('[NOTRUN] ' + xfailed.reason)\n @hookimpl(hookwrapper=True)\n def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n     outcome = (yield)\n@@ -154,7 +157,7 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n         assert call.excinfo.value.msg is not None\n         rep.wasxfail = 'reason: ' + call.excinfo.value.msg\n         rep.outcome = 'skipped'\n-    elif not rep.skipped and xfailed:\n+    elif not rep.skipped and xfailed and call.excinfo:\n         if call.excinfo:\n             raises = xfailed.raises\n             if raises is not None and (not isinstance(call.excinfo.value, raises)):"}
