{"model_name_or_path": "agentless", "instance_id": "django__django-14315", "model_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex 21cffbe..a3d5673 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -28,21 +28,8 @@ class DatabaseClient(BaseDatabaseClient):\n         if dbname:\n             args += [dbname]\n         args.extend(parameters)\n-        env = {}\n-        if passwd:\n-            env['PGPASSWORD'] = str(passwd)\n-        if service:\n-            env['PGSERVICE'] = str(service)\n-        if sslmode:\n-            env['PGSSLMODE'] = str(sslmode)\n-        if sslrootcert:\n-            env['PGSSLROOTCERT'] = str(sslrootcert)\n-        if sslcert:\n-            env['PGSSLCERT'] = str(sslcert)\n-        if sslkey:\n-            env['PGSSLKEY'] = str(sslkey)\n-        if passfile:\n-            env['PGPASSFILE'] = str(passfile)\n+        env = {k: v for k, v in [('PGPASSWORD', str(passwd) if passwd else None), ('PGSERVICE', str(service) if service else None), ('PGSSLMODE', str(sslmode) if sslmode else None), ('PGSSLROOTCERT', str(sslrootcert) if sslrootcert else None), ('PGSSLCERT', str(sslcert) if sslcert else None), ('PGSSLKEY', str(sslkey) if sslkey else None), ('PGPASSFILE', str(passfile) if passfile else None)] if v is not None}\n+        env = env if env else None\n         return (args, env)\n     def runshell(self, parameters):\n         sigint_handler = signal.getsignal(signal.SIGINT)"}
