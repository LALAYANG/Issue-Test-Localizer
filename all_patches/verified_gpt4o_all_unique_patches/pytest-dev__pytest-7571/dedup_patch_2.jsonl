{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7571", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 862b163..46f0198 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -188,17 +188,21 @@ class LogCaptureFixture:\n     def clear(self) -> None:\n         self.handler.reset()\n     def set_level(self, level: Union[int, str], logger: Optional[str]=None) -> None:\n+        self._initial_handler_level = self.handler.level\n         logger_obj = logging.getLogger(logger)\n         self._initial_logger_levels.setdefault(logger, logger_obj.level)\n         logger_obj.setLevel(level)\n         self.handler.setLevel(level)\n+        request.addfinalizer(self._restore_log_levels)\n     @contextmanager\n     def at_level(self, level: int, logger: Optional[str]=None) -> Generator[None, None, None]:\n+        self._initial_handler_level = self.handler.level\n         logger_obj = logging.getLogger(logger)\n         orig_level = logger_obj.level\n         logger_obj.setLevel(level)\n         handler_orig_level = self.handler.level\n         self.handler.setLevel(level)\n+        request.addfinalizer(self._restore_log_levels)\n         try:\n             yield\n         finally:"}
