{"model_name_or_path": "agentless", "instance_id": "django__django-11087", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex f42ced6..98327e9 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -75,7 +75,7 @@ class Collector:\n             return [objs[i:i + conn_batch_size] for i in range(0, len(objs), conn_batch_size)]\n         else:\n             return [objs]\n-    def collect(self, objs, source=None, nullable=False, collect_related=True, source_attr=None, reverse_dependency=False, keep_parents=False):\n+    def collect(self, objs, source=None, nullable=False, collect_related=True, source_attr=None, reverse_dependency=False, keep_parents=False, collect_only_pks=False):\n         if self.can_fast_delete(objs):\n             self.fast_deletes.append(objs)\n             return\n@@ -99,7 +99,7 @@ class Collector:\n                     continue\n                 batches = self.get_del_batches(new_objs, field)\n                 for batch in batches:\n-                    sub_objs = self.related_objects(related, batch)\n+                    sub_objs = self.related_objects(related, batch, only=['pk'])\n                     if self.can_fast_delete(sub_objs, from_field=field):\n                         self.fast_deletes.append(sub_objs)\n                     elif sub_objs:"}
