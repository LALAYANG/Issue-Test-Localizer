{"model_name_or_path": "agentless", "instance_id": "django__django-11087", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 0bd756b..9f87e56 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -167,7 +167,7 @@ class Collector:\n             return [objs]\n \n     def collect(self, objs, source=None, nullable=False, collect_related=True,\n-                source_attr=None, reverse_dependency=False, keep_parents=False):\n+                source_attr=None, reverse_dependency=False, keep_parents=False, collect_only_pks=False):\n         \"\"\"\n         Add 'objs' to the collection of objects to be deleted as well as all\n         parent instances.  'objs' must be a homogeneous iterable collection of\n@@ -217,7 +217,7 @@ class Collector:\n                     continue\n                 batches = self.get_del_batches(new_objs, field)\n                 for batch in batches:\n-                    sub_objs = self.related_objects(related, batch)\n+                    sub_objs = self.related_objects(related, batch, only=[\"pk\"])\n                     if self.can_fast_delete(sub_objs, from_field=field):\n                         self.fast_deletes.append(sub_objs)\n                     elif sub_objs:\n", "occurrence": 1}
