{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8595", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex af206f1..6846765 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -536,7 +536,7 @@ class ModuleDocumenter(Documenter):\n         ret = super().import_object(raiseerror)\n         try:\n             if not self.options.ignore_module_all:\n-                self.__all__ = inspect.getall(self.object)\n+                self.__all__ = inspect.getmembers(self.object) if hasattr(self.object, '__all__') else []\n         except AttributeError as exc:\n             logger.warning(__('%s.__all__ raises an error. Ignored: %r'), (self.fullname, exc), type='autodoc')\n         except ValueError as exc:\n@@ -575,7 +575,7 @@ class ModuleDocumenter(Documenter):\n     def get_object_members(self, want_all: bool) -> Tuple[bool, ObjectMembers]:\n         members = self.get_module_members()\n         if want_all:\n-            if not self.__all__:\n+            if not hasattr(self, '__all__') or not self.__all__:\n                 return (True, list(members.values()))\n             else:\n                 for member in members.values():"}
