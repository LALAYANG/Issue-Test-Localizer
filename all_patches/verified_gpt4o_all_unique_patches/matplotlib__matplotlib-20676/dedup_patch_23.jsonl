{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..7edf497 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1735,6 +1735,7 @@ class SpanSelector(_SelectorWidget):\n         props = dict(color=rectprops.get('facecolor', 'r'))\n         props.update(cbook.normalize_kwargs(handle_props, Line2D._alias_map))\n         if self._interactive:\n+            self.ax.set_autoscale_on(False)\n             self._edge_order = ['min', 'max']\n             self._setup_edge_handle(props)\n         self._active_handle = None\n@@ -1755,6 +1756,7 @@ class SpanSelector(_SelectorWidget):\n             self.canvas = ax.figure.canvas\n             self.connect_default_events()\n         if self.direction == 'horizontal':\n+            self.ax.set_xlim(self.ax.get_xlim())\n             trans = ax.get_xaxis_transform()\n             w, h = (0, 1)\n         else:\n@@ -1832,6 +1834,7 @@ class SpanSelector(_SelectorWidget):\n         self._prev = self._get_data(event)\n         v = event.xdata if self.direction == 'horizontal' else event.ydata\n         if self.direction == 'horizontal':\n+            self.ax.set_xlim(self.ax.get_xlim())\n             vpress = self._eventpress.xdata\n         else:\n             vpress = self._eventpress.ydata\n@@ -1859,6 +1862,7 @@ class SpanSelector(_SelectorWidget):\n         if vmin > vmax:\n             vmin, vmax = (vmax, vmin)\n         if self.direction == 'horizontal':\n+            self.ax.set_xlim(self.ax.get_xlim())\n             self._rect.set_x(vmin)\n             self._rect.set_width(vmax - vmin)\n         else:\n@@ -1890,6 +1894,7 @@ class SpanSelector(_SelectorWidget):\n     def extents(self):\n         \"\"\"Return extents of the span selector.\"\"\"\n         if self.direction == 'horizontal':\n+            self.ax.set_xlim(self.ax.get_xlim())\n             vmin = self._rect.get_x()\n             vmax = vmin + self._rect.get_width()\n         else:\n@@ -1901,6 +1906,7 @@ class SpanSelector(_SelectorWidget):\n     def extents(self, extents):\n         self._draw_shape(*extents)\n         if self._interactive:\n+            self.ax.set_autoscale_on(False)\n             self._edge_handles.set_data(self.extents)\n         self.set_visible(self.visible)\n         self.update()"}
