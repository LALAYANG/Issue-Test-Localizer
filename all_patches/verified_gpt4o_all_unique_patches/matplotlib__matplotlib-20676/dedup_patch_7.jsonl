{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..3e00995 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2184,7 +2184,14 @@ class SpanSelector(_SelectorWidget):\n             # visibility to False and extents to (v, v)\n             # update will be called when setting the extents\n             self.visible = False\n-            self.extents = v, v\n+            # Ensure the extents do not force the axes to include 0\n+            if self.direction == 'horizontal':\n+                vmin = max(v, self.ax.get_xlim()[0])\n+                vmax = min(v, self.ax.get_xlim()[1])\n+            else:\n+                vmin = max(v, self.ax.get_ylim()[0])\n+                vmax = min(v, self.ax.get_ylim()[1])\n+            self.extents = vmin, vmax\n             # We need to set the visibility back, so the span selector will be\n             # drawn when necessary (span width > 0)\n             self.visible = True\n@@ -2270,6 +2277,13 @@ class SpanSelector(_SelectorWidget):\n             if vmin > vmax:\n                 vmin, vmax = vmax, vmin\n \n+        # Ensure the extents do not force the axes to include 0\n+        if self.direction == 'horizontal':\n+            vmin = max(vmin, self.ax.get_xlim()[0])\n+            vmax = min(vmax, self.ax.get_xlim()[1])\n+        else:\n+            vmin = max(vmin, self.ax.get_ylim()[0])\n+            vmax = min(vmax, self.ax.get_ylim()[1])\n         self.extents = vmin, vmax\n \n         if self.onmove_callback is not None:\n"}
