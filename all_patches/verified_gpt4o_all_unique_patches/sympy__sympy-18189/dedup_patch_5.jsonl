{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18189", "model_patch": "diff --git a/sympy/solvers/diophantine.py b/sympy/solvers/diophantine.py\nindex 6132016..14818c4 100644\n--- a/sympy/solvers/diophantine.py\n+++ b/sympy/solvers/diophantine.py\n@@ -72,7 +72,8 @@ def diophantine(eq, param=symbols('t', integer=True), syms=None, permute=False):\n             syms = [i for i in syms if i in var]\n             if syms != var:\n                 dict_sym_index = dict(zip(syms, range(len(syms))))\n-                return {tuple([t[dict_sym_index[i]] for i in var]) for t in diophantine(eq, param)}\n+                perm_sols = diophantine(eq, param)\n+                return {tuple([p[dict_sym_index[i]] for i in var]) for sol in perm_sols for p in signed_permutations(sol) if permute and all((_is_int(x) for x in p)) or not permute}\n         n, d = eq.as_numer_denom()\n         if n.is_number:\n             return set()"}
