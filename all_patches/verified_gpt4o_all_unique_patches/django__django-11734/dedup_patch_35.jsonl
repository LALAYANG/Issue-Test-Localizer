{"model_name_or_path": "agentless", "instance_id": "django__django-11734", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1541d76..bf2c412 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -537,9 +537,15 @@ class QuerySet:\n             assert not self.query.is_sliced, 'Cannot filter a query once a slice has been taken.'\n         clone = self._chain()\n         if negate:\n-            clone.query.add_q(~Q(*args, **kwargs))\n+            new_q = ~Q(*args, **kwargs)\n         else:\n-            clone.query.add_q(Q(*args, **kwargs))\n+            new_q = Q(*args, **kwargs)\n+        def wrap_outer_ref(expr):\n+            if isinstance(expr, OuterRef):\n+                return Subquery(Item.objects.filter(pk=expr))\n+            return expr\n+        new_q = new_q.resolve_expression(wrapper=wrap_outer_ref)\n+        clone.query.add_q(new_q)\n         return clone\n     def complex_filter(self, filter_obj):\n         if isinstance(filter_obj, Q):"}
