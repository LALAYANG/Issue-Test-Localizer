{"model_name_or_path": "agentless", "instance_id": "django__django-11734", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex d6b917d..8af5243 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -665,9 +665,13 @@ class Exists(Subquery):\n         clone.negated = not self.negated\n         return clone\n     def as_sql(self, compiler, connection, template=None, **extra_context):\n+        if any((isinstance(arg, OuterRef) for arg in self.queryset.query.where.children)):\n+            for child in self.queryset.query.where.children:\n+                if isinstance(child, OuterRef):\n+                    child = ResolvedOuterRef(child.name)\n         sql, params = super().as_sql(compiler, connection, template, **extra_context)\n         if self.negated:\n-            sql = 'NOT {}'.format(sql)\n+            sql = 'NOT ({})'.format(sql)\n         return (sql, params)\n     def select_format(self, compiler, sql, params):\n         if not compiler.connection.features.supports_boolean_expr_in_select_clause:"}
