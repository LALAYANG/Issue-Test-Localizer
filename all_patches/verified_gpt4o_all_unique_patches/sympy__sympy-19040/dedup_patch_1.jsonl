{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19040", "model_patch": "diff --git a/sympy/polys/factortools.py b/sympy/polys/factortools.py\nindex 0bd3920..2360903 100644\n--- a/sympy/polys/factortools.py\n+++ b/sympy/polys/factortools.py\n@@ -576,6 +576,7 @@ def dup_ext_factor(f, K):\n     factors = dup_trial_division(F, factors, K)\n     return (lc, factors)\n def dmp_ext_factor(f, u, K):\n+    from sympy.polys.domains import QQ\n     if not u:\n         return dup_ext_factor(f, K)\n     lc = dmp_ground_LC(f, u, K)\n@@ -588,7 +589,10 @@ def dmp_ext_factor(f, u, K):\n     if len(factors) == 1:\n         factors = [f]\n     else:\n-        H = dmp_raise([K.one, s * K.unit], u, 0, K)\n+        if K == QQ.algebraic_field():\n+            H = dmp_raise([K.one, s * K.unit], u, 0, K)\n+        else:\n+            H = dmp_raise([K.one, s], u, 0, K)\n         for i, (factor, _) in enumerate(factors):\n             h = dmp_convert(factor, u, K.dom, K)\n             h, _, g = dmp_inner_gcd(h, g, u, K)"}
