{"model_name_or_path": "agentless", "instance_id": "django__django-14725", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 2db5c72..5379378 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -575,6 +575,7 @@ class BaseModelFormSet(BaseFormSet):\n     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n                  queryset=None, *, initial=None, **kwargs):\n         self.queryset = queryset\n+        self.can_create_new = kwargs.pop('can_create_new', True)\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n \n@@ -621,7 +622,7 @@ class BaseModelFormSet(BaseFormSet):\n                         kwargs['instance'] = self._existing_object(pk)\n             else:\n                 kwargs['instance'] = self.get_queryset()[i]\n-        elif self.initial_extra:\n+        elif self.initial_extra and self.can_create_new:\n             # Set initial values for extra forms\n             try:\n                 kwargs['initial'] = self.initial_extra[i - self.initial_form_count()]\n@@ -820,7 +821,8 @@ class BaseModelFormSet(BaseFormSet):\n             # object.\n             if self.can_delete and self._should_delete_form(form):\n                 continue\n-            self.new_objects.append(self.save_new(form, commit=commit))\n+            if self.can_create_new:\n+                self.new_objects.append(self.save_new(form, commit=commit))\n             if not commit:\n                 self.saved_forms.append(form)\n         return self.new_objects\n@@ -875,7 +877,7 @@ def modelformset_factory(model, form=ModelForm, formfield_callback=None,\n                          widgets=None, validate_max=False, localized_fields=None,\n                          labels=None, help_texts=None, error_messages=None,\n                          min_num=None, validate_min=False, field_classes=None,\n-                         absolute_max=None, can_delete_extra=True, renderer=None):\n+                         absolute_max=None, can_delete_extra=True, renderer=None, can_create_new=True):\n     \"\"\"Return a FormSet class for the given Django model class.\"\"\"\n     meta = getattr(form, 'Meta', None)\n     if (getattr(meta, 'fields', fields) is None and\n", "occurrence": 1}
