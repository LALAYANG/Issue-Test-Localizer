{"model_name_or_path": "agentless", "instance_id": "django__django-15037", "model_patch": "diff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py\nindex 09bd4a3..f9f67fe 100644\n--- a/django/core/management/commands/inspectdb.py\n+++ b/django/core/management/commands/inspectdb.py\n@@ -20,6 +20,11 @@ class Command(BaseCommand):\n         except NotImplementedError:\n             raise CommandError(\"Database inspection isn't supported for the currently selected database backend.\")\n     def handle_inspection(self, options):\n+        def get_foreign_key_rel_type(constraints, column_name):\n+            for constraint_name, constraint in constraints.items():\n+                if constraint['foreign_key'] and column_name in constraint['columns']:\n+                    return constraint['foreign_key']\n+            return None\n         connection = connections[options['database']]\n         table_name_filter = options.get('table_name_filter')\n         def table2model(table_name):\n@@ -86,10 +91,15 @@ class Command(BaseCommand):\n                         else:\n                             rel_type = 'ForeignKey'\n                         rel_to = 'self' if relations[column_name][1] == table_name else table2model(relations[column_name][1])\n-                        if rel_to in known_models:\n-                            field_type = '%s(%s' % (rel_type, rel_to)\n+                        foreign_key_rel_type = get_foreign_key_rel_type(constraints, column_name)\n+                        if foreign_key_rel_type:\n+                            rel_to_model, rel_to_field = foreign_key_rel_type\n                         else:\n-                            field_type = \"%s('%s'\" % (rel_type, rel_to)\n+                            rel_to_model, rel_to_field = (rel_to, 'id')\n+                        if rel_to_model in known_models:\n+                            field_type = '%s(%s, db_column=\"%s\"' % (rel_type, rel_to_model, rel_to_field)\n+                        else:\n+                            field_type = \"%s('%s', db_column='%s'\" % (rel_type, rel_to_model, rel_to_field)\n                     else:\n                         field_type, field_params, field_notes = self.get_field_type(connection, table_name, row)\n                         extra_params.update(field_params)"}
