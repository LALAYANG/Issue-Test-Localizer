{"model_name_or_path": "agentless", "instance_id": "django__django-10973", "model_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex 78fa5c8..d8fbce7 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -22,23 +22,16 @@ class DatabaseClient(BaseDatabaseClient):\n         if port:\n             args += ['-p', str(port)]\n         args += [dbname]\n-        temp_pgpass = None\n         sigint_handler = signal.getsignal(signal.SIGINT)\n         try:\n             if passwd:\n-                temp_pgpass = NamedTemporaryFile(mode='w+')\n-                try:\n-                    print(_escape_pgpass(host) or '*', str(port) or '*', _escape_pgpass(dbname) or '*', _escape_pgpass(user) or '*', _escape_pgpass(passwd), file=temp_pgpass, sep=':', flush=True)\n-                    os.environ['PGPASSFILE'] = temp_pgpass.name\n-                except UnicodeEncodeError:\n-                    pass\n+                env = os.environ.copy()\n+                env['PGPASSWORD'] = passwd\n+            else:\n+                env = None\n             signal.signal(signal.SIGINT, signal.SIG_IGN)\n-            subprocess.check_call(args)\n+            subprocess.run(args, env=env, check=True)\n         finally:\n             signal.signal(signal.SIGINT, sigint_handler)\n-            if temp_pgpass:\n-                temp_pgpass.close()\n-                if 'PGPASSFILE' in os.environ:\n-                    del os.environ['PGPASSFILE']\n     def runshell(self):\n         DatabaseClient.runshell_db(self.connection.get_connection_params())\n\\ No newline at end of file"}
