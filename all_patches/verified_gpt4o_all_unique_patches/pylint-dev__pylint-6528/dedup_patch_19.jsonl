{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 16c7088..c0b833e 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -217,9 +217,12 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n             return True\n         return path.endswith('.py')\n     def initialize(self) -> None:\n-        for msg in self.msgs_store.messages:\n-            if not msg.may_be_emitted():\n-                self._msgs_state[msg.msgid] = False\n+        ignore_list = self.config.ignore\n+        ignore_list_re = self.config.ignore_patterns\n+        ignore_list_paths_re = self._ignore_paths\n+        if os.path.basename(path) in ignore_list or _is_in_ignore_list_re(os.path.basename(path), ignore_list_re) or _is_in_ignore_list_re(path, ignore_list_paths_re):\n+            return False\n+        return True\n     @staticmethod\n     def _discover_files(files_or_modules: Sequence[str]) -> Iterator[str]:\n         for something in files_or_modules:"}
