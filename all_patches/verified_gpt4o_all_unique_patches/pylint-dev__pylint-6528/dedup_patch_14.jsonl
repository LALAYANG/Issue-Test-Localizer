{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 16c7088..077ad30 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -215,7 +215,13 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n     def should_analyze_file(modname: str, path: str, is_argument: bool=False) -> bool:\n         if is_argument:\n             return True\n+        basename = os.path.basename(path)\n+        if basename in self.config.ignore or self._is_in_ignore_list_re(basename, self.config.ignore_patterns) or self._is_in_ignore_list_re(path, self.config.ignore_paths):\n+            return False\n         return path.endswith('.py')\n+    @staticmethod\n+    def _is_in_ignore_list_re(element: str, ignore_list_re: list[Pattern[str]]) -> bool:\n+        return any((file_pattern.match(element) for file_pattern in ignore_list_re))\n     def initialize(self) -> None:\n         for msg in self.msgs_store.messages:\n             if not msg.may_be_emitted():"}
