{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 6763a6f..2aab9cc 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -549,8 +549,20 @@ class PyLinter(\n         \"\"\"\n         if is_argument:\n             return True\n+        basename = os.path.basename(path)\n+        if (\n+            basename in self.config.ignore\n+            or self._is_in_ignore_list_re(basename, self.config.ignore_patterns)\n+            or self._is_in_ignore_list_re(path, self.config.ignore_paths)\n+        ):\n+            return False\n         return path.endswith(\".py\")\n \n+    @staticmethod\n+    def _is_in_ignore_list_re(element: str, ignore_list_re: list[Pattern[str]]) -> bool:\n+        \"\"\"Determines if the element is matched in a regex ignore-list.\"\"\"\n+        return any(file_pattern.match(element) for file_pattern in ignore_list_re)\n+\n     # pylint: enable=unused-argument\n \n     def initialize(self) -> None:\n", "occurrence": 1}
