{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 16c7088..c007cf8 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -295,7 +295,7 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n     def _iterate_file_descrs(self, files_or_modules: Sequence[str]) -> Iterator[FileItem]:\n         for descr in self._expand_files(files_or_modules):\n             name, filepath, is_arg = (descr['name'], descr['path'], descr['isarg'])\n-            if self.should_analyze_file(name, filepath, is_argument=is_arg):\n+            if self.should_analyze_file(name, filepath, is_argument=is_arg) and (not self._is_ignored(filepath)):\n                 yield FileItem(name, filepath, descr['basename'])\n     def _expand_files(self, modules: Sequence[str]) -> list[ModuleDescriptionDict]:\n         result, errors = expand_modules(modules, self.config.ignore, self.config.ignore_patterns, self._ignore_paths)"}
