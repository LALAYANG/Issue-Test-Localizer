{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14711", "model_patch": "diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py\nindex 22f61ec..a2a06a2 100644\n--- a/sympy/physics/vector/vector.py\n+++ b/sympy/physics/vector/vector.py\n@@ -299,6 +299,8 @@ class VectorTypeError(TypeError):\n         msg = filldedent(\"Expected an instance of %s, but received object '%s' of %s.\" % (type(want), other, type(other)))\n         super(VectorTypeError, self).__init__(msg)\n def _check_vector(other):\n+    if isinstance(other, (int, float)) and other == 0:\n+        return Vector([(0, ReferenceFrame('N'))])\n     if not isinstance(other, Vector):\n         raise TypeError('A Vector must be supplied')\n     return other\n\\ No newline at end of file"}
