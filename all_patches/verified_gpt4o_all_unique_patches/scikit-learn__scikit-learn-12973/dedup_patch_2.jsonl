{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-12973", "model_patch": "diff --git a/sklearn/linear_model/least_angle.py b/sklearn/linear_model/least_angle.py\nindex 04326da..6081e26 100644\n--- a/sklearn/linear_model/least_angle.py\n+++ b/sklearn/linear_model/least_angle.py\n@@ -383,11 +383,13 @@ class LassoLarsIC(LassoLars):\n         self.precompute = precompute\n         self.eps = eps\n         self.fit_path = True\n-    def fit(self, X, y, copy_X=True):\n+    def fit(self, X, y, copy_X=None):\n         X, y = check_X_y(X, y, y_numeric=True)\n         X, y, Xmean, ymean, Xstd = LinearModel._preprocess_data(X, y, self.fit_intercept, self.normalize, self.copy_X)\n         max_iter = self.max_iter\n         Gram = self.precompute\n+        if copy_X is None:\n+            copy_X = self.copy_X\n         alphas_, active_, coef_path_, self.n_iter_ = lars_path(X, y, Gram=Gram, copy_X=copy_X, copy_Gram=True, alpha_min=0.0, method='lasso', verbose=self.verbose, max_iter=max_iter, eps=self.eps, return_n_iter=True, positive=self.positive)\n         n_samples = X.shape[0]\n         if self.criterion == 'aic':"}
