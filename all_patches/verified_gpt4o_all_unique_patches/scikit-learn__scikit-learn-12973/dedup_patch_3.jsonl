{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-12973", "model_patch": "diff --git a/sklearn/linear_model/least_angle.py b/sklearn/linear_model/least_angle.py\nindex b1d16f1..0b8040e 100644\n--- a/sklearn/linear_model/least_angle.py\n+++ b/sklearn/linear_model/least_angle.py\n@@ -1479,7 +1479,7 @@ class LassoLarsIC(LassoLars):\n         self.eps = eps\n         self.fit_path = True\n \n-    def fit(self, X, y, copy_X=True):\n+    def fit(self, X, y, copy_X=None):\n         \"\"\"Fit the model using X, y as training data.\n \n         Parameters\n@@ -1510,6 +1510,8 @@ class LassoLarsIC(LassoLars):\n             X, y, Gram=Gram, copy_X=copy_X, copy_Gram=True, alpha_min=0.0,\n             method='lasso', verbose=self.verbose, max_iter=max_iter,\n             eps=self.eps, return_n_iter=True, positive=self.positive)\n+        if copy_X is None:\n+            copy_X = self.copy_X\n \n         n_samples = X.shape[0]\n \n@@ -1543,4 +1545,4 @@ class LassoLarsIC(LassoLars):\n         self.alpha_ = alphas_[n_best]\n         self.coef_ = coef_path_[:, n_best]\n         self._set_intercept(Xmean, ymean, Xstd)\n-        return self\n+        return self\n"}
