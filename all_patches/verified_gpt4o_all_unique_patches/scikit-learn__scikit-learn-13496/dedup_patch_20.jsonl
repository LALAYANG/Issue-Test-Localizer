{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13496", "model_patch": "diff --git a/sklearn/ensemble/iforest.py b/sklearn/ensemble/iforest.py\nindex 17608bc..e9affbe 100644\n--- a/sklearn/ensemble/iforest.py\n+++ b/sklearn/ensemble/iforest.py\n@@ -64,6 +64,11 @@ class IsolationForest(BaseBagging, OutlierMixin):\n         If max_samples is larger than the number of samples provided,\n         all samples will be used for all trees (no sampling).\n \n+    warm_start : bool, optional (default=False)\n+        When set to ``True``, reuse the solution of the previous call to fit\n+        and add more estimators to the ensemble, otherwise, just fit a whole\n+        new forest. See :term:`the Glossary <warm_start>`.\n+\n     contamination : float in (0., 0.5), optional (default=0.1)\n         The amount of contamination of the data set, i.e. the proportion\n         of outliers in the data set. Used when fitting to define the threshold\n@@ -173,7 +178,8 @@ class IsolationForest(BaseBagging, OutlierMixin):\n                  n_jobs=None,\n                  behaviour='old',\n                  random_state=None,\n-                 verbose=0):\n+                 verbose=0,\n+                 warm_start=False):\n         super().__init__(\n             base_estimator=ExtraTreeRegressor(\n                 max_features=1,\n@@ -189,6 +195,7 @@ class IsolationForest(BaseBagging, OutlierMixin):\n             random_state=random_state,\n             verbose=verbose)\n \n+        self.warm_start = warm_start\n         self.behaviour = behaviour\n         self.contamination = contamination\n \n", "occurrence": 1}
