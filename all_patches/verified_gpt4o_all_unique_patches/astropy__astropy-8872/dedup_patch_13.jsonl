{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-8872", "model_patch": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex 0ffb147..87b0eb9 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -376,11 +376,16 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n             raise TypeError(\"The value must be a valid Python or \"\n                             \"Numpy numeric type.\")\n \n-        # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n-                                   or value.dtype.fields)\n-                              or value.dtype.kind == 'O'):\n-            value = value.astype(float)\n+        # by default, cast any integer, boolean, etc., to float,\n+        # but maintain float16 if it is the original type.\n+        if dtype is None:\n+            if not (np.can_cast(np.float32, value.dtype) or value.dtype.fields):\n+                if value.dtype == np.float16:\n+                    dtype = np.float16\n+                else:\n+                    dtype = float\n+            elif value.dtype.kind == 'O':\n+                value = value.astype(float)\n \n         value = value.view(cls)\n         value._set_unit(value_unit)\n", "occurrence": 1}
