{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9711", "model_patch": "diff --git a/sphinx/extension.py b/sphinx/extension.py\nindex 41afac8..a2fb475 100644\n--- a/sphinx/extension.py\n+++ b/sphinx/extension.py\n@@ -22,8 +22,12 @@ def verify_needs_extensions(app: 'Sphinx', config: Config) -> None:\n         if extension is None:\n             logger.warning(__('The %s extension is required by needs_extensions settings, but it is not loaded.'), extname)\n             continue\n-        if extension.version == 'unknown version' or reqversion > extension.version:\n+        if extension.version == 'unknown version' or compare_versions(reqversion, extension.version) > 0:\n             raise VersionRequirementError(__('This project needs the extension %s at least in version %s and therefore cannot be built with the loaded version (%s).') % (extname, reqversion, extension.version))\n+def compare_versions(reqversion: str, currversion: str) -> int:\n+    req_tuple = tuple(map(int, reqversion.split('.')))\n+    curr_tuple = tuple(map(int, currversion.split('.')))\n+    return (req_tuple > curr_tuple) - (req_tuple < curr_tuple)\n def setup(app: 'Sphinx') -> Dict[str, Any]:\n     app.connect('config-inited', verify_needs_extensions, priority=800)\n     return {'version': 'builtin', 'parallel_read_safe': True, 'parallel_write_safe': True}\n\\ No newline at end of file"}
