{"model_name_or_path": "agentless", "instance_id": "django__django-17084", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex ac042d4..0b0eaa5 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -239,18 +239,30 @@ class BaseExpression:\n \n     @cached_property\n     def contains_aggregate(self):\n+        # Ensure aggregate functions do not contain window functions\n+        for expr in self.get_source_expressions():\n+            if expr and expr.contains_over_clause:\n+                raise FieldError(\"Aggregate function calls cannot contain window function calls.\")\n         return any(\n             expr and expr.contains_aggregate for expr in self.get_source_expressions()\n         )\n \n     @cached_property\n     def contains_over_clause(self):\n+        # Ensure aggregate functions do not contain window functions\n+        for expr in self.get_source_expressions():\n+            if expr and expr.contains_over_clause:\n+                raise FieldError(\"Aggregate function calls cannot contain window function calls.\")\n         return any(\n             expr and expr.contains_over_clause for expr in self.get_source_expressions()\n         )\n \n     @cached_property\n     def contains_column_references(self):\n+        # Ensure aggregate functions do not contain window functions\n+        for expr in self.get_source_expressions():\n+            if expr and expr.contains_over_clause:\n+                raise FieldError(\"Aggregate function calls cannot contain window function calls.\")\n         return any(\n             expr and expr.contains_column_references\n             for expr in self.get_source_expressions()\n", "occurrence": 1}
