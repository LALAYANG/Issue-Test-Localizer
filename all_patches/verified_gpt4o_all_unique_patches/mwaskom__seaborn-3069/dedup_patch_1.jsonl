{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3069", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 1e10d58..12d6a73 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -183,7 +183,22 @@ class Nominal(Scale):\n                 #     axis.set_minor_locator(minor_locator)\n                 # axis.set_major_formatter(major_formatter)\n \n-        mpl_scale = CatScale(data.name)\n+        # Define a matplotlib scale that has the desired behavior for nominal scales\n+        class NominalScale(mpl.scale.ScaleBase):\n+            name = \"nominal\"\n+\n+            def __init__(self, axis, **kwargs):\n+                super().__init__(axis, **kwargs)\n+                self.sticky_edges.y = [0]\n+\n+            def set_default_locators_and_formatters(self, axis):\n+                axis.set_major_locator(mpl.ticker.FixedLocator(range(len(units_seed))))\n+                axis.set_major_formatter(mpl.ticker.FixedFormatter([str(x) for x in units_seed]))\n+\n+            def get_transform(self):\n+                return mpl.scale.IdentityTransform()\n+\n+        mpl_scale = NominalScale(data.name)\n         if axis is None:\n             axis = PseudoAxis(mpl_scale)\n \n", "occurrence": 1}
