{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16450", "model_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 9bc1e52..bbcf168 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -69,7 +69,10 @@ class Symbol(AtomicExpr, Boolean):\n             assumptions[key] = bool(v)\n     def __new__(cls, name, **assumptions):\n         cls._sanitize(assumptions, cls)\n-        return Symbol.__xnew_cached_(cls, name, **assumptions)\n+        new_symbol = Symbol.__xnew_cached_(cls, name, **assumptions)\n+        if 'finite' in assumptions:\n+            new_symbol._assumptions['finite'] = assumptions['finite']\n+        return new_symbol\n     def __new_stage2__(cls, name, **assumptions):\n         if not isinstance(name, string_types):\n             raise TypeError('name should be a string, not %s' % repr(type(name)))"}
