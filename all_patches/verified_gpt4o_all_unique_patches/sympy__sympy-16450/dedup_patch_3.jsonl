{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16450", "model_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 9bc1e52..04a0825 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -75,9 +75,13 @@ class Symbol(AtomicExpr, Boolean):\n             raise TypeError('name should be a string, not %s' % repr(type(name)))\n         obj = Expr.__new__(cls)\n         obj.name = name\n-        tmp_asm_copy = assumptions.copy()\n+        if 'finite' in assumptions:\n+            assumptions['finite'] = assumptions['finite']\n         is_commutative = fuzzy_bool(assumptions.get('commutative', True))\n-        assumptions['commutative'] = is_commutative\n+        preserved_assumptions = ['finite', 'integer', 'rational', 'prime', 'even', 'odd']\n+        for asm in preserved_assumptions:\n+            if asm in assumptions:\n+                assumptions[asm] = assumptions[asm]\n         obj._assumptions = StdFactKB(assumptions)\n         obj._assumptions._generator = tmp_asm_copy\n         return obj"}
