{"model_name_or_path": "agentless", "instance_id": "django__django-11265", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 60a9579..5f83e0a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -771,6 +771,7 @@ class Query(BaseExpression):\n             else:\n                 pos -= 1\n                 if pos == -1 or fail_on_missing:\n+                    available = sorted([*get_field_names_from_opts(opts), *self.annotation_select, *self._filtered_relations])\n                     available = sorted([*get_field_names_from_opts(opts), *self.annotation_select, *self._filtered_relations])\n                     raise FieldError(\"Cannot resolve keyword '%s' into field. Choices are: %s\" % (name, ', '.join(available)))\n                 break\n@@ -890,6 +891,8 @@ class Query(BaseExpression):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         query = Query(self.model)\n         query.add_filter(filter_expr)\n+        query._filtered_relations = self._filtered_relations.copy()\n+        query.annotations = self.annotations.copy()\n         query.clear_ordering(True)\n         trimmed_prefix, contains_louter = query.trim_start(names_with_path)\n         col = query.select[0]"}
