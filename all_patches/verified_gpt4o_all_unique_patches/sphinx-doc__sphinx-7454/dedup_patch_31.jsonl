{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7454", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex cf5467b..e31298c 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -33,7 +33,10 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n                 if param.annotation is not param.empty:\n                     annotation[param.name] = typing.stringify(param.annotation)\n             if sig.return_annotation is not sig.empty:\n-                annotation['return'] = typing.stringify(sig.return_annotation)\n+                return_annotation = typing.stringify(sig.return_annotation)\n+                if return_annotation == 'None':\n+                    return_annotation = ':py:obj:`None <python:None>`'\n+                annotation['return'] = return_annotation\n     except (TypeError, ValueError):\n         pass\n \n", "occurrence": 1}
