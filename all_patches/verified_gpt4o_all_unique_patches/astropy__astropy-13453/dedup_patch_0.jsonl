{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..057f536 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -362,6 +362,10 @@ class HTML(core.BaseReader):\n         if isinstance(raw_html_cols, str):\n             raw_html_cols = [raw_html_cols]  # Allow for a single string as input\n         cols_escaped = [col.info.name not in raw_html_cols for col in cols]\n+        # Apply formatting to columns as per the formats argument\n+        for col in cols:\n+            if col.info.name in self.formats:\n+                col.info.format = self.formats[col.info.name]\n \n         # Kwargs that get passed on to bleach.clean() if that is available.\n         raw_html_clean_kwargs = self.html.get('raw_html_clean_kwargs', {})\n@@ -437,7 +441,12 @@ class HTML(core.BaseReader):\n                                     new_cols.append(new_col)\n                             else:\n \n-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n+                                # Apply the column-specific format if provided\n+                                if col.info.format:\n+                                    col_iter_str_vals = self.fill_values(\n+                                        col, (col.info.formatter(val) for val in col))\n+                                else:\n+                                    col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n                                 col_str_iters.append(col_iter_str_vals)\n \n                                 new_cols_escaped.append(col_escaped)\n"}
