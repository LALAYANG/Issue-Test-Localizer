{"model_name_or_path": "agentless", "instance_id": "psf__requests-1921", "model_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 4ec0f7c..d55d46d 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -205,7 +205,7 @@ class Session(SessionRedirectMixin):\n         #: A case-insensitive dictionary of headers to be sent on each\n         #: :class:`Request <Request>` sent from this\n         #: :class:`Session <Session>`.\n-        self.headers = default_headers()\n+        self.headers = self.default_headers()\n \n         #: Default Authentication tuple or object to attach to\n         #: :class:`Request <Request>`.\n@@ -257,6 +257,15 @@ class Session(SessionRedirectMixin):\n     def __exit__(self, *args):\n         self.close()\n \n+    def default_headers(self):\n+        \"\"\"Default headers for the session.\"\"\"\n+        return CaseInsensitiveDict({\n+            'User-Agent': 'python-requests/{}'.format(__version__),\n+            'Accept-Encoding': ', '.join(('gzip', 'deflate')),\n+            'Accept': '*/*',\n+            'Connection': 'keep-alive',\n+        })\n+\n     def prepare_request(self, request):\n         \"\"\"Constructs a :class:`PreparedRequest <PreparedRequest>` for\n         transmission and returns it. The :class:`PreparedRequest` has settings\n"}
