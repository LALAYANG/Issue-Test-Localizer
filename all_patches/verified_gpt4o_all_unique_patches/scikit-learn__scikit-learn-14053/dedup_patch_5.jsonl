{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-14053", "model_patch": "diff --git a/sklearn/tree/export.py b/sklearn/tree/export.py\nindex bcf8cf4..6646192 100644\n--- a/sklearn/tree/export.py\n+++ b/sklearn/tree/export.py\n@@ -333,8 +333,8 @@ def export_text(decision_tree, feature_names=None, max_depth=10, spacing=3, deci\n     truncation_fmt = '{} {}\\n'\n     if max_depth < 0:\n         raise ValueError('max_depth bust be >= 0, given %d' % max_depth)\n-    if feature_names is not None and len(feature_names) != tree_.n_features:\n-        raise ValueError('feature_names must contain %d elements, got %d' % (tree_.n_features, len(feature_names)))\n+    if feature_names is not None and len(feature_names) != tree_.n_features_in_:\n+        raise ValueError('feature_names must contain %d elements, got %d' % (tree_.n_features_in_, len(feature_names)))\n     if spacing <= 0:\n         raise ValueError('spacing must be > 0, given %d' % spacing)\n     if decimals < 0:\n@@ -375,7 +375,7 @@ def export_text(decision_tree, feature_names=None, max_depth=10, spacing=3, deci\n             info_fmt_left = info_fmt\n             info_fmt_right = info_fmt\n             if tree_.feature[node] != _tree.TREE_UNDEFINED:\n-                name = feature_names_[node]\n+                name = feature_names_[tree_.feature[node]]\n                 threshold = tree_.threshold[node]\n                 threshold = '{1:.{0}f}'.format(decimals, threshold)\n                 export_text.report += right_child_fmt.format(indent, name, threshold)"}
