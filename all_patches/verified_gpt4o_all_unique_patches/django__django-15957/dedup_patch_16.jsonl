{"model_name_or_path": "agentless", "instance_id": "django__django-15957", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex dad7142..d095b72 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -145,7 +145,11 @@ class ForwardManyToOneDescriptor:\n             }\n         else:\n             query = {\"%s__in\" % self.field.related_query_name(): instances}\n-        queryset = queryset.filter(**query)\n+        if queryset.query.has_limit_or_offset():\n+            # Evaluate the queryset to prevent filtering on an already sliced queryset\n+            queryset = list(queryset.filter(**query))\n+        else:\n+            queryset = queryset.filter(**query)\n \n         # Since we're going to assign directly in the cache,\n         # we must manage the reverse relation cache manually.\n", "occurrence": 1}
