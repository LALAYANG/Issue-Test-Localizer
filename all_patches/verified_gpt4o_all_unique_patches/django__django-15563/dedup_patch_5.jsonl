{"model_name_or_path": "agentless", "instance_id": "django__django-15563", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1c22d92..337403a 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -533,7 +533,19 @@ class QuerySet:\n             raise TypeError('Cannot update a query once a slice has been taken.')\n         self._for_write = True\n         query = self.query.chain(sql.UpdateQuery)\n-        query.add_update_values(kwargs)\n+        opts = self.model._meta\n+        base_updates = {}\n+        for field, val in kwargs.items():\n+            field = opts.get_field(field)\n+            if field.model != self.model:\n+                base_updates.setdefault(field.model, {})[field.name] = val\n+            else:\n+                query.add_update_values({field.name: val})\n+        for model, values in base_updates.items():\n+            base_query = self.query.clone()\n+            base_query.__class__ = sql.UpdateQuery\n+            base_query.add_update_values(values)\n+            base_query.get_compiler(self.db).execute_sql(CURSOR)\n         query.annotations = {}\n         with transaction.mark_for_rollback_on_error(using=self.db):\n             rows = query.get_compiler(self.db).execute_sql(CURSOR)"}
