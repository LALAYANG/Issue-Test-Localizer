{"model_name_or_path": "agentless", "instance_id": "django__django-15563", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex df46b1e..02c1ce7 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -987,7 +987,17 @@ class QuerySet:\n         if self.query.is_sliced:\n             raise TypeError(\"Cannot update a query once a slice has been taken.\")\n         self._for_write = True\n-        query = self.query.chain(sql.UpdateQuery)\n+        query = self.query.chain(sql.UpdateQuery, using=self.db)\n+        if self.model._meta.parents:\n+            base_querysets = [\n+                parent._base_manager.using(self.db)\n+                for parent in self.model._meta.get_parent_list()\n+            ]\n+            # Find the parent that has the field to update\n+            for qs in base_querysets:\n+                if set(kwargs).issubset(set(f.name for f in qs.model._meta.fields)):\n+                    query = qs.query.chain(sql.UpdateQuery, using=self.db)\n+                    break\n         query.add_update_values(kwargs)\n         # Clear any annotations so that they won't be present in subqueries.\n         query.annotations = {}\n", "occurrence": 1}
