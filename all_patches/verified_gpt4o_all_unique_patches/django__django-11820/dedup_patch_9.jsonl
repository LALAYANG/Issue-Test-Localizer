{"model_name_or_path": "agentless", "instance_id": "django__django-11820", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex d3ae0cf..671f13f 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -192,7 +192,20 @@ class Options:\n             if self.verbose_name_plural is None:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n \n-            # order_with_respect_and ordering are mutually exclusive.\n+            # Handle related fields specified with __pk in ordering\n+            new_ordering = []\n+            for item in self.ordering:\n+                if item.endswith('__pk'):\n+                    related_field_name = item[:-4]\n+                    related_field = self.get_field(related_field_name)\n+                    if related_field and related_field.is_relation:\n+                        new_ordering.append(related_field_name + '__' + related_field.target_field.attname)\n+                    else:\n+                        new_ordering.append(item)\n+                else:\n+                    new_ordering.append(item)\n+            self.ordering = new_ordering\n+            # order_with_respect_to and ordering are mutually exclusive.\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n \n             # Any leftover attributes must be invalid.\n@@ -852,4 +865,4 @@ class Options:\n         return [\n             field for field in self._get_fields(forward=True, reverse=False, include_parents=PROXY_PARENTS)\n             if getattr(field, 'db_returning', False)\n-        ]\n+        ]\n", "occurrence": 1}
