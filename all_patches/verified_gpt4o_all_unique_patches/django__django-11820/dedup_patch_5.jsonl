{"model_name_or_path": "agentless", "instance_id": "django__django-11820", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 3b361a9..40844b6 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -160,6 +160,19 @@ class Options:\n             else:\n                 auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)\n                 model.add_to_class('id', auto)\n+        if self.ordering:\n+            for field_name in self.ordering:\n+                if '__' in field_name:\n+                    related_model, related_field_name = field_name.split('__', 1)\n+                    try:\n+                        related_field = self.get_field(related_model)\n+                        related_model_meta = related_field.related_model._meta\n+                        if not related_model_meta.get_field(related_field_name):\n+                            raise FieldDoesNotExist()\n+                    except (FieldDoesNotExist, TypeError):\n+                        raise FieldDoesNotExist(\"%s has no field named '%s'\" % (related_model, related_field_name))\n+                elif not self.get_field(field_name):\n+                    raise FieldDoesNotExist(\"%s has no field named '%s'\" % (self.object_name, field_name))\n     def add_manager(self, manager):\n         self.local_managers.append(manager)\n         self._expire_cache()"}
