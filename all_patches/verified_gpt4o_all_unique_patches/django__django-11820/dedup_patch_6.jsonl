{"model_name_or_path": "agentless", "instance_id": "django__django-11820", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4c7a87c..fc1cc42 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1708,7 +1708,10 @@ class Model(metaclass=ModelBase):\n             fld = None\n             for part in field.split(LOOKUP_SEP):\n                 try:\n-                    fld = _cls._meta.get_field(part)\n+                    if part == 'pk':\n+                        fld = _cls._meta.pk\n+                    else:\n+                        fld = _cls._meta.get_field(part)\n                     if fld.is_relation:\n                         _cls = fld.get_path_info()[-1].to_opts.model\n                 except (FieldDoesNotExist, AttributeError):\n@@ -1724,7 +1727,7 @@ class Model(metaclass=ModelBase):\n \n         # Skip ordering on pk. This is always a valid order_by field\n         # but is an alias and therefore won't be found by opts.get_field.\n-        fields = {f for f in fields if f != 'pk'}\n+        fields = {f for f in fields if f != 'pk' and not f.endswith('__pk')}\n \n         # Check for invalid or nonexistent fields in ordering.\n         invalid_fields = []\n"}
