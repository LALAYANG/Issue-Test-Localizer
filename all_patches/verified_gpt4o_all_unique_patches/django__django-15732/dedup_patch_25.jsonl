{"model_name_or_path": "agentless", "instance_id": "django__django-15732", "model_patch": "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py\nindex 15d7bc4..f3eebfe 100644\n--- a/django/db/backends/postgresql/introspection.py\n+++ b/django/db/backends/postgresql/introspection.py\n@@ -202,15 +202,19 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n                 cl.reloptions\n             FROM pg_constraint AS c\n             JOIN pg_class AS cl ON c.conrelid = cl.oid\n-            WHERE cl.relname = %s AND pg_catalog.pg_table_is_visible(cl.oid)\n+            WHERE cl.relname = %s AND pg_catalog.pg_table_is_visible(cl.oid\n+                AND con.contype IN ('p', 'u', 'f', 'c')\n         \"\"\",\n             [table_name],\n         )\n         for constraint, columns, kind, used_cols, options in cursor.fetchall():\n+            if kind == \"u\" and len(columns) == 1 and columns[0] in constraints:\n+                # If there's already a unique constraint on the same column, skip this one\n+                continue\n             constraints[constraint] = {\n                 \"columns\": columns,\n                 \"primary_key\": kind == \"p\",\n-                \"unique\": kind in [\"p\", \"u\"],\n+                \"unique\": kind == \"u\" and not constraints.get(columns[0], {}).get(\"primary_key\", False),\n                 \"foreign_key\": tuple(used_cols.split(\".\", 1)) if kind == \"f\" else None,\n                 \"check\": kind == \"c\",\n                 \"index\": False,\n@@ -292,4 +296,4 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n                     \"definition\": definition,\n                     \"options\": options,\n                 }\n-        return constraints\n+        return constraints\n", "occurrence": 1}
