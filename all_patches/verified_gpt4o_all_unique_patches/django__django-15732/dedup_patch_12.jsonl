{"model_name_or_path": "agentless", "instance_id": "django__django-15732", "model_patch": "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py\nindex 15d7bc4..52ce26d 100644\n--- a/django/db/backends/postgresql/introspection.py\n+++ b/django/db/backends/postgresql/introspection.py\n@@ -207,10 +207,14 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n             [table_name],\n         )\n         for constraint, columns, kind, used_cols, options in cursor.fetchall():\n+            # Ensure unique constraint is not the primary key when adding to constraints\n+            if kind == \"u\" and constraint in constraints and constraints[constraint][\"primary_key\"]:\n+                continue\n+\n             constraints[constraint] = {\n                 \"columns\": columns,\n                 \"primary_key\": kind == \"p\",\n-                \"unique\": kind in [\"p\", \"u\"],\n+                \"unique\": kind == \"u\" and not constraints.get(constraint, {}).get(\"primary_key\", False),\n                 \"foreign_key\": tuple(used_cols.split(\".\", 1)) if kind == \"f\" else None,\n                 \"check\": kind == \"c\",\n                 \"index\": False,\n@@ -292,4 +296,4 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n                     \"definition\": definition,\n                     \"options\": options,\n                 }\n-        return constraints\n+        return constraints\n"}
