{"model_name_or_path": "agentless", "instance_id": "django__django-15732", "model_patch": "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py\nindex 15d7bc4..6d536c5 100644\n--- a/django/db/backends/postgresql/introspection.py\n+++ b/django/db/backends/postgresql/introspection.py\n@@ -207,7 +207,8 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n             [table_name],\n         )\n         for constraint, columns, kind, used_cols, options in cursor.fetchall():\n-            constraints[constraint] = {\n+            if constraint not in constraints:\n+                constraints[constraint] = {\n                 \"columns\": columns,\n                 \"primary_key\": kind == \"p\",\n                 \"unique\": kind in [\"p\", \"u\"],\n@@ -271,15 +272,7 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n             definition,\n             options,\n         ) in cursor.fetchall():\n-            if index not in constraints:\n-                basic_index = (\n-                    type_ == self.index_default_access_method\n-                    and\n-                    # '_btree' references\n-                    # django.contrib.postgres.indexes.BTreeIndex.suffix.\n-                    not index.endswith(\"_btree\")\n-                    and options is None\n-                )\n+            if index not in constraints or not constraints[index][\"unique\"]:\n                 constraints[index] = {\n                     \"columns\": columns if columns != [None] else [],\n                     \"orders\": orders if orders != [None] else [],\n@@ -292,4 +285,6 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n                     \"definition\": definition,\n                     \"options\": options,\n                 }\n-        return constraints\n+                if constraints[index][\"unique\"]:\n+                    constraints[index][\"unique\"] = unique\n+        return constraints\n"}
