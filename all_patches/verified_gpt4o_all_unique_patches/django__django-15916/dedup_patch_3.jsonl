{"model_name_or_path": "agentless", "instance_id": "django__django-15916", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 646bf68..1af0a8e 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -263,7 +263,7 @@ class ModelFormMetaclass(DeclarativeFieldsMetaclass):\n                 base_formfield_callback = b.Meta.formfield_callback\n                 break\n \n-        formfield_callback = attrs.pop(\"formfield_callback\", base_formfield_callback)\n+        formfield_callback = attrs.pop(\"formfield_callback\", None) or base_formfield_callback\n \n         new_class = super().__new__(mcs, name, bases, attrs)\n \n@@ -629,9 +629,7 @@ def modelform_factory(\n     # If parent form class already has an inner Meta, the Meta we're\n     # creating needs to inherit from the parent's inner meta.\n     bases = (form.Meta,) if hasattr(form, \"Meta\") else ()\n-    Meta = type(\"Meta\", bases, attrs)\n-    if formfield_callback:\n-        Meta.formfield_callback = staticmethod(formfield_callback)\n+    Meta = type(\"Meta\", bases, {**attrs, 'formfield_callback': formfield_callback or getattr(form.Meta, 'formfield_callback', None)})\n     # Give this new form class a reasonable name.\n     class_name = model.__name__ + \"Form\"\n \n", "occurrence": 1}
