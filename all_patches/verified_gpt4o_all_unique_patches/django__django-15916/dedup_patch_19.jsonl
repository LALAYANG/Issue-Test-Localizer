{"model_name_or_path": "agentless", "instance_id": "django__django-15916", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7070e66..f5c80f5 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -264,10 +264,14 @@ def modelform_factory(model, form=ModelForm, fields=None, exclude=None, formfiel\n         attrs['field_classes'] = field_classes\n     bases = (form.Meta,) if hasattr(form, 'Meta') else ()\n     Meta = type('Meta', bases, attrs)\n+    if formfield_callback is None and hasattr(form.Meta, 'formfield_callback'):\n+        formfield_callback = form.Meta.formfield_callback\n     if formfield_callback:\n         Meta.formfield_callback = staticmethod(formfield_callback)\n     class_name = model.__name__ + 'Form'\n-    form_class_attrs = {'Meta': Meta, 'formfield_callback': formfield_callback}\n+    form_class_attrs = {'Meta': Meta}\n+    if formfield_callback:\n+        form_class_attrs['formfield_callback'] = formfield_callback\n     if getattr(Meta, 'fields', None) is None and getattr(Meta, 'exclude', None) is None:\n         raise ImproperlyConfigured(\"Calling modelform_factory without defining 'fields' or 'exclude' explicitly is prohibited.\")\n     return type(form)(class_name, (form,), form_class_attrs)"}
