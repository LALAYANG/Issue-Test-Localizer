{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4661", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 1b8a20a..1510584 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -473,7 +473,7 @@ class PyLinter(\n     def __init__(self, options=(), reporter=None, option_groups=(), pylintrc=None):\n         \"\"\"Some stuff has to be done before ancestors initialization...\n         messages store / checkers / reporter / astroid manager\"\"\"\n-        self.msgs_store = MessageDefinitionStore()\n+        self.msgs_store = MessageDefinitionStore(store_path=self.pylint_data_home)\n         self.reporter = None\n         self._reporter_names = None\n         self._reporters = {}\n@@ -487,6 +487,10 @@ class PyLinter(\n         self.stats = None\n         self.fail_on_symbols = []\n         # init options\n+        self.data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(os.path.expanduser(\"~\"), \".local\", \"share\"))\n+        self.pylint_data_home = os.path.join(self.data_home, \"pylint\")\n+        if not os.path.exists(self.pylint_data_home):\n+            os.makedirs(self.pylint_data_home)\n         self._external_opts = options\n         self.options = options + PyLinter.make_options()\n         self.option_groups = option_groups + PyLinter.option_groups\n", "occurrence": 1}
