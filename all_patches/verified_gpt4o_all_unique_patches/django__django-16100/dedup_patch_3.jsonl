{"model_name_or_path": "agentless", "instance_id": "django__django-16100", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 32995ac..3409423 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1921,8 +1921,11 @@ class ModelAdmin(BaseModelAdmin):\n         if not self.has_view_or_change_permission(request):\n             raise PermissionDenied\n \n+        from django.db import transaction\n+\n         try:\n-            cl = self.get_changelist_instance(request)\n+            with transaction.atomic():\n+                cl = self.get_changelist_instance(request)\n         except IncorrectLookupParameters:\n             # Wacky lookup parameters were given, so redirect to the main\n             # changelist page, without parameters, and pass an 'invalid=1'\n@@ -2006,19 +2009,20 @@ class ModelAdmin(BaseModelAdmin):\n             modified_objects = self._get_list_editable_queryset(\n                 request, FormSet.get_default_prefix()\n             )\n-            formset = cl.formset = FormSet(\n-                request.POST, request.FILES, queryset=modified_objects\n-            )\n-            if formset.is_valid():\n-                changecount = 0\n-                for form in formset.forms:\n-                    if form.has_changed():\n-                        obj = self.save_form(request, form, change=True)\n-                        self.save_model(request, obj, form, change=True)\n-                        self.save_related(request, form, formsets=[], change=True)\n-                        change_msg = self.construct_change_message(request, form, None)\n-                        self.log_change(request, obj, change_msg)\n-                        changecount += 1\n+            with transaction.atomic():\n+                formset = cl.formset = FormSet(\n+                    request.POST, request.FILES, queryset=modified_objects\n+                )\n+                if formset.is_valid():\n+                    changecount = 0\n+                    for form in formset.forms:\n+                        if form.has_changed():\n+                            obj = self.save_form(request, form, change=True)\n+                            self.save_model(request, obj, form, change=True)\n+                            self.save_related(request, form, formsets=[], change=True)\n+                            change_msg = self.construct_change_message(request, form, None)\n+                            self.log_change(request, obj, change_msg)\n+                            changecount += 1\n \n                 if changecount:\n                     msg = ngettext(\n", "occurrence": 1}
