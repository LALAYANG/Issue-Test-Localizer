{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21596", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 78d756e..7378f83 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -132,7 +132,12 @@ class Set(Basic, EvalfMixin):\n         EmptySet\n \n         \"\"\"\n-        return Intersection(self, other)\n+        intersection = Intersection(self, other)\n+        if isinstance(self, imageset):\n+            if isinstance(other, Reals):\n+                new_elements = [elem for elem in self if elem.is_real]\n+                return FiniteSet(*new_elements)\n+        return intersection\n \n     def intersection(self, other):\n         \"\"\"\n@@ -331,11 +336,15 @@ class Set(Basic, EvalfMixin):\n         if isinstance(c, Contains):\n             return c\n         if c is None:\n-            return Contains(other, self, evaluate=False)\n-        b = tfn[c]\n-        if b is None:\n-            return c\n-        return b\n+            if isinstance(other, ComplexNumber) and other.is_real:\n+                c = False\n+            else:\n+                return Contains(other, self, evaluate=False)\n+        else:\n+            b = tfn[c]\n+            if b is None:\n+                return c\n+            return b\n \n     def _contains(self, other):\n         raise NotImplementedError(filldedent('''\n"}
