{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21596", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 78d756e..f78d332 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -132,6 +132,9 @@ class Set(Basic, EvalfMixin):\n         EmptySet\n \n         \"\"\"\n+        if isinstance(other, Reals):\n+            real_parts = [expr.as_real_imag()[0] for expr in self.args]\n+            return FiniteSet(*[rp for rp in real_parts if rp.is_real])\n         return Intersection(self, other)\n \n     def intersection(self, other):\n@@ -338,6 +341,9 @@ class Set(Basic, EvalfMixin):\n         return b\n \n     def _contains(self, other):\n+        if isinstance(other, Reals):\n+            real_parts = [expr.as_real_imag()[0] for expr in self.args]\n+            return Or(*[Contains(rp, Reals) for rp in real_parts])\n         raise NotImplementedError(filldedent('''\n             (%s)._contains(%s) is not defined. This method, when\n             defined, will receive a sympified object. The method\n"}
