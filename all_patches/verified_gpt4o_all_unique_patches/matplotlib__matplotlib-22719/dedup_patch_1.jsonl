{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22719", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 9c42bd6..921ab64 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1618,11 +1618,14 @@ class Axis(martist.Artist):\n \n         if self.converter is None:\n             return x\n-        try:\n-            ret = self.converter.convert(x, self.units, self)\n-        except Exception as e:\n-            raise munits.ConversionError('Failed to convert value(s) to axis '\n-                                         f'units: {x!r}') from e\n+        if isinstance(x, (list, np.ndarray)) and len(x) == 0:\n+            return np.array([], dtype=float)  # Handle empty input gracefully\n+        else:\n+            try:\n+                ret = self.converter.convert(x, self.units, self)\n+            except Exception as e:\n+                raise munits.ConversionError('Failed to convert value(s) to axis '\n+                                             f'units: {x!r}') from e\n         return ret\n \n     def set_units(self, u):\n", "occurrence": 1}
