{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22719", "model_patch": "diff --git a/lib/matplotlib/category.py b/lib/matplotlib/category.py\nindex a559ed2..e35733a 100644\n--- a/lib/matplotlib/category.py\n+++ b/lib/matplotlib/category.py\n@@ -51,20 +51,21 @@ class StrCategoryConverter(units.ConversionInterface):\n                 'this might be caused by unintendedly mixing categorical and '\n                 'numeric data')\n         StrCategoryConverter._validate_unit(unit)\n-        # dtype = object preserves numerical pass throughs\n+        if not value:\n+            return np.array([])\n+        \n         values = np.atleast_1d(np.array(value, dtype=object))\n-        # pass through sequence of non binary numbers\n-        with _api.suppress_matplotlib_deprecation_warning():\n-            is_numlike = all(units.ConversionInterface.is_numlike(v)\n-                             and not isinstance(v, (str, bytes))\n-                             for v in values)\n+\n+        is_numlike = all(units.ConversionInterface.is_numlike(v)\n+                         and not isinstance(v, (str, bytes))\n+                         for v in values)\n         if is_numlike:\n             _api.warn_deprecated(\n                 \"3.5\", message=\"Support for passing numbers through unit \"\n                 \"converters is deprecated since %(since)s and support will be \"\n                 \"removed %(removal)s; use Axis.convert_units instead.\")\n             return np.asarray(values, dtype=float)\n-        # force an update so it also does type checking\n+\n         unit.update(values)\n         return np.vectorize(unit._mapping.__getitem__, otypes=[float])(values)\n \n", "occurrence": 1}
