{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/utils.py b/pylint/checkers/utils.py\nindex ea94ca1..07a75ab 100644\n--- a/pylint/checkers/utils.py\n+++ b/pylint/checkers/utils.py\n@@ -1338,6 +1338,10 @@ def is_node_in_type_annotation_context(node: astroid.node_classes.NodeNG) -> boo\n             )\n             or isinstance(parent_node, astroid.FunctionDef)\n             and parent_node.returns == current_node\n+            or isinstance(parent_node, astroid.Assign)\n+            and isinstance(current_node, astroid.Const)\n+            and isinstance(current_node.value, str)\n+            and current_node.value.startswith(\"type:\")\n         ):\n             return True\n         current_node, parent_node = parent_node, parent_node.parent\n", "occurrence": 1}
