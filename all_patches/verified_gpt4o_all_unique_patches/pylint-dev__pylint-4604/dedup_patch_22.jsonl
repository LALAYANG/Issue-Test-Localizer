{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 1045c62..dcc6506 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -183,6 +183,8 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n                 self._record_import(node, imported_module)\n             if imported_module is None:\n                 continue\n+            if any((isinstance(child, astroid.TypeComment) and imported_module.name in child.value for child in node.root().get_children())):\n+                continue\n             self._add_imported_module(node, imported_module.name)\n     @check_messages(*MSGS)\n     def visit_importfrom(self, node):\n@@ -202,6 +204,9 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n             self._record_import(node, imported_module)\n         if imported_module is None:\n             return\n+        if any((isinstance(child, astroid.TypeComment) and imported_module.name in child.value for child in node.root().get_children())):\n+            continue\n+            return\n         for name, _ in node.names:\n             if name != '*':\n                 self._add_imported_module(node, f'{imported_module.name}.{name}')"}
