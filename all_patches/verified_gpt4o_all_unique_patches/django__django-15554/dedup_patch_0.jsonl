{"model_name_or_path": "agentless", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b69bf1f..02f7c84 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -809,9 +809,10 @@ class Query(BaseExpression):\n             alias_list.append(alias)\n         else:\n             # The first occurrence of a table uses the table name directly.\n-            alias = (\n-                filtered_relation.alias if filtered_relation is not None else table_name\n-            )\n+            if filtered_relation is not None:\n+                alias = \"%s_%s\" % (table_name, len(self.alias_map) + 1)\n+            else:\n+                alias = table_name\n             self.table_map[table_name] = [alias]\n         self.alias_refcount[alias] = 1\n         return alias, True\n@@ -1598,7 +1599,9 @@ class Query(BaseExpression):\n                         \"relations deeper than the relation_name (got %r for \"\n                         \"%r).\" % (lookup, filtered_relation.relation_name)\n                     )\n-        self._filtered_relations[filtered_relation.alias] = filtered_relation\n+        unique_alias = \"%s_%d\" % (alias, len(self._filtered_relations))\n+        filtered_relation.alias = unique_alias\n+        self._filtered_relations[unique_alias] = filtered_relation\n \n     def names_to_path(self, names, opts, allow_many=True, fail_on_missing=False):\n         \"\"\"\n", "occurrence": 1}
