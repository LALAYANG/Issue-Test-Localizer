{"model_name_or_path": "agentless", "instance_id": "django__django-13158", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex e0d8d05..81bb2d4 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1001,7 +1001,11 @@ class QuerySet:\n         if isinstance(self, EmptyQuerySet):\n             qs = [q for q in other_qs if not isinstance(q, EmptyQuerySet)]\n             return qs[0]._combinator_query('union', *qs[1:], all=all) if qs else self\n-        return self._combinator_query('union', *other_qs, all=all)\n+        qs = self._combinator_query('union', *other_qs, all=all)\n+        # If the original queryset is empty, ensure .none() behaves correctly on combined querysets.\n+        if not qs.exists():\n+            return self.none()\n+        return qs\n \n     def intersection(self, *other_qs):\n         # If any query is an EmptyQuerySet, return it.\n", "occurrence": 1}
