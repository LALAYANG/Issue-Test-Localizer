{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-13989", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6b68737..345d180 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6673,20 +6673,23 @@ optional.\n         # If bins are not specified either explicitly or via range,\n         # we need to figure out the range required for all datasets,\n         # and supply that to np.histogram.\n-        if not input_empty and len(x) > 1:\n-            if weights is not None:\n-                _w = np.concatenate(w)\n-            else:\n-                _w = None\n+        if not input_empty:\n+            if len(x) > 1:\n+                if weights is not None:\n+                    _w = np.concatenate(w)\n+                else:\n+                    _w = None\n \n-            bins = histogram_bin_edges(np.concatenate(x),\n-                                       bins, bin_range, _w)\n+                bins = histogram_bin_edges(np.concatenate(x),\n+                                           bins, bin_range, _w)\n+            else:\n+                hist_kwargs['range'] = bin_range\n         else:\n             hist_kwargs['range'] = bin_range\n \n         density = bool(density) or bool(normed)\n         if density and not stacked:\n-            hist_kwargs = dict(density=density)\n+            hist_kwargs['density'] = density\n \n         # List to store all the top coordinates of the histograms\n         tops = []\n", "occurrence": 1}
