{"model_name_or_path": "agentless", "instance_id": "django__django-12965", "model_patch": "diff --git a/django/db/backends/mysql/compiler.py b/django/db/backends/mysql/compiler.py\nindex b3ead15..a1e48f5 100644\n--- a/django/db/backends/mysql/compiler.py\n+++ b/django/db/backends/mysql/compiler.py\n@@ -9,15 +9,11 @@ class SQLInsertCompiler(compiler.SQLInsertCompiler, SQLCompiler):\n     pass\n class SQLDeleteCompiler(compiler.SQLDeleteCompiler, SQLCompiler):\n     def as_sql(self):\n-        if self.connection.features.update_can_self_select or self.single_alias:\n-            return super().as_sql()\n-        result = ['DELETE %s FROM' % self.quote_name_unless_alias(self.query.get_initial_alias())]\n-        from_sql, from_params = self.get_from_clause()\n-        result.extend(from_sql)\n+        result = ['DELETE FROM %s' % self.quote_name_unless_alias(self.query.get_initial_alias())]\n         where, params = self.compile(self.query.where)\n         if where:\n             result.append('WHERE %s' % where)\n-        return (' '.join(result), tuple(from_params) + tuple(params))\n+        return (' '.join(result), tuple(params))\n class SQLUpdateCompiler(compiler.SQLUpdateCompiler, SQLCompiler):\n     pass\n class SQLAggregateCompiler(compiler.SQLAggregateCompiler, SQLCompiler):"}
