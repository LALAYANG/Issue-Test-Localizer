{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8056", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex f69cdab..a0331fe 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -655,9 +655,9 @@ class NumpyDocstring(GoogleDocstring):\n     def _escape_args_and_kwargs(self, name: str) -> str:\n         func = super()._escape_args_and_kwargs\n         if ', ' in name:\n-            return ', '.join((func(param) for param in name.split(', ')))\n+            return ', '.join((func(param.strip()) for param in name.split(', ')))\n         else:\n-            return func(name)\n+            return func(name.strip())\n     def _consume_field(self, parse_type: bool=True, prefer_type: bool=False) -> Tuple[str, str, List[str]]:\n         line = next(self._line_iter)\n         if parse_type:\n@@ -665,6 +665,8 @@ class NumpyDocstring(GoogleDocstring):\n         else:\n             _name, _type = (line, '')\n         _name, _type = (_name.strip(), _type.strip())\n+        if ', ' in _name:\n+            _name = ', '.join((param.strip() for param in _name.split(', ')))\n         _name = self._escape_args_and_kwargs(_name)\n         _type = _convert_numpy_type_spec(_type, location=self._get_location(), translations=self._config.napoleon_type_aliases or {})\n         if prefer_type and (not _type):"}
