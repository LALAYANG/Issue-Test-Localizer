{"model_name_or_path": "agentless", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 11b8ac6..306ac88 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -84,7 +84,13 @@ class ForwardManyToOneDescriptor:\n                 setattr(instance, lh_field.attname, None)\n         else:\n             for lh_field, rh_field in self.field.related_fields:\n-                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                if getattr(value, rh_field.attname) is not None:\n+                    setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                else:\n+                    def update_fk(sender, instance, **kwargs):\n+                        setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                    from django.db.models.signals import post_save\n+                    post_save.connect(update_fk, sender=value.__class__, weak=False)\n         self.field.set_cached_value(instance, value)\n         if value is not None and (not remote_field.multiple):\n             remote_field.set_cached_value(value, instance)"}
