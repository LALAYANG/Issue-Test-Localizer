{"model_name_or_path": "agentless", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex dfd3a82..a409f00 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -937,10 +937,16 @@ class Model(metaclass=ModelBase):\n                     # Use pk from related object if it has been saved after\n                     # an assignment.\n                     setattr(self, field.attname, obj.pk)\n-                # If the relationship's pk/to_field was changed, clear the\n-                # cached relationship.\n-                if getattr(obj, field.target_field.attname) != getattr(self, field.attname):\n-                    field.delete_cached_value(self)\n+                # Ensure that the parent object's foreign key is updated\n+                # with the primary key of the related object if it was set\n+                # after assignment.\n+                if field.remote_field.primary_key:\n+                    setattr(self, field.attname, obj.pk)\n+                else:\n+                    # If the relationship's pk/to_field was changed, clear the\n+                    # cached relationship.\n+                    if getattr(obj, field.target_field.attname) != getattr(self, field.attname):\n+                        field.delete_cached_value(self)\n \n     def delete(self, using=None, keep_parents=False):\n         using = using or router.db_for_write(self.__class__, instance=self)\n", "occurrence": 1}
