{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9230", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..f521e0f 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -57,13 +57,15 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n     fields = cast(Iterable[nodes.field], node)\n     for field in fields:\n         field_name = field[0].astext()\n-        parts = re.split(' +', field_name)\n+        parts = re.split('\\\\s+', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 arg = arguments.setdefault(parts[1], {})\n                 arg['param'] = True\n             elif len(parts) > 2:\n                 name = ' '.join(parts[2:])\n+                if name.startswith('dict('):\n+                    name = 'dict(' + ', '.join(name[5:].split(', ')[:2]) + ')'\n                 arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n                 arg['type'] = True\n@@ -98,12 +100,14 @@ def augment_descriptions_with_types(node: nodes.field_list, annotations: Dict[st\n     has_type = set()\n     for field in fields:\n         field_name = field[0].astext()\n-        parts = re.split(' +', field_name)\n+        parts = re.split('\\\\s+', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 has_description.add(parts[1])\n             elif len(parts) > 2:\n                 name = ' '.join(parts[2:])\n+                if name.startswith('dict('):\n+                    name = 'dict(' + ', '.join(name[5:].split(', ')[:2]) + ')'\n                 has_description.add(name)\n                 has_type.add(name)\n         elif parts[0] == 'type':"}
