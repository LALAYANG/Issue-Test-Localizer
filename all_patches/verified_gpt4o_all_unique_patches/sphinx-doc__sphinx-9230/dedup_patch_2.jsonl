{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9230", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..24f7b61 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -57,7 +57,7 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n     fields = cast(Iterable[nodes.field], node)\n     for field in fields:\n         field_name = field[0].astext()\n-        parts = re.split(' +', field_name)\n+        parts = re.split('\\\\s+', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 arg = arguments.setdefault(parts[1], {})\n@@ -84,7 +84,7 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n             node += field\n         if not arg.get('param'):\n             field = nodes.field()\n-            field += nodes.field_name('', 'param ' + name)\n+            field += nodes.field_name('', 'param ' + name + ' (' + annotation + ')')\n             field += nodes.field_body('', nodes.paragraph('', ''))\n             node += field\n     if 'return' in annotations and 'return' not in arguments:"}
