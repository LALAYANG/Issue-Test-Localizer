{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 5c973cb..5030d39 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -46,6 +46,7 @@ class Text(Artist):\n         self._x, self._y = (x, y)\n         self._text = ''\n         self._reset_visual_defaults(text=text, color=color, fontproperties=fontproperties, usetex=usetex, parse_math=parse_math, wrap=wrap, verticalalignment=verticalalignment, horizontalalignment=horizontalalignment, multialignment=multialignment, rotation=rotation, transform_rotates_text=transform_rotates_text, linespacing=linespacing, rotation_mode=rotation_mode)\n+        self._antialiased = mpl.rcParams['text.antialiased']\n         self.update(kwargs)\n     def _reset_visual_defaults(self, text='', color=None, fontproperties=None, usetex=None, parse_math=None, wrap=False, verticalalignment='baseline', horizontalalignment='left', multialignment=None, rotation=None, transform_rotates_text=False, linespacing=None, rotation_mode=None):\n         self.set_text(text)\n@@ -236,6 +237,11 @@ class Text(Artist):\n         bbox = Bbox.from_bounds(xmin, ymin, width, height)\n         xys = M.transform(offset_layout) - (offsetx, offsety)\n         return (bbox, list(zip(lines, zip(ws, hs), *xys.T)), descent)\n+    def set_antialiased(self, b):\n+        self._antialiased = bool(b)\n+        self.stale = True\n+    def get_antialiased(self):\n+        return self._antialiased\n     def set_bbox(self, rectprops):\n         if rectprops is not None:\n             props = rectprops.copy()"}
