{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..e100882 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -91,7 +91,15 @@ def _get_text_metrics_with_cache_impl(\n     \"fontvariant\": [\"variant\"],\n     \"verticalalignment\": [\"va\"],\n     \"fontweight\": [\"weight\"],\n+    \"antialiased\": [\"aa\"],\n })\n+\n+class Text(Artist):\n+    \"\"\"Handle storing and drawing of text in window or data coordinates.\"\"\"\n+\n+    zorder = 3\n+    _charsize_cache = dict()\n+    _antialiased = mpl.rcParams[\"text.antialiased\"]\n class Text(Artist):\n     \"\"\"Handle storing and drawing of text in window or data coordinates.\"\"\"\n \n@@ -150,6 +158,7 @@ class Text(Artist):\n             linespacing=linespacing,\n             rotation_mode=rotation_mode,\n         )\n+        self.set_antialiased(mpl.rcParams[\"text.antialiased\"])\n         self.update(kwargs)\n \n     def _reset_visual_defaults(\n@@ -1146,7 +1155,26 @@ class Text(Artist):\n         self._fontproperties.set_stretch(stretch)\n         self.stale = True\n \n-    def set_position(self, xy):\n+    def set_antialiased(self, aa):\n+        \"\"\"\n+        Set antialiasing state for this text.\n+\n+        Parameters\n+        ----------\n+        aa : bool\n+        \"\"\"\n+        self._antialiased = bool(aa)\n+        self.stale = True\n+\n+    def get_antialiased(self):\n+        \"\"\"\n+        Get antialiasing state for this text.\n+\n+        Returns\n+        -------\n+        bool\n+        \"\"\"\n+        return self._antialiased\n         \"\"\"\n         Set the (*x*, *y*) position of the text.\n \n", "occurrence": 1}
