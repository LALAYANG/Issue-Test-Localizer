{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..e2157a4 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -92,7 +92,9 @@ def _get_text_metrics_with_cache_impl(\n     \"verticalalignment\": [\"va\"],\n     \"fontweight\": [\"weight\"],\n })\n+\n class Text(Artist):\n+    _antialiased = mpl.rcParams[\"text.antialiased\"]\n     \"\"\"Handle storing and drawing of text in window or data coordinates.\"\"\"\n \n     zorder = 3\n@@ -276,7 +278,22 @@ class Text(Artist):\n         std_x = x - bb.x0\n         return (np.abs(size_accum - std_x)).argmin()\n \n-    def get_rotation(self):\n+    def get_antialiased(self):\n+        \"\"\"\n+        Return whether the text is to be drawn with antialiasing.\n+        \"\"\"\n+        return self._antialiased\n+\n+    def set_antialiased(self, b):\n+        \"\"\"\n+        Set whether the text should be drawn with antialiasing.\n+\n+        Parameters\n+        ----------\n+        b : bool\n+        \"\"\"\n+        self._antialiased = bool(b)\n+        self.stale = True\n         \"\"\"Return the text angle in degrees between 0 and 360.\"\"\"\n         if self.get_transform_rotates_text():\n             return self.get_transform().transform_angles(\n", "occurrence": 1}
