{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19495", "model_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex 934bff8..5e8e533 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -239,7 +239,10 @@ class ConditionSet(Set):\n             # don't target cond: it is there to tell how\n             # the base set should be filtered and if new is not in\n             # the base set then this substitution is ignored\n-            return self.func(sym, cond, base)\n+            # apply substitution on condition and base set\n+            new_cond = cond.subs(old, new)\n+            new_base = base.subs(old, new)\n+            return self.func(sym, new_cond, new_base)\n         cond = self.condition.subs(old, new)\n         base = self.base_set.subs(old, new)\n         if cond is S.true:\n", "occurrence": 1}
