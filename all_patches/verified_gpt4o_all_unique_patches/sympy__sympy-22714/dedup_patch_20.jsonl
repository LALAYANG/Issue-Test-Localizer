{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex e068f1d..cf9cd94 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -476,7 +476,8 @@ def stringify_expr(s, local_dict, global_dict, transformations):\n         tokens = transform(tokens, local_dict, global_dict)\n     return untokenize(tokens)\n def eval_expr(code, local_dict, global_dict):\n-    expr = eval(code, global_dict, local_dict)\n+    compile_code = compile(code, '<string>', 'eval')\n+    expr = eval(compile_code, global_dict, local_dict)\n     return expr\n def parse_expr(s, local_dict=None, transformations=standard_transformations, global_dict=None, evaluate=True):\n     if local_dict is None:\n@@ -511,6 +512,8 @@ def parse_expr(s, local_dict=None, transformations=standard_transformations, glo\n     global_dict['max'] = Max\n     global_dict['min'] = Min\n     code = stringify_expr(s, local_dict, global_dict, transformations)\n+    if not evaluate:\n+        code = compile(evaluateFalse(code), '<string>', 'eval')\n     if not evaluate:\n         code = compile(evaluateFalse(code), '<string>', 'eval')\n     try:"}
