{"model_name_or_path": "agentless", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 63c14d2..e3f7147 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -117,6 +117,16 @@ class Options:\n                     setattr(self, attr_name, self._format_names_with_class(cls, objs))\n             if self.verbose_name_plural is None:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n+            if self.ordering:\n+                ordering_fields = self.ordering\n+                if isinstance(self.ordering, str):\n+                    ordering_fields = (self.ordering,)\n+                for field in ordering_fields:\n+                    parts = field.lstrip('-').split('__')\n+                    field_name = parts[0]\n+                    lookup = '__'.join(parts[1:])\n+                    if lookup and (not hasattr(self.get_field(field_name), 'get_lookup')):\n+                        raise FieldDoesNotExist(\"Ordering refers to the nonexistent field, related field, or lookup '%s'.\" % field)\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n             if meta_attrs != {}:\n                 raise TypeError(\"'class Meta' got invalid attribute(s): %s\" % ','.join(meta_attrs))"}
