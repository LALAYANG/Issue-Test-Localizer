{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..cfcffaa 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -62,6 +62,12 @@ class Point(GeometryEntity):\n         origin = Point([0] * len(self))\n         return Point.distance(origin, self)\n     def __add__(self, other):\n+        from sympy.core.mul import Mul\n+        if isinstance(other, Mul):\n+            scalars = [term for term in other.args if not isinstance(term, Point)]\n+            points = [term for term in other.args if isinstance(term, Point)]\n+            if len(scalars) == 1 and len(points) == 1:\n+                other = Point([simplify(scalars[0] * coord) for coord in points[0].args], evaluate=False)\n         try:\n             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n         except TypeError:"}
