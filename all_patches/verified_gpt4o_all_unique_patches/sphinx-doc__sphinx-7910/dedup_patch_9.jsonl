{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 87c3fb8..89db103 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1455,7 +1455,15 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         # for classes, what the \"docstring\" is can be controlled via a\n         # config value; the default is only the class docstring\n         if content in ('both', 'init'):\n+            from functools import wraps, WRAPPER_ASSIGNMENTS\n+\n+            def resolve_decorator_target(func):\n+                if hasattr(func, \"__wrapped__\"):\n+                    return resolve_decorator_target(func.__wrapped__)\n+                return func\n+\n             __init__ = self.get_attr(self.object, '__init__', None)\n+            __init__ = resolve_decorator_target(__init__)\n             initdocstring = getdoc(__init__, self.get_attr,\n                                    self.env.config.autodoc_inherit_docstrings,\n                                    self.parent, self.object_name)\n"}
