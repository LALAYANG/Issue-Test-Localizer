{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13124", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 1bd5697..9dfb410 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -651,8 +651,15 @@ class StratifiedKFold(_BaseKFold):\n         # NOTE: Passing the data corresponding to ith class say X[y==class_i]\n         # will break when the data is not 100% stratifiable for all classes.\n         # So we pass np.zeroes(max(c, n_splits)) as data to the KFold\n+        if self.shuffle:\n+            for cls in unique_y:\n+                cls_mask = y == cls\n+                rng.shuffle(cls_mask)\n+                X[cls_mask] = X[cls_mask][rng.permutation(cls_mask.sum())]\n+                y[cls_mask] = y[cls_mask][rng.permutation(cls_mask.sum())]\n+\n         per_cls_cvs = [\n-            KFold(self.n_splits, shuffle=self.shuffle,\n+            KFold(self.n_splits, shuffle=False,\n                   random_state=rng).split(np.zeros(max(count, self.n_splits)))\n             for count in y_counts]\n \n"}
