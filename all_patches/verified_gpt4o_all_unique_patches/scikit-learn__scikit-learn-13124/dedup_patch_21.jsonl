{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13124", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 1bd5697..a74ef65 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -620,7 +620,7 @@ class StratifiedKFold(_BaseKFold):\n         super().__init__(n_splits, shuffle, random_state)\n \n     def _make_test_folds(self, X, y=None):\n-        rng = self.random_state\n+        rng = check_random_state(self.random_state)\n         y = np.asarray(y)\n         type_of_target_y = type_of_target(y)\n         allowed_target_types = ('binary', 'multiclass')\n@@ -653,7 +653,7 @@ class StratifiedKFold(_BaseKFold):\n         # So we pass np.zeroes(max(c, n_splits)) as data to the KFold\n         per_cls_cvs = [\n             KFold(self.n_splits, shuffle=self.shuffle,\n-                  random_state=rng).split(np.zeros(max(count, self.n_splits)))\n+                  random_state=rng.randint(np.iinfo(np.int32).max)).split(np.zeros(max(count, self.n_splits)))\n             for count in y_counts]\n \n         test_folds = np.zeros(n_samples, dtype=np.int)\n"}
