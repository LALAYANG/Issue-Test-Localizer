{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex fe3f23b..7e228f8 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -73,14 +73,15 @@ def _infer_concat_order_from_coords(datasets):\n                 # Infer order datasets should be arranged in along this dim\n                 concat_dims.append(dim)\n \n-                if all(index.is_monotonic_increasing for index in indexes):\n-                    ascending = True\n-                elif all(index.is_monotonic_decreasing for index in indexes):\n-                    ascending = False\n+                if all(index.is_monotonic_increasing for index in indexes) or \\\n+                   all(index.is_monotonic_decreasing for index in indexes) or \\\n+                   all(index.equals(indexes[0]) for index in indexes):\n+                    ascending = None  # Monotonicity check not required\n                 else:\n                     raise ValueError(\"Coordinate variable {} is neither \"\n-                                     \"monotonically increasing nor \"\n-                                     \"monotonically decreasing on all datasets\"\n+                                     \"monotonically increasing, \"\n+                                     \"monotonically decreasing, \"\n+                                     \"nor identical on all datasets\"\n                                      .format(dim))\n \n                 # Assume that any two datasets whose coord along dim starts\n@@ -505,9 +506,10 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n                 if not (indexes.is_monotonic_increasing\n-                        or indexes.is_monotonic_decreasing):\n+                        or indexes.is_monotonic_decreasing\n+                        or all(index.equals(indexes[0]) for index in indexes)):\n                     raise ValueError(\"Resulting object does not have monotonic\"\n-                                     \" global indexes along dimension {}\"\n+                                     \" or identical global indexes along dimension {}\"\n                                      .format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n \n", "occurrence": 1}
