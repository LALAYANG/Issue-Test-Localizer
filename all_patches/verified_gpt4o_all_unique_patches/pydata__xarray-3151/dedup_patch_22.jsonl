{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex b8f5640..9f2b37d 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -29,12 +29,13 @@ def _infer_concat_order_from_coords(datasets):\n                 raise ValueError('Every dimension needs a coordinate for inferring concatenation order')\n             if not all((index.equals(indexes[0]) for index in indexes[1:])):\n                 concat_dims.append(dim)\n-                if all((index.is_monotonic_increasing for index in indexes)):\n-                    ascending = True\n-                elif all((index.is_monotonic_decreasing for index in indexes)):\n-                    ascending = False\n-                else:\n-                    raise ValueError('Coordinate variable {} is neither monotonically increasing nor monotonically decreasing on all datasets'.format(dim))\n+                if not all((index.equals(indexes[0]) for index in indexes[1:])):\n+                    if all((index.is_monotonic_increasing for index in indexes)):\n+                        ascending = True\n+                    elif all((index.is_monotonic_decreasing for index in indexes)):\n+                        ascending = False\n+                    else:\n+                        raise ValueError('Coordinate variable {} is neither monotonically increasing nor monotonically decreasing on all datasets'.format(dim))\n                 if any((index.size == 0 for index in indexes)):\n                     raise ValueError('Cannot handle size zero dimensions')\n                 first_items = pd.Index([index.take([0]) for index in indexes])\n@@ -118,7 +119,7 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all', coords='\n         for dim in concatenated.dims:\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n-                if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n+                if dim not in concat_dims and (not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing)):\n                     raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n     return merge(concatenated_grouped_by_data_vars, compat=compat, fill_value=fill_value)"}
