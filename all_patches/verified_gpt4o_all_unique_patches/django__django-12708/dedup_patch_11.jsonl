{"model_name_or_path": "agentless", "instance_id": "django__django-12708", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex d7d8448..4e6dc4d 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -399,14 +399,22 @@ class BaseDatabaseSchemaEditor:\n             fields = [model._meta.get_field(field) for field in field_names]\n             self.execute(self._create_index_sql(model, fields, suffix=\"_idx\"))\n \n-    def _delete_composed_index(self, model, fields, constraint_kwargs, sql):\n+    def _delete_composed_index(self, model, fields, constraint_kwargs, sql, is_unique=False):\n         meta_constraint_names = {constraint.name for constraint in model._meta.constraints}\n         meta_index_names = {constraint.name for constraint in model._meta.indexes}\n         columns = [model._meta.get_field(field).column for field in fields]\n-        constraint_names = self._constraint_names(\n-            model, columns, exclude=meta_constraint_names | meta_index_names,\n-            **constraint_kwargs\n-        )\n+        \n+        if is_unique:\n+            constraint_names = self._constraint_names(\n+                model, columns, exclude=meta_constraint_names,\n+                **constraint_kwargs\n+            )\n+        else:\n+            constraint_names = self._constraint_names(\n+                model, columns, exclude=meta_index_names,\n+                **constraint_kwargs\n+            )\n+        \n         if len(constraint_names) != 1:\n             raise ValueError(\"Found wrong number (%s) of constraints for %s(%s)\" % (\n                 len(constraint_names),\n"}
