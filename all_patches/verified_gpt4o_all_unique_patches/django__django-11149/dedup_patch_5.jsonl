{"model_name_or_path": "agentless", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..36fc1d3 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2117,7 +2117,7 @@ class InlineModelAdmin(BaseModelAdmin):\n             # which doesn't have its own individual permissions. The user needs\n             # to have the view permission for the related model in order to\n             # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n+            return super().has_delete_permission(request, obj)\n         return super().has_add_permission(request)\n \n     def has_change_permission(self, request, obj=None):\n@@ -2126,7 +2126,7 @@ class InlineModelAdmin(BaseModelAdmin):\n             # which doesn't have its own individual permissions. The user needs\n             # to have the view permission for the related model in order to\n             # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n+            return super().has_delete_permission(request, obj)\n         return super().has_change_permission(request)\n \n     def has_delete_permission(self, request, obj=None):\n@@ -2135,7 +2135,7 @@ class InlineModelAdmin(BaseModelAdmin):\n             # which doesn't have its own individual permissions. The user needs\n             # to have the view permission for the related model in order to\n             # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n+            return super().has_delete_permission(request, obj)\n         return super().has_delete_permission(request, obj)\n \n     def has_view_permission(self, request, obj=None):\n"}
