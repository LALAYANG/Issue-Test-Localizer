{"model_name_or_path": "agentless", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..92f1ba4 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2049,6 +2049,14 @@ class InlineModelAdmin(BaseModelAdmin):\n         can_add = self.has_add_permission(request, obj) if request else True\n \n         class DeleteProtectedModelForm(base_model_form):\n+            def __init__(self, *args, **kwargs):\n+                super().__init__(*args, **kwargs)\n+                if not can_change and not self.instance._state.adding:\n+                    for field in self.fields.values():\n+                        field.disabled = True\n+                if not can_add and self.instance._state.adding:\n+                    for field in self.fields.values():\n+                        field.disabled = True\n \n             def hand_clean_DELETE(self):\n                 \"\"\"\n@@ -2088,11 +2096,6 @@ class InlineModelAdmin(BaseModelAdmin):\n                 return result\n \n             def has_changed(self):\n-                # Protect against unauthorized edits.\n-                if not can_change and not self.instance._state.adding:\n-                    return False\n-                if not can_add and self.instance._state.adding:\n-                    return False\n                 return super().has_changed()\n \n         defaults['form'] = DeleteProtectedModelForm\n@@ -2159,4 +2162,4 @@ class StackedInline(InlineModelAdmin):\n \n \n class TabularInline(InlineModelAdmin):\n-    template = 'admin/edit_inline/tabular.html'\n+    template = 'admin/edit_inline/tabular.html'\n", "occurrence": 1}
