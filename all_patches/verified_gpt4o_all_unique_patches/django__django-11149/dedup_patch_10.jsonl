{"model_name_or_path": "agentless", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..71c1ef2 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2029,20 +2029,38 @@ class InlineModelAdmin(BaseModelAdmin):\n         # If exclude is an empty list we use None, since that's the actual\n         # default.\n         exclude = exclude or None\n-        can_delete = self.can_delete and self.has_delete_permission(request, obj)\n-        defaults = {\n-            'form': self.form,\n-            'formset': self.formset,\n-            'fk_name': self.fk_name,\n-            'fields': fields,\n-            'exclude': exclude,\n-            'formfield_callback': partial(self.formfield_for_dbfield, request=request),\n-            'extra': self.get_extra(request, obj, **kwargs),\n-            'min_num': self.get_min_num(request, obj, **kwargs),\n-            'max_num': self.get_max_num(request, obj, **kwargs),\n-            'can_delete': can_delete,\n-            **kwargs,\n-        }\n+        if self.opts.auto_created and not self.has_change_permission(request, obj):\n+            # If no change permission on auto-created model, make the form readonly.\n+            defaults = {\n+                'form': self.form,\n+                'formset': self.formset,\n+                'fk_name': self.fk_name,\n+                'fields': fields,\n+                'exclude': exclude,\n+                'formfield_callback': partial(self.formfield_for_dbfield, request=request),\n+                'extra': self.get_extra(request, obj, **kwargs),\n+                'min_num': self.get_min_num(request, obj, **kwargs),\n+                'max_num': self.get_max_num(request, obj, **kwargs),\n+                'can_delete': False,\n+                'can_order': False,\n+                'readonly': True,\n+                **kwargs,\n+            }\n+        else:\n+            can_delete = self.can_delete and self.has_delete_permission(request, obj)\n+            defaults = {\n+                'form': self.form,\n+                'formset': self.formset,\n+                'fk_name': self.fk_name,\n+                'fields': fields,\n+                'exclude': exclude,\n+                'formfield_callback': partial(self.formfield_for_dbfield, request=request),\n+                'extra': self.get_extra(request, obj, **kwargs),\n+                'min_num': self.get_min_num(request, obj, **kwargs),\n+                'max_num': self.get_max_num(request, obj, **kwargs),\n+                'can_delete': can_delete,\n+                **kwargs,\n+            }\n \n         base_model_form = defaults['form']\n         can_change = self.has_change_permission(request, obj) if request else True\n", "occurrence": 1}
