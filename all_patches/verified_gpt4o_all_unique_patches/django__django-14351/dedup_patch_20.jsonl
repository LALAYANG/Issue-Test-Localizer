{"model_name_or_path": "agentless", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..aab560a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -413,9 +413,11 @@ class Query(BaseExpression):\n                         # directly. Its subexpression might contain Cols.\n                         new_expr, col_cnt = self.rewrite_cols(expr, col_cnt)\n                 new_exprs.append(new_expr)\n+        # Ensure that subqueries used in Q objects with __in lookups only select necessary columns.\n+        if isinstance(annotation, Ref) and len(new_exprs) > 1:\n+            new_exprs = [new_exprs[0]]\n         annotation.set_source_expressions(new_exprs)\n         return annotation, col_cnt\n-\n     def get_aggregation(self, using, added_aggregate_names):\n         \"\"\"\n         Return the dictionary with the values of the existing aggregations.\n"}
