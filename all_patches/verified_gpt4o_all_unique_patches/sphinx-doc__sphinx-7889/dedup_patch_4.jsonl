{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7889", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 6801938..2fd8f30 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -68,9 +68,13 @@ class _MockObject:\n         return self.__display_name__\n \n \n+from typing import TypeVar\n+\n def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+    if isinstance(name, TypeVar):\n+        name = name.__name__\n+    attrs = {'__module__': module, '__display_name__': f\"{module}.{name}\"}\n     attrs.update(attributes or {})\n \n     return type(name, (superclass,), attrs)\n", "occurrence": 1}
