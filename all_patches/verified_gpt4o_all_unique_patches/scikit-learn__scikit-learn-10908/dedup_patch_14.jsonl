{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10908", "model_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 7e240fc..4e75c31 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -953,7 +953,10 @@ class CountVectorizer(BaseEstimator, VectorizerMixin):\n         if not hasattr(self, 'vocabulary_'):\n             self._validate_vocabulary()\n \n-        self._check_vocabulary()\n+        if not hasattr(self, 'vocabulary_'):\n+            self._validate_vocabulary()\n+        if not self.fixed_vocabulary_:\n+            self._check_vocabulary()\n \n         # use the same matrix-building strategy as fit_transform\n         _, X = self._count_vocab(raw_documents, fixed_vocab=True)\n@@ -992,8 +995,13 @@ class CountVectorizer(BaseEstimator, VectorizerMixin):\n                 for i in range(n_samples)]\n \n     def get_feature_names(self):\n+        if not hasattr(self, 'vocabulary_'):\n+            self._validate_vocabulary()\n         \"\"\"Array mapping from feature integer indices to feature name\"\"\"\n-        self._check_vocabulary()\n+        if not hasattr(self, 'vocabulary_'):\n+            self._validate_vocabulary()\n+        if not self.fixed_vocabulary_:\n+            self._check_vocabulary()\n \n         return [t for t, i in sorted(six.iteritems(self.vocabulary_),\n                                      key=itemgetter(1))]\n"}
