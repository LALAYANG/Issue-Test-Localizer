{"model_name_or_path": "agentless", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..6347774 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -56,6 +56,24 @@ class CommandParser(ArgumentParser):\n         self.missing_args_message = missing_args_message\n         self.called_from_command_line = called_from_command_line\n         super().__init__(**kwargs)\n+        self._subparsers = None\n+\n+    def add_subparsers(self, **kwargs):\n+        subparsers = super().add_subparsers(**kwargs)\n+        self._subparsers = subparsers\n+        return subparsers\n+\n+    def add_parser(self, name, **kwargs):\n+        if self._subparsers is None:\n+            raise RuntimeError(\"Subparsers not initialized\")\n+        defaults = {\n+            'missing_args_message': self.missing_args_message,\n+            'called_from_command_line': self.called_from_command_line,\n+        }\n+        defaults.update(kwargs)\n+        parser = CommandParser(**defaults)\n+        self._subparsers._name_parser_map[name] = parser\n+        return parser\n \n     def parse_args(self, args=None, namespace=None):\n         # Catch missing argument for a better error message\n"}
