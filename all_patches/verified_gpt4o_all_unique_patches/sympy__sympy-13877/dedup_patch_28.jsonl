{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13877", "model_patch": "diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py\nindex 3216a40..f867a54 100644\n--- a/sympy/matrices/matrices.py\n+++ b/sympy/matrices/matrices.py\n@@ -177,7 +177,7 @@ class MatrixDeterminant(MatrixCommon):\n         # XXX included as a workaround for issue #12362.  Should use `_find_reasonable_pivot` instead\n         def _find_pivot(l):\n             for pos,val in enumerate(l):\n-                if val:\n+                if val and not val.has(S.NaN):\n                     return (pos, val, None, None)\n             return (None, None, None, None)\n \n@@ -193,7 +193,7 @@ class MatrixDeterminant(MatrixCommon):\n             # find a pivot and extract the remaining matrix\n             # XXX should use `_find_reasonable_pivot`.  Blocked by issue #12362\n             pivot_pos, pivot_val, _, _ = _find_pivot(mat[:, 0])\n-            if pivot_pos == None:\n+            if pivot_pos == None or pivot_val.has(S.NaN):\n                 return S.Zero\n \n             # if we have a valid pivot, we'll do a \"row swap\", so keep the\n", "occurrence": 1}
