{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13877", "model_patch": "diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py\nindex 3216a40..7118a68 100644\n--- a/sympy/matrices/matrices.py\n+++ b/sympy/matrices/matrices.py\n@@ -207,8 +207,10 @@ class MatrixDeterminant(MatrixCommon):\n \n             def entry(i, j):\n                 ret = (pivot_val*tmp_mat[i, j + 1] - mat[pivot_pos, j + 1]*tmp_mat[i, 0]) / cumm\n-                if not ret.is_Atom:\n-                    cancel(ret)\n+                if not (ret.is_Atom or ret.is_number):\n+                    ret = ret.cancel()\n+                if ret.has(S.NaN):\n+                    raise ValueError(\"Invalid matrix entry resulted in NaN\")\n                 return ret\n \n             return sign*bareiss(self._new(mat.rows - 1, mat.cols - 1, entry), pivot_val)\n"}
