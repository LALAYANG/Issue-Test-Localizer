{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25102", "model_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 52acc1f..3496d97 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -1,3 +1,4 @@\n+\n from functools import wraps\n \n from scipy.sparse import issparse\n@@ -12,6 +13,7 @@ def _wrap_in_pandas_container(\n     *,\n     columns,\n     index=None,\n+    dtypes=None,\n ):\n     \"\"\"Create a Pandas DataFrame.\n \n@@ -59,7 +61,10 @@ def _wrap_in_pandas_container(\n             data_to_wrap.index = index\n         return data_to_wrap\n \n-    return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n+    df = pd.DataFrame(data_to_wrap, index=index, columns=columns)\n+    if dtypes is not None:\n+        df = df.astype(dtypes)\n+    return df\n \n \n def _get_output_config(method, estimator=None):\n@@ -131,6 +136,7 @@ def _wrap_data_with_container(method, data_to_wrap, original_input, estimator):\n         data_to_wrap=data_to_wrap,\n         index=getattr(original_input, \"index\", None),\n         columns=estimator.get_feature_names_out,\n+        dtypes=getattr(original_input, \"dtypes\", None) if original_input is not None else None,\n     )\n \n \n", "occurrence": 1}
