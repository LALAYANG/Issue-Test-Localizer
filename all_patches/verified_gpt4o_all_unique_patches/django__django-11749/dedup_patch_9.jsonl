{"model_name_or_path": "agentless", "instance_id": "django__django-11749", "model_patch": "diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py\nindex f9cfb8d..68f7954 100644\n--- a/django/core/management/__init__.py\n+++ b/django/core/management/__init__.py\n@@ -53,7 +53,13 @@ def call_command(command_name, *args, **options):\n             else:\n                 yield opt\n     parser_actions = list(get_actions(parser))\n-    parse_args += ['{}={}'.format(min(opt.option_strings), arg_options[opt.dest]) for opt in parser_actions if opt.required and opt.dest in options]\n+    def is_required_action(opt):\n+        if opt.required:\n+            return True\n+        if hasattr(opt, 'container') and isinstance(opt.container, argparse._MutuallyExclusiveGroup):\n+            return opt.container.required\n+        return False\n+    parse_args += ['{}={}'.format(min(opt.option_strings), arg_options[opt.dest]) for opt in parser_actions if is_required_action(opt) and opt.dest in options]\n     defaults = parser.parse_args(args=parse_args)\n     defaults = dict(defaults._get_kwargs(), **arg_options)\n     stealth_options = set(command.base_stealth_options + command.stealth_options)"}
