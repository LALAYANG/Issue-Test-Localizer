{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 65a9a3c..ff066ac 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -164,7 +164,9 @@ class ClassAttribute:\n         self.docstring = docstring\n def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable, analyzer: ModuleAnalyzer=None) -> Dict[str, ClassAttribute]:\n     from sphinx.ext.autodoc import INSTANCEATTR\n-    obj_dict = attrgetter(subject, '__dict__', {})\n+    obj_dict = {}\n+    for cls in getmro(subject):\n+        obj_dict.update(attrgetter(cls, '__dict__', {}))\n     members = {}\n     if isenumclass(subject):\n         for name, value in subject.__members__.items():"}
