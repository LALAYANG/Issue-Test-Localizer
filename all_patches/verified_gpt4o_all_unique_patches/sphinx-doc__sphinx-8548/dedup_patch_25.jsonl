{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 6a4748c..7cd382e 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -314,6 +314,13 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable,\n             if namespace == ns and name not in members:\n                 members[name] = ClassAttribute(subject, name, INSTANCEATTR,\n                                                '\\n'.join(docstring))\n+        # Check base classes for cached docstrings\n+        for base in subject.__bases__:\n+            base_namespace = '.'.join([base.__module__, base.__name__])\n+            for (ns, name), docstring in analyzer.attr_docs.items():\n+                if base_namespace == ns and name not in members:\n+                    members[name] = ClassAttribute(base, name, INSTANCEATTR,\n+                                                   '\\n'.join(docstring))\n \n     return members\n \n", "occurrence": 1}
