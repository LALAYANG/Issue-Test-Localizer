{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 6a4748c..b4f6aa1 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -256,8 +256,10 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable,\n     \"\"\"Get members and attributes of target class.\"\"\"\n     from sphinx.ext.autodoc import INSTANCEATTR\n \n-    # the members directly defined in the class\n-    obj_dict = attrgetter(subject, '__dict__', {})\n+    # the members directly defined in the class and its base classes\n+    obj_dict = {}\n+    for cls in getmro(subject):\n+        obj_dict.update(attrgetter(cls, '__dict__', {}))\n \n     members = {}  # type: Dict[str, ClassAttribute]\n \n", "occurrence": 1}
