{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 65a9a3c..5f5c810 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -205,8 +205,9 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable, an\n     if analyzer:\n         namespace = '.'.join(objpath)\n         for (ns, name), docstring in analyzer.attr_docs.items():\n-            if namespace == ns and name not in members:\n-                members[name] = ClassAttribute(subject, name, INSTANCEATTR, '\\n'.join(docstring))\n+            if name not in members:\n+                if any((ns == '.'.join(base.__module__.split('.') + [base.__name__]) for base in subject.__mro__)):\n+                    members[name] = ClassAttribute(subject, name, INSTANCEATTR, '\\n'.join(docstring))\n     return members\n from sphinx.ext.autodoc.mock import MockFinder, MockLoader, _MockModule, _MockObject, mock\n deprecated_alias('sphinx.ext.autodoc.importer', {'_MockModule': _MockModule, '_MockObject': _MockObject, 'MockFinder': MockFinder, 'MockLoader': MockLoader, 'mock': mock}, RemovedInSphinx40Warning, {'_MockModule': 'sphinx.ext.autodoc.mock._MockModule', '_MockObject': 'sphinx.ext.autodoc.mock._MockObject', 'MockFinder': 'sphinx.ext.autodoc.mock.MockFinder', 'MockLoader': 'sphinx.ext.autodoc.mock.MockLoader', 'mock': 'sphinx.ext.autodoc.mock.mock'})\n\\ No newline at end of file"}
