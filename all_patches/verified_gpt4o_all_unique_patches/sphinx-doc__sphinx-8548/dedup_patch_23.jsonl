{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 6a4748c..6eb5985 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -267,11 +267,10 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable,\n             if name not in members:\n                 members[name] = ClassAttribute(subject, name, value)\n \n-        superclass = subject.__mro__[1]\n-        for name in obj_dict:\n-            if name not in superclass.__dict__:\n-                value = safe_getattr(subject, name)\n-                members[name] = ClassAttribute(subject, name, value)\n+        for base in subject.__mro__[1:]:\n+            for name, value in base.__dict__.items():\n+                if name not in members:\n+                    members[name] = ClassAttribute(base, name, value)\n \n     # members in __slots__\n     try:\n", "occurrence": 1}
