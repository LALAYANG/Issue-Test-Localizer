{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3305", "model_patch": "diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 85617db..52ab9e6 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -754,10 +754,16 @@ class DataArray(AbstractArray, DataWithCoords):\n         return computation.dot(self, other, dims=dims)\n     def sortby(self, variables: Union[Hashable, 'DataArray', Sequence[Union[Hashable, 'DataArray']]], ascending: bool=True) -> 'DataArray':\n         ds = self._to_temp_dataset().sortby(variables, ascending=ascending)\n-        return self._from_temp_dataset(ds)\n+        result = self._from_temp_dataset(ds)\n+        if keep_attrs:\n+            result.attrs = self.attrs\n+        return result\n     def quantile(self, q: Any, dim: Union[Hashable, Sequence[Hashable], None]=None, interpolation: str='linear', keep_attrs: bool=None) -> 'DataArray':\n         ds = self._to_temp_dataset().quantile(q, dim=dim, keep_attrs=keep_attrs, interpolation=interpolation)\n-        return self._from_temp_dataset(ds)\n+        result = self._from_temp_dataset(ds)\n+        if keep_attrs:\n+            result.attrs = self.attrs\n+        return result\n     def rank(self, dim: Hashable, pct: bool=False, keep_attrs: bool=None) -> 'DataArray':\n         ds = self._to_temp_dataset().rank(dim, pct=pct, keep_attrs=keep_attrs)\n         return self._from_temp_dataset(ds)"}
