{"model_name_or_path": "agentless", "instance_id": "django__django-15629", "model_patch": "diff --git a/django/db/backends/mysql/schema.py b/django/db/backends/mysql/schema.py\nindex a0e95ce..cf072cb 100644\n--- a/django/db/backends/mysql/schema.py\n+++ b/django/db/backends/mysql/schema.py\n@@ -83,7 +83,11 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n         return new_type\n     def _alter_column_type_sql(self, model, old_field, new_field, new_type):\n         new_type = self._set_field_new_type_null_status(old_field, new_type)\n+        if getattr(old_field, 'db_collation', None) and (not isinstance(old_field, fields.CharField)):\n+            new_type += f' COLLATE {old_field.db_collation}'\n         return super()._alter_column_type_sql(model, old_field, new_field, new_type)\n     def _rename_field_sql(self, table, old_field, new_field, new_type):\n         new_type = self._set_field_new_type_null_status(old_field, new_type)\n+        if getattr(old_field, 'db_collation', None) and (not isinstance(old_field, fields.CharField)):\n+            new_type += f' COLLATE {old_field.db_collation}'\n         return super()._rename_field_sql(table, old_field, new_field, new_type)\n\\ No newline at end of file"}
