{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24026", "model_patch": "diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py\nindex 718e3a5..661db35 100644\n--- a/lib/matplotlib/stackplot.py\n+++ b/lib/matplotlib/stackplot.py\n@@ -70,7 +70,7 @@ def stackplot(axes, x, *args,\n \n     labels = iter(labels)\n     if colors is not None:\n-        axes.set_prop_cycle(color=colors)\n+        colors = [axes._get_lines.prop_cycler.by_key()['color'][int(c[1])] if isinstance(c, str) and re.match(\"^C[0-9]$\", c) else c for c in colors]\n \n     # Assume data passed has not been 'stacked', so stack it here.\n     # We'll need a float buffer for the upcoming calculations.\n@@ -108,8 +108,8 @@ def stackplot(axes, x, *args,\n         stack += first_line\n \n     # Color between x = 0 and the first array.\n-    color = axes._get_lines.get_next_color()\n-    coll = axes.fill_between(x, first_line, stack[0, :],\n+    color = colors[0] if colors is not None else axes._get_lines.get_next_color()\n+    coll = axes.fill_between(x, first_line, stack[0, :], \n                              facecolor=color, label=next(labels, None),\n                              **kwargs)\n     coll.sticky_edges.y[:] = [0]\n@@ -117,8 +117,8 @@ def stackplot(axes, x, *args,\n \n     # Color between array i-1 and array i\n     for i in range(len(y) - 1):\n-        color = axes._get_lines.get_next_color()\n-        r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],\n+        color = colors[i + 1] if colors is not None else axes._get_lines.get_next_color()\n+        r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :], \n                                    facecolor=color, label=next(labels, None),\n                                    **kwargs))\n-    return r\n+    return r\n", "occurrence": 1}
