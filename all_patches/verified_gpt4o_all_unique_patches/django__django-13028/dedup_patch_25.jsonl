{"model_name_or_path": "agentless", "instance_id": "django__django-13028", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a6a3e97..ec36835 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1122,16 +1122,16 @@ class Query(BaseExpression):\n                 for v in value:\n                     self.check_query_object_type(v, opts, field)\n \n-    def check_filterable(self, expression):\n+    def check_filterable(self, value):\n         \"\"\"Raise an error if expression cannot be used in a WHERE clause.\"\"\"\n-        if not getattr(expression, 'filterable', True):\n-            raise NotSupportedError(\n-                expression.__class__.__name__ + ' is disallowed in the filter '\n-                'clause.'\n-            )\n-        if hasattr(expression, 'get_source_expressions'):\n-            for expr in expression.get_source_expressions():\n-                self.check_filterable(expr)\n+        if hasattr(value, 'resolve_expression'):\n+            if not getattr(value, 'filterable', True):\n+                raise NotSupportedError(\n+                    value.__class__.__name__ + ' is disallowed in the filter clause.'\n+                )\n+            if hasattr(value, 'get_source_expressions'):\n+                for expr in value.get_source_expressions():\n+                    self.check_filterable(expr)\n \n     def build_lookup(self, lookups, lhs, rhs):\n         \"\"\"\n"}
