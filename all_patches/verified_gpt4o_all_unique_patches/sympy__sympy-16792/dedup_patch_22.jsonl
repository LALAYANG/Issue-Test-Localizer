{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16792", "model_patch": "diff --git a/sympy/utilities/autowrap.py b/sympy/utilities/autowrap.py\nindex da40c47..a984690 100644\n--- a/sympy/utilities/autowrap.py\n+++ b/sympy/utilities/autowrap.py\n@@ -139,8 +139,11 @@ class CythonCodeWrapper(CodeWrapper):\n         functions = []\n         for routine in routines:\n             prototype = self.generator.get_prototype(routine)\n-            headers.append(self.pyx_header.format(header_file=prefix, prototype=prototype))\n-            py_rets, py_args, py_loc, py_inf = self._partition_args(routine.arguments)\n+            all_args = routine.arguments\n+            if not any((arg.name in expr.free_symbols for arg in all_args)):\n+                all_args = [all_args[0]]\n+            headers.append(self.pyx_header.format(header_file=prefix, prototype=self.generator.get_prototype(routine, all_args)))\n+            py_rets, py_args, py_loc, py_inf = self._partition_args(all_args)\n             name = routine.name\n             arg_string = ', '.join((self._prototype_arg(arg) for arg in py_args))\n             local_decs = []"}
