{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10323", "model_patch": "diff --git a/sphinx/directives/code.py b/sphinx/directives/code.py\nindex 2bf31d0..a708e82 100644\n--- a/sphinx/directives/code.py\n+++ b/sphinx/directives/code.py\n@@ -343,14 +343,20 @@ class LiteralIncludeReader:\n     def prepend_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:\n         prepend = self.options.get('prepend')\n         if prepend:\n-            lines.insert(0, prepend + '\\n')\n+            # Determine the indentation of the first line in lines\n+            indent = len(lines[0]) - len(lines[0].lstrip())\n+            indented_prepend = ' ' * indent + prepend\n+            lines.insert(0, indented_prepend + '\\n')\n \n         return lines\n \n     def append_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:\n         append = self.options.get('append')\n         if append:\n-            lines.append(append + '\\n')\n+            # Determine the indentation of the last line in lines\n+            indent = len(lines[-1]) - len(lines[-1].lstrip())\n+            indented_append = ' ' * indent + append\n+            lines.append(indented_append + '\\n')\n \n         return lines\n \n"}
