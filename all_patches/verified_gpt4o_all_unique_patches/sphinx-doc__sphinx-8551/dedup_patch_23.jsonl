{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8551", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex f44a82b..bd48ae9 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -91,8 +91,8 @@ def type_to_xref(text: str, env: BuildEnvironment = None) -> addnodes.pending_xr\n     else:\n         kwargs = {}\n \n-    return pending_xref('', nodes.Text(text),\n-                        refdomain='py', reftype=reftype, reftarget=text, **kwargs)\n+    return addnodes.pending_xref('', nodes.Text(text),\n+                                 refdomain='py', reftype=reftype, reftarget=text, **kwargs)\n \n \n def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Node]:\n@@ -157,10 +157,13 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n     try:\n         tree = ast_parse(annotation)\n         result = unparse(tree)\n-        for i, node in enumerate(result):\n+        final_result = []\n+        for node in result:\n             if isinstance(node, nodes.Text):\n-                result[i] = type_to_xref(str(node), env)\n-        return result\n+                final_result.append(type_to_xref(str(node), env))\n+            else:\n+                final_result.append(node)\n+        return final_result\n     except SyntaxError:\n         return [type_to_xref(annotation, env)]\n \n", "occurrence": 1}
