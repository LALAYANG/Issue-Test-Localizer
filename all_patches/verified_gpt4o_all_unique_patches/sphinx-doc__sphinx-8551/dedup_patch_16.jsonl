{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8551", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex f44a82b..97a4d8c 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -1294,9 +1294,14 @@ class PythonDomain(Domain):\n                      ) -> Element:\n         modname = node.get('py:module')\n         clsname = node.get('py:class')\n-        searchmode = 1 if node.hasattr('refspecific') else 0\n+        searchmode = 1\n         matches = self.find_obj(env, modname, clsname, target,\n                                 type, searchmode)\n+        if not matches and modname:\n+            # Try searching with the broader module in case of no matches from refspecific\n+            searchmode = 0\n+            matches = self.find_obj(env, modname, clsname, target,\n+                                    type, searchmode)\n \n         if not matches and type == 'attr':\n             # fallback to meth (for property)\n", "occurrence": 1}
