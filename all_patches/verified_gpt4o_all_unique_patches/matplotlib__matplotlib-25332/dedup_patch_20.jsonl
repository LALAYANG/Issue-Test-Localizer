{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..6ca510a 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,6 +3174,9 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        # Remove any weak references that cannot be pickled.\n+        state = {k: (None if isinstance(v, weakref.ReferenceType) else v)\n+                 for k, v in state.items()}\n         return state\n \n     def __setstate__(self, state):\n@@ -3185,7 +3188,8 @@ None}, default: None\n                 f\"This figure was saved with matplotlib version {version} and \"\n                 f\"is unlikely to function correctly.\")\n \n-        self.__dict__ = state\n+        # Ensure weak references are restored correctly.\n+        self.__dict__.update({k: v for k, v in state.items() if v is not None})\n \n         # re-initialise some of the unstored state information\n         FigureCanvasBase(self)  # Set self.canvas.\n", "occurrence": 1}
