{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..41ab426 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,6 +3174,8 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        # Convert weak references to strong references before pickling.\n+        state['_axobservers'] = list(self._axobservers.callbacks[\"_axes_change_event\"])\n         return state\n \n     def __setstate__(self, state):\n@@ -3201,6 +3203,8 @@ None}, default: None\n             pylab_helpers.Gcf._set_new_active_manager(mgr)\n             plt.draw_if_interactive()\n \n+        # Restore weak references after unpickling.\n+        self._axobservers.callbacks[\"_axes_change_event\"] = weakref.WeakKeyDictionary({self: callback for callback in state.pop('_axobservers')})\n         self.stale = True\n \n     def add_axobserver(self, func):\n", "occurrence": 1}
