{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4356", "model_patch": "diff --git a/xarray/core/nanops.py b/xarray/core/nanops.py\nindex ba6f235..3aea178 100644\n--- a/xarray/core/nanops.py\n+++ b/xarray/core/nanops.py\n@@ -13,9 +13,9 @@ def _replace_nan(a, val):\n     return (where_method(val, mask, a), mask)\n def _maybe_null_out(result, axis, mask, min_count=1):\n     if hasattr(axis, '__len__'):\n-        raise ValueError('min_count is not available for reduction with more than one dimensions.')\n-    if axis is not None and getattr(result, 'ndim', False):\n-        null_mask = mask.shape[axis] - mask.sum(axis) - min_count < 0\n+        if result.ndim != len(axis):\n+            raise ValueError('axis length does not match result dimensions')\n+        null_mask = np.prod([mask.shape[a] for a in axis]) - mask.sum(axis) - min_count < 0\n         if null_mask.any():\n             dtype, fill_value = dtypes.maybe_promote(result.dtype)\n             result = result.astype(dtype)"}
