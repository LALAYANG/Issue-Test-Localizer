{"model_name_or_path": "agentless", "instance_id": "django__django-16901", "model_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 4465765..e123c9f 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -72,7 +72,17 @@ class Q(tree.Node):\n         return self._combine(other, self.AND)\n \n     def __xor__(self, other):\n-        return self._combine(other, self.XOR)\n+        if not isinstance(other, Q):\n+            raise TypeError(other)\n+        # Create a new Q object to hold the combined result\n+        result = Q()\n+        # XOR should be true when an odd number of conditions are true\n+        for q in [self, other]:\n+            if not result:\n+                result = q\n+            else:\n+                result = result & ~q | ~result & q\n+        return result\n \n     def __invert__(self):\n         obj = self.copy()\n"}
