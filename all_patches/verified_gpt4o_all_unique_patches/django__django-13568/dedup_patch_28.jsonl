{"model_name_or_path": "agentless", "instance_id": "django__django-13568", "model_patch": "diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py\nindex 2983afb..c127d5b 100644\n--- a/django/contrib/auth/checks.py\n+++ b/django/contrib/auth/checks.py\n@@ -1,3 +1,4 @@\n+\n from itertools import chain\n from types import MethodType\n \n@@ -51,23 +52,28 @@ def check_user_model(app_configs=None, **kwargs):\n             )\n         )\n \n-    # Check that the username field is unique\n+    # Check that the username field is unique or has a unique constraint\n     if not cls._meta.get_field(cls.USERNAME_FIELD).unique:\n+        has_unique_constraint = any(\n+            isinstance(constraint, models.UniqueConstraint) and cls.USERNAME_FIELD in constraint.fields\n+            for constraint in cls._meta.constraints\n+        )\n         if (settings.AUTHENTICATION_BACKENDS ==\n-                ['django.contrib.auth.backends.ModelBackend']):\n+                ['django.contrib.auth.backends.ModelBackend']) and not has_unique_constraint:\n             errors.append(\n                 checks.Error(\n-                    \"'%s.%s' must be unique because it is named as the 'USERNAME_FIELD'.\" % (\n+                    \"'%s.%s' must be unique or have a unique constraint \"\n+                    \"because it is named as the 'USERNAME_FIELD'.\" % (\n                         cls._meta.object_name, cls.USERNAME_FIELD\n                     ),\n                     obj=cls,\n                     id='auth.E003',\n                 )\n             )\n-        else:\n+        elif not has_unique_constraint:\n             errors.append(\n                 checks.Warning(\n-                    \"'%s.%s' is named as the 'USERNAME_FIELD', but it is not unique.\" % (\n+                    \"'%s.%s' is named as the 'USERNAME_FIELD', but it is not unique or doesn't have a unique constraint.\" % (\n                         cls._meta.object_name, cls.USERNAME_FIELD\n                     ),\n                     hint='Ensure that your authentication backend(s) can handle non-unique usernames.',\n", "occurrence": 1}
