{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14096", "model_patch": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex 7fb9e10..63a54ae 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -275,7 +275,10 @@ class SkyCoord(ShapedLikeNDArray):\n             frame_cls = frame_transform_graph.lookup_name(attr)\n             if frame_cls is not None and self.frame.is_transformable_to(frame_cls):\n                 return self.transform_to(attr)\n-        raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'\")\n+        if '_sky_coord_frame' in self.__dict__ and hasattr(self._sky_coord_frame, attr):\n+            raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}', but it does have an attribute '{attr}' in the frame '{self._sky_coord_frame.__class__.__name__}' which is not directly accessible.\")\n+        else:\n+            raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'\")\n     def __setattr__(self, attr, val):\n         if '_sky_coord_frame' in self.__dict__:\n             if self._is_name(attr):"}
