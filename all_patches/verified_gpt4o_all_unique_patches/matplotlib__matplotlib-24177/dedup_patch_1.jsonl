{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..3a68298 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6850,7 +6850,9 @@ such objects\n             fill = (histtype == 'stepfilled')\n \n             xvals, yvals = [], []\n-            for m in tops:\n+            for i, m in enumerate(tops):\n+                if density:\n+                    m = m / (np.diff(bins) * m.sum())\n                 if stacked:\n                     # top of the previous polygon becomes the bottom\n                     y[2*len(bins)-1:] = y[1:2*len(bins)-1][::-1]\n@@ -6883,7 +6885,19 @@ such objects\n                     edgecolor=None if fill else c,\n                     fill=fill if fill else None,\n                     zorder=None if fill else mlines.Line2D.zorder))\n-            for patch_list in patches:\n+            for i, patch_list in enumerate(patches):\n+                if density:\n+                    for patch in patch_list:\n+                        if orientation == 'vertical':\n+                            patch.sticky_edges.y[:] = []\n+                        elif orientation == 'horizontal':\n+                            patch.sticky_edges.x[:] = []\n+                else:\n+                    for patch in patch_list:\n+                        if orientation == 'vertical':\n+                            patch.sticky_edges.y.append(0)\n+                        elif orientation == 'horizontal':\n+                            patch.sticky_edges.x.append(0)\n                 for patch in patch_list:\n                     if orientation == 'vertical':\n                         patch.sticky_edges.y.append(0)\n", "occurrence": 1}
