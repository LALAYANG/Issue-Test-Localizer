{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..127a1b1 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6883,12 +6883,22 @@ such objects\n                     edgecolor=None if fill else c,\n                     fill=fill if fill else None,\n                     zorder=None if fill else mlines.Line2D.zorder))\n-            for patch_list in patches:\n-                for patch in patch_list:\n-                    if orientation == 'vertical':\n-                        patch.sticky_edges.y.append(0)\n-                    elif orientation == 'horizontal':\n-                        patch.sticky_edges.x.append(0)\n+            if density:\n+                for patch_list in patches:\n+                    for patch in patch_list:\n+                        if orientation == 'vertical':\n+                            patch.sticky_edges.y[:] = []\n+                            patch.sticky_edges.y.extend([0, max(tops[0])])\n+                        elif orientation == 'horizontal':\n+                            patch.sticky_edges.x[:] = []\n+                            patch.sticky_edges.x.extend([0, max(tops[0])])\n+            else:\n+                for patch_list in patches:\n+                    for patch in patch_list:\n+                        if orientation == 'vertical':\n+                            patch.sticky_edges.y.append(0)\n+                        elif orientation == 'horizontal':\n+                            patch.sticky_edges.x.append(0)\n \n             # we return patches, so put it back in the expected order\n             patches.reverse()\n", "occurrence": 1}
