{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..b0051c7 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2038,7 +2038,14 @@ class Axes(_AxesBase):\n             split = -1 if fill else 2 * len(bins)\n             for x, y, c in reversed(list(zip(xvals, yvals, color))):\n                 patches.append(self.fill(x[:split], y[:split], closed=True if fill else None, facecolor=c, edgecolor=None if fill else c, fill=fill if fill else None, zorder=None if fill else mlines.Line2D.zorder))\n-            for patch_list in patches:\n+            for patch_list, m in zip(patches, tops):\n+                if density:\n+                    if orientation == 'vertical':\n+                        self.dataLim.update_from_data_xy(np.column_stack([bins[:-1], m]))\n+                        self.dataLim.update_from_data_xy(np.column_stack([bins[1:], m]))\n+                    elif orientation == 'horizontal':\n+                        self.dataLim.update_from_data_xy(np.column_stack([m, bins[:-1]]))\n+                        self.dataLim.update_from_data_xy(np.column_stack([m, bins[1:]]))\n                 for patch in patch_list:\n                     if orientation == 'vertical':\n                         patch.sticky_edges.y.append(0)"}
