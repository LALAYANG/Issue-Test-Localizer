{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex bf1ee33..17d6170 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -153,7 +153,8 @@ def get_object_members(subject: Any, objpath: List[str], attrgetter: Callable, a\n         namespace = '.'.join(objpath)\n         for ns, name in analyzer.find_attr_docs():\n             if namespace == ns and name not in members:\n-                members[name] = Attribute(name, True, INSTANCEATTR)\n+                if ns.startswith(namespace):\n+                    members[name] = Attribute(name, True, INSTANCEATTR)\n     return members\n def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable) -> Dict[str, 'ObjectMember']:\n     from sphinx.ext.autodoc import INSTANCEATTR, ObjectMember"}
