{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex bf1ee33..7a22d04 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -111,10 +111,11 @@ class Attribute(NamedTuple):\n     name: str\n     directly_defined: bool\n     value: Any\n-def get_object_members(subject: Any, objpath: List[str], attrgetter: Callable, analyzer: ModuleAnalyzer=None) -> Dict[str, Attribute]:\n+def get_object_members(subject: Any, objpath: List[str], attrgetter: Callable, analyzer: ModuleAnalyzer=None, namespace: str='') -> Dict[str, Attribute]:\n     from sphinx.ext.autodoc import INSTANCEATTR\n     obj_dict = attrgetter(subject, '__dict__', {})\n     members = {}\n+    full_names = set()\n     if isenumclass(subject):\n         for name, value in subject.__members__.items():\n             if name not in members:"}
