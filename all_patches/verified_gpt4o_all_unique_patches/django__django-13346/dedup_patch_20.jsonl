{"model_name_or_path": "agentless", "instance_id": "django__django-13346", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex a0dea96..c1b921a 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -294,7 +294,11 @@ class KeyTransform(Transform):\n     def as_mysql(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n-        return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n+        if isinstance(self.rhs, list):\n+            placeholders = ', '.join(['JSON_EXTRACT(%s, %%s)' % lhs] * len(self.rhs))\n+            return '%s IN (%s)' % (lhs, placeholders), tuple(params) + tuple(json_path for _ in self.rhs)\n+        else:\n+            return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n \n     def as_oracle(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n@@ -317,7 +321,11 @@ class KeyTransform(Transform):\n     def as_sqlite(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n-        return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n+        if isinstance(self.rhs, list):\n+            placeholders = ', '.join(['JSON_EXTRACT(%s, %%s)' % lhs] * len(self.rhs))\n+            return '%s IN (%s)' % (lhs, placeholders), tuple(params) + tuple(json_path for _ in self.rhs)\n+        else:\n+            return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n \n \n class KeyTextTransform(KeyTransform):\n", "occurrence": 1}
