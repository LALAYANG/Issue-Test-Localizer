{"model_name_or_path": "agentless", "instance_id": "django__django-13346", "model_patch": "--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n+class KeyTransformIn(lookups.In):\n+    def process_lhs(self, compiler, connection):\n+        lhs, lhs_params = super().process_lhs(compiler, connection)\n+        if connection.vendor == 'sqlite':\n+            lhs, _ = self.lhs.preprocess_lhs(compiler, connection, lhs_only=True)\n+            lhs = 'JSON_TYPE(%s, %%s)' % lhs\n+        return (lhs, lhs_params)\n+    def process_rhs(self, compiler, connection):\n+        rhs, rhs_params = super().process_rhs(compiler, connection)\n+        if connection.vendor == 'oracle':\n+            func = []\n+            for value in rhs_params:\n+                value = json.loads(value)\n+                function = 'JSON_QUERY' if isinstance(value, (list, dict)) else 'JSON_VALUE'\n+                func.append(\"%s('%s', '$.value')\" % (function, json.dumps({'value': value})))\n+            rhs = rhs % tuple(func)\n+            rhs_params = []\n+        elif connection.vendor == 'sqlite':\n+            func = [\"JSON_EXTRACT(%s, '$')\" if value != 'null' else '%s' for value in rhs_params]\n+            rhs = rhs % tuple(func)\n+        return (rhs, rhs_params)\n+KeyTransform.register_lookup(KeyTransformIn)"}
