{"model_name_or_path": "agentless", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d98aa67..664cd34 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -138,8 +138,8 @@ class SQLCompiler:\n             ordering = self.query.order_by\n         elif self.query.order_by:\n             ordering = self.query.order_by\n-        elif self.query.get_meta().ordering:\n-            ordering = self.query.get_meta().ordering\n+        if self.query.get_meta().ordering:\n+            ordering = (*self.query.get_meta().ordering, *ordering)\n             self._meta_ordering = ordering\n         else:\n             ordering = []\n@@ -173,10 +173,11 @@ class SQLCompiler:\n                     expr = Cast(expr, expr.output_field)\n                 order_by.append((OrderBy(expr, descending=descending), False))\n                 continue\n-            if '.' in field:\n-                table, col = col.split('.', 1)\n-                order_by.append((OrderBy(RawSQL('%s.%s' % (self.quote_name_unless_alias(table), col), []), descending=descending), False))\n-                continue\n+            if isinstance(col, str) and '__' in col:\n+                parts = col.split(LOOKUP_SEP)\n+                if parts[-1] == 'id' and len(parts) > 1:\n+                    col = LOOKUP_SEP.join(parts[:-1])\n+                order_by.extend(self.find_ordering_name(col, self.query.get_meta(), default_order=asc))\n             if not self.query.extra or col not in self.query.extra:\n                 order_by.extend(self.find_ordering_name(field, self.query.get_meta(), default_order=asc))\n             elif col not in self.query.extra_select:"}
