{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5787", "model_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex ba95b0e..3076f28 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -408,19 +408,33 @@ class CollectErrorRepr(TerminalRepr):\n         out.line(self.longrepr, red=True)\n \n \n+import traceback\n+\n def pytest_report_to_serializable(report):\n     if isinstance(report, (TestReport, CollectReport)):\n         data = report._to_json()\n         data[\"_report_type\"] = report.__class__.__name__\n+        if hasattr(report.longrepr, \"chain\"):\n+            data[\"longrepr_chain\"] = [\n+                (repr(repr_type), repr(repr_value), repr(repr_tb))\n+                for repr_type, repr_value, repr_tb in report.longrepr.chain\n+            ]\n         return data\n \n \n def pytest_report_from_serializable(data):\n     if \"_report_type\" in data:\n         if data[\"_report_type\"] == \"TestReport\":\n-            return TestReport._from_json(data)\n+            report = TestReport._from_json(data)\n         elif data[\"_report_type\"] == \"CollectReport\":\n-            return CollectReport._from_json(data)\n-        assert False, \"Unknown report_type unserialize data: {}\".format(\n-            data[\"_report_type\"]\n-        )\n+            report = CollectReport._from_json(data)\n+        else:\n+            assert False, \"Unknown report_type unserialize data: {}\".format(\n+                data[\"_report_type\"]\n+            )\n+        if \"longrepr_chain\" in data:\n+            report.longrepr.chain = [\n+                (eval(repr_type), eval(repr_value), eval(repr_tb))\n+                for repr_type, repr_value, repr_tb in data[\"longrepr_chain\"]\n+            ]\n+        return report\n", "occurrence": 1}
