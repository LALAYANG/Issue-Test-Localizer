{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5787", "model_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex ba95b0e..b18e710 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -335,6 +335,11 @@ class TestReport(BaseReport):\n             self.__class__.__name__, self.nodeid, self.when, self.outcome\n         )\n \n+        if isinstance(longrepr, ExceptionInfo):\n+            report.longrepr = longrepr.getrepr(style=item.config.getoption(\"tbstyle\", \"auto\"))\n+\n+        return report\n+\n     @classmethod\n     def from_item_and_call(cls, item, call):\n         \"\"\"\n@@ -366,7 +371,7 @@ class TestReport(BaseReport):\n                     )\n         for rwhen, key, content in item._report_sections:\n             sections.append((\"Captured {} {}\".format(key, rwhen), content))\n-        return cls(\n+        report = cls(\n             item.nodeid,\n             item.location,\n             keywords,\n@@ -378,6 +383,11 @@ class TestReport(BaseReport):\n             user_properties=item.user_properties,\n         )\n \n+        if isinstance(longrepr, ExceptionInfo):\n+            report.longrepr = longrepr.getrepr(style=item.config.getoption(\"tbstyle\", \"auto\"))\n+\n+        return report\n+\n \n class CollectReport(BaseReport):\n     when = \"collect\"\n@@ -423,4 +433,9 @@ def pytest_report_from_serializable(data):\n             return CollectReport._from_json(data)\n         assert False, \"Unknown report_type unserialize data: {}\".format(\n             data[\"_report_type\"]\n-        )\n+        )\n+\n+        if isinstance(longrepr, ExceptionInfo):\n+            report.longrepr = longrepr.getrepr(style=item.config.getoption(\"tbstyle\", \"auto\"))\n+\n+        return report\n"}
