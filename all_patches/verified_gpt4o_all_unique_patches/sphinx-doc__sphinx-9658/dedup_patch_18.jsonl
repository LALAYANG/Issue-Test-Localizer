{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9658", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 281da6f..53f4123 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -66,13 +66,16 @@ class _MockObject:\n         return call\n \n     def __repr__(self) -> str:\n+        # Ensure that the full name of the base class is shown\n+        if self.__display_name__.endswith('.'):\n+            return self.__display_name__ + self.__class__.__name__\n         return self.__display_name__\n \n \n def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None, decorator_args: Tuple = ()) -> Any:\n     attrs = {'__module__': module,\n-             '__display_name__': module + '.' + name,\n+             '__display_name__': module + '.' + name if not module.endswith('.') else module + name,\n              '__sphinx_decorator_args__': decorator_args}\n     attrs.update(attributes or {})\n \n"}
