{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9658", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 8db72bb..3127654 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -37,10 +37,13 @@ class _MockObject:\n         call.__sphinx_decorator_args__ = args\n         return call\n     def __repr__(self) -> str:\n-        return self.__display_name__\n+        return self.__module__ + '.' + self.__class__.__name__\n def _make_subclass(name: str, module: str, superclass: Any=_MockObject, attributes: Any=None, decorator_args: Tuple=()) -> Any:\n     attrs = {'__module__': module, '__display_name__': module + '.' + name, '__sphinx_decorator_args__': decorator_args}\n-    attrs.update(attributes or {})\n+    if attributes:\n+        attrs.update(attributes)\n+    if '__name__' not in attrs:\n+        attrs['__name__'] = name\n     return type(name, (superclass,), attrs)\n class _MockModule(ModuleType):\n     __file__ = os.devnull"}
