{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5262", "model_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 6b2d076..d490c28 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -430,11 +430,11 @@ class EncodedFile(object):\n         self.encoding = encoding\n \n     def write(self, obj):\n-        if isinstance(obj, six.text_type):\n-            obj = obj.encode(self.encoding, \"replace\")\n-        elif _PY3:\n+        if isinstance(obj, six.binary_type):\n+            obj = obj.decode(self.encoding, \"replace\")\n+        elif not isinstance(obj, six.text_type):\n             raise TypeError(\n-                \"write() argument must be str, not {}\".format(type(obj).__name__)\n+                \"write() argument must be str or bytes, not {}\".format(type(obj).__name__)\n             )\n         self.buffer.write(obj)\n \n"}
