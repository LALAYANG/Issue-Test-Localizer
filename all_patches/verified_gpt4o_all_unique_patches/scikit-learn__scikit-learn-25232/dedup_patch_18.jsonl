{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25232", "model_patch": "diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py\nindex 62cdd57..9afe086 100644\n--- a/sklearn/impute/_iterative.py\n+++ b/sklearn/impute/_iterative.py\n@@ -117,6 +117,12 @@ class IterativeImputer(_BaseImputer):\n         Which strategy to use to initialize the missing values. Same as the\n         `strategy` parameter in :class:`~sklearn.impute.SimpleImputer`.\n \n+    fill_value : {number, string, np.nan}, default=None\n+        When `initial_strategy=\"constant\"`, `fill_value` is used to replace\n+        missing values. If left to the default, `fill_value` will be 0 when\n+        imputing numerical data and \"missing_value\" for strings or object\n+        data types. `np.nan` is also accepted.\n+\n     imputation_order : {'ascending', 'descending', 'roman', 'arabic', \\\n             'random'}, default='ascending'\n         The order in which the features will be imputed. Possible values:\n@@ -302,6 +308,7 @@ class IterativeImputer(_BaseImputer):\n         n_nearest_features=None,\n         initial_strategy=\"mean\",\n         imputation_order=\"ascending\",\n+        fill_value=None,\n         skip_complete=False,\n         min_value=-np.inf,\n         max_value=np.inf,\n@@ -323,6 +330,7 @@ class IterativeImputer(_BaseImputer):\n         self.n_nearest_features = n_nearest_features\n         self.initial_strategy = initial_strategy\n         self.imputation_order = imputation_order\n+        self.fill_value = fill_value\n         self.skip_complete = skip_complete\n         self.min_value = min_value\n         self.max_value = max_value\n@@ -614,6 +622,7 @@ class IterativeImputer(_BaseImputer):\n                 missing_values=self.missing_values,\n                 strategy=self.initial_strategy,\n                 keep_empty_features=self.keep_empty_features,\n+                fill_value=self.fill_value,\n             )\n             X_filled = self.initial_imputer_.fit_transform(X)\n         else:\n"}
