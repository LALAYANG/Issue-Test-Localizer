{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25232", "model_patch": "diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py\nindex 62cdd57..d05d367 100644\n--- a/sklearn/impute/_iterative.py\n+++ b/sklearn/impute/_iterative.py\n@@ -281,6 +281,7 @@ class IterativeImputer(_BaseImputer):\n         \"initial_strategy\": [\n             StrOptions({\"mean\", \"median\", \"most_frequent\", \"constant\"})\n         ],\n+        \"fill_value\": [None, Real, Integral, \"str\", \"array-like\"],\n         \"imputation_order\": [\n             StrOptions({\"ascending\", \"descending\", \"roman\", \"arabic\", \"random\"})\n         ],\n@@ -310,6 +311,11 @@ class IterativeImputer(_BaseImputer):\n         add_indicator=False,\n         keep_empty_features=False,\n     ):\n+        if initial_strategy == \"constant\" and fill_value is None:\n+            raise ValueError(\n+                \"When initial_strategy is set to 'constant', fill_value cannot be None.\"\n+            )\n+\n         super().__init__(\n             missing_values=missing_values,\n             add_indicator=add_indicator,\n@@ -322,6 +328,7 @@ class IterativeImputer(_BaseImputer):\n         self.tol = tol\n         self.n_nearest_features = n_nearest_features\n         self.initial_strategy = initial_strategy\n+        self.fill_value = fill_value\n         self.imputation_order = imputation_order\n         self.skip_complete = skip_complete\n         self.min_value = min_value\n"}
