{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25232", "model_patch": "diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py\nindex 62cdd57..fcfb18f 100644\n--- a/sklearn/impute/_iterative.py\n+++ b/sklearn/impute/_iterative.py\n@@ -281,6 +281,7 @@ class IterativeImputer(_BaseImputer):\n         \"initial_strategy\": [\n             StrOptions({\"mean\", \"median\", \"most_frequent\", \"constant\"})\n         ],\n+        \"fill_value\": [\"scalar\", \"str\"],\n         \"imputation_order\": [\n             StrOptions({\"ascending\", \"descending\", \"roman\", \"arabic\", \"random\"})\n         ],\n@@ -302,6 +303,7 @@ class IterativeImputer(_BaseImputer):\n         n_nearest_features=None,\n         initial_strategy=\"mean\",\n         imputation_order=\"ascending\",\n+        fill_value=None,\n         skip_complete=False,\n         min_value=-np.inf,\n         max_value=np.inf,\n@@ -328,6 +330,7 @@ class IterativeImputer(_BaseImputer):\n         self.max_value = max_value\n         self.verbose = verbose\n         self.random_state = random_state\n+        self.fill_value = fill_value\n \n     def _impute_one_feature(\n         self,\n@@ -614,6 +617,7 @@ class IterativeImputer(_BaseImputer):\n                 missing_values=self.missing_values,\n                 strategy=self.initial_strategy,\n                 keep_empty_features=self.keep_empty_features,\n+                fill_value=self.fill_value if self.initial_strategy == \"constant\" else None,\n             )\n             X_filled = self.initial_imputer_.fit_transform(X)\n         else:\n"}
