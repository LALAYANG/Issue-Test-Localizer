{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-7229", "model_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex ca74f84..05b264a 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -182,7 +182,8 @@ def merge_collected(grouped: dict[Hashable, list[MergeElement]], prioritized: Ma\n                         if not dict_equiv(variable.attrs, other_variable.attrs):\n                             raise MergeError(f'conflicting attribute values on combined variable {name!r}:\\nfirst value: {variable.attrs!r}\\nsecond value: {other_variable.attrs!r}')\n                 merged_vars[name] = variable\n-                merged_vars[name].attrs = merge_attrs([var.attrs for var, _ in indexed_elements], combine_attrs=combine_attrs)\n+                if name not in index_coord_names:\n+                    merged_vars[name].attrs = merge_attrs([var.attrs for var, _ in indexed_elements], combine_attrs=combine_attrs)\n                 merged_indexes[name] = index\n             else:\n                 variables = [variable for variable, _ in elements_list]\n@@ -191,7 +192,7 @@ def merge_collected(grouped: dict[Hashable, list[MergeElement]], prioritized: Ma\n                 except MergeError:\n                     if compat != 'minimal':\n                         raise\n-                if name in merged_vars:\n+                if name in merged_vars and name not in index_coord_names:\n                     merged_vars[name].attrs = merge_attrs([var.attrs for var in variables], combine_attrs=combine_attrs)\n     return (merged_vars, merged_indexes)"}
