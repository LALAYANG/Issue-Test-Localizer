{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-7229", "model_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex 952c546..172f29b 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -291,10 +291,14 @@ def merge_collected(\n                                 f\"variable {name!r}:\\nfirst value: {variable.attrs!r}\\nsecond value: {other_variable.attrs!r}\"\n                             )\n                 merged_vars[name] = variable\n-                merged_vars[name].attrs = merge_attrs(\n+                # Preserve existing coordinate attributes, if any\n+                preserved_attrs = merged_vars[name].attrs.copy()\n+                new_attrs = merge_attrs(\n                     [var.attrs for var, _ in indexed_elements],\n                     combine_attrs=combine_attrs,\n                 )\n+                preserved_attrs.update(new_attrs)\n+                merged_vars[name].attrs = preserved_attrs\n                 merged_indexes[name] = index\n             else:\n                 variables = [variable for variable, _ in elements_list]\n@@ -309,9 +313,13 @@ def merge_collected(\n                         raise\n \n                 if name in merged_vars:\n-                    merged_vars[name].attrs = merge_attrs(\n+                    # Preserve existing coordinate attributes, if any\n+                    preserved_attrs = merged_vars[name].attrs.copy()\n+                    new_attrs = merge_attrs(\n                         [var.attrs for var in variables], combine_attrs=combine_attrs\n                     )\n+                    preserved_attrs.update(new_attrs)\n+                    merged_vars[name].attrs = preserved_attrs\n \n     return merged_vars, merged_indexes\n \n", "occurrence": 1}
