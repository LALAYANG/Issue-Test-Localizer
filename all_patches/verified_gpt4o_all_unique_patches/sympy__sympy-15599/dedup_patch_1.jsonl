{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15599", "model_patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex 9ca06f6..5a347d2 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -73,14 +73,20 @@ class Mod(Function):\n             both_l = non_mod_l, mod_l = ([], [])\n             for arg in p.args:\n                 both_l[isinstance(arg, cls)].append(arg)\n-            if mod_l and all((inner.args[1] == q for inner in mod_l)):\n+            was = non_mod_l[:]\n+            non_mod_l = [cls(x, q) for x in non_mod_l]\n+            changed = was != non_mod_l\n+            if changed or (mod_l and all((inner.args[1] == q for inner in mod_l))):\n                 net = Add(*non_mod_l) + Add(*[i.args[0] for i in mod_l])\n                 return cls(net, q)\n         elif isinstance(p, Mul):\n             both_l = non_mod_l, mod_l = ([], [])\n             for arg in p.args:\n                 both_l[isinstance(arg, cls)].append(arg)\n-            if mod_l and all((inner.args[1] == q for inner in mod_l)):\n+            was = non_mod_l[:]\n+            non_mod_l = [cls(x, q) for x in non_mod_l]\n+            changed = was != non_mod_l\n+            if changed or (mod_l and all((inner.args[1] == q for inner in mod_l))):\n                 non_mod_l = [cls(x, q) for x in non_mod_l]\n                 mod = []\n                 non_mod = []"}
