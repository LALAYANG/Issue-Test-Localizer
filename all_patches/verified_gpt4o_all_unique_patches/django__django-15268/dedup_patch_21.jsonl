{"model_name_or_path": "agentless", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..79045d7 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -11,25 +11,31 @@ class MigrationOptimizer:\n             operations = result\n     def optimize_inner(self, operations, app_label):\n         new_operations = []\n-        for i, operation in enumerate(operations):\n-            right = True\n-            for j, other in enumerate(operations[i + 1:]):\n-                result = operation.reduce(other, app_label)\n-                if isinstance(result, list):\n-                    in_between = operations[i + 1:i + j + 1]\n-                    if right:\n-                        new_operations.extend(in_between)\n-                        new_operations.extend(result)\n-                    elif all((op.reduce(other, app_label) is True for op in in_between)):\n-                        new_operations.extend(result)\n-                        new_operations.extend(in_between)\n-                    else:\n-                        new_operations.append(operation)\n+        i = 0\n+        while i < len(operations):\n+            operation = operations[i]\n+            if isinstance(operation, (migrations.AlterUniqueTogether, migrations.AlterIndexTogether)):\n+                j = i + 1\n+                while j < len(operations):\n+                    next_operation = operations[j]\n+                    if not isinstance(next_operation, (migrations.AlterUniqueTogether, migrations.AlterIndexTogether)):\n                         break\n-                    new_operations.extend(operations[i + j + 2:])\n-                    return new_operations\n-                elif not result:\n-                    right = False\n+                    if operation.references_model(next_operation.name, app_label):\n+                        if isinstance(operation, migrations.AlterUniqueTogether) and isinstance(next_operation, migrations.AlterUniqueTogether):\n+                            merged_unique_together = operation.unique_together or set()\n+                            merged_unique_together.update(next_operation.unique_together or set())\n+                            new_operations.append(migrations.AlterUniqueTogether(name=operation.name, unique_together=merged_unique_together))\n+                        elif isinstance(operation, migrations.AlterIndexTogether) and isinstance(next_operation, migrations.AlterIndexTogether):\n+                            merged_index_together = operation.index_together or set()\n+                            merged_index_together.update(next_operation.index_together or set())\n+                            new_operations.append(migrations.AlterIndexTogether(name=operation.name, index_together=merged_index_together))\n+                        i = j + 1\n+                        break\n+                    j += 1\n+                else:\n+                    new_operations.append(operation)\n+                    i += 1\n             else:\n                 new_operations.append(operation)\n+                i += 1\n         return new_operations\n\\ No newline at end of file"}
