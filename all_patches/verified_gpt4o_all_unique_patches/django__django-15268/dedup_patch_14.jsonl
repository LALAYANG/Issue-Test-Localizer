{"model_name_or_path": "agentless", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..249574b 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -13,23 +13,19 @@ class MigrationOptimizer:\n         new_operations = []\n         for i, operation in enumerate(operations):\n             right = True\n-            for j, other in enumerate(operations[i + 1:]):\n+            j = i + 1\n+            while j < len(operations):\n+                other = operations[j]\n                 result = operation.reduce(other, app_label)\n-                if isinstance(result, list):\n-                    in_between = operations[i + 1:i + j + 1]\n-                    if right:\n-                        new_operations.extend(in_between)\n-                        new_operations.extend(result)\n-                    elif all((op.reduce(other, app_label) is True for op in in_between)):\n-                        new_operations.extend(result)\n-                        new_operations.extend(in_between)\n+                if result is not None:\n+                    operations.pop(j)\n+                    if isinstance(result, list):\n+                        operation = result[0]\n                     else:\n-                        new_operations.append(operation)\n+                        right = False\n                         break\n-                    new_operations.extend(operations[i + j + 2:])\n-                    return new_operations\n-                elif not result:\n-                    right = False\n+                else:\n+                    j += 1\n             else:\n                 new_operations.append(operation)\n         return new_operations\n\\ No newline at end of file"}
