{"model_name_or_path": "agentless", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex f01e0f5..e8ad589 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -65,5 +65,28 @@ class MigrationOptimizer:\n                     # Can't perform a right reduction.\n                     right = False\n             else:\n-                new_operations.append(operation)\n-        return new_operations\n+                if (\n+                    isinstance(operation, operations.AlterUniqueTogether) and\n+                    isinstance(operations[i + 1], operations.AlterUniqueTogether) and\n+                    operation.name == operations[i + 1].name\n+                ):\n+                    # Merge two consecutive AlterUniqueTogether operations\n+                    merged_op = operations.AlterUniqueTogether(\n+                        name=operation.name,\n+                        unique_together=operations[i + 1].unique_together\n+                    )\n+                    new_operations.append(merged_op)\n+                elif (\n+                    isinstance(operation, operations.AlterIndexTogether) and\n+                    isinstance(operations[i + 1], operations.AlterIndexTogether) and\n+                    operation.name == operations[i + 1].name\n+                ):\n+                    # Merge two consecutive AlterIndexTogether operations\n+                    merged_op = operations.AlterIndexTogether(\n+                        name=operation.name,\n+                        index_together=operations[i + 1].index_together\n+                    )\n+                    new_operations.append(merged_op)\n+                else:\n+                    new_operations.append(operation)\n+        return new_operations\n", "occurrence": 1}
