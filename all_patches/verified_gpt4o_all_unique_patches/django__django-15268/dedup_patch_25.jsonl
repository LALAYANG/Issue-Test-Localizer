{"model_name_or_path": "agentless", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..b494854 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -11,12 +11,15 @@ class MigrationOptimizer:\n             operations = result\n     def optimize_inner(self, operations, app_label):\n         new_operations = []\n-        for i, operation in enumerate(operations):\n+        i = 0\n+        while i < len(operations):\n+            operation = operations[i]\n             right = True\n-            for j, other in enumerate(operations[i + 1:]):\n+            for j in range(i + 1, len(operations)):\n+                other = operations[j]\n                 result = operation.reduce(other, app_label)\n                 if isinstance(result, list):\n-                    in_between = operations[i + 1:i + j + 1]\n+                    in_between = operations[i + 1:j]\n                     if right:\n                         new_operations.extend(in_between)\n                         new_operations.extend(result)\n@@ -26,10 +29,14 @@ class MigrationOptimizer:\n                     else:\n                         new_operations.append(operation)\n                         break\n-                    new_operations.extend(operations[i + j + 2:])\n-                    return new_operations\n+                    new_operations.extend(operations[j + 1:])\n+                    operations = new_operations\n+                    new_operations = []\n+                    i = -1\n+                    break\n                 elif not result:\n                     right = False\n             else:\n                 new_operations.append(operation)\n+            i += 1\n         return new_operations\n\\ No newline at end of file"}
