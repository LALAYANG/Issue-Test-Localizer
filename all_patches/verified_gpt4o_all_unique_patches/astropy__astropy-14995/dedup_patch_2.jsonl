{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14995", "model_patch": "--- a/astropy/nddata/nddata_withmixins.py\n+++ b/astropy/nddata/nddata_withmixins.py\n-    pass\n+    def _arithmetic_mask(self, operation, operand, handle_mask):\n+        if self.mask is None and getattr(operand, 'mask', None) is None:\n+            return None\n+        elif self.mask is not None and getattr(operand, 'mask', None) is None:\n+            return self.mask\n+        elif self.mask is None and getattr(operand, 'mask', None) is not None:\n+            return operand.mask\n+        return handle_mask(self.mask, operand.mask)\n+    def multiply(self, operand, handle_mask=np.bitwise_or):\n+        if isinstance(operand, NDDataRef):\n+            result_data = self.data * operand.data\n+        else:\n+            result_data = self.data * operand\n+        result_mask = self._arithmetic_mask(np.multiply, operand, handle_mask)\n+        return NDDataRef(result_data, mask=result_mask, uncertainty=None, wcs=None, unit=None)"}
