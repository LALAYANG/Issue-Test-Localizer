{"model_name_or_path": "agentless", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..4dfbd51 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -153,11 +153,12 @@ class HTTPAdapter(BaseAdapter):\n         return url\n     def add_headers(self, request, **kwargs):\n         pass\n-    def proxy_headers(self, proxy):\n+    def proxy_headers(self, proxy, request):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n         if username:\n             headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n+        headers.update(request.headers.get('Proxy-Authorization', {}))\n         return headers\n     def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):\n         try:\n@@ -167,6 +168,10 @@ class HTTPAdapter(BaseAdapter):\n         self.cert_verify(conn, request.url, verify, cert)\n         url = self.request_url(request, proxies)\n         self.add_headers(request, stream=stream, timeout=timeout, verify=verify, cert=cert, proxies=proxies)\n+        if proxies and 'https' in proxies:\n+            request.headers.update(self.proxy_headers(proxies['https'], request))\n+        elif proxies and 'http' in proxies:\n+            request.headers.update(self.proxy_headers(proxies['http'], request))\n         chunked = not (request.body is None or 'Content-Length' in request.headers)\n         if isinstance(timeout, tuple):\n             try:"}
