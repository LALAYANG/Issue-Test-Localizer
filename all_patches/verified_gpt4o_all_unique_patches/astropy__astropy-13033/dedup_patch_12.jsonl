{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13033", "model_patch": "diff --git a/astropy/timeseries/core.py b/astropy/timeseries/core.py\nindex 99658fd..5955a1e 100644\n--- a/astropy/timeseries/core.py\n+++ b/astropy/timeseries/core.py\n@@ -33,7 +33,13 @@ class BaseTimeSeries(QTable):\n             if not self._required_columns_relax and len(self.colnames) == 0:\n                 raise ValueError(\"{} object is invalid - expected '{}' as the first column{} but time series has no columns\".format(self.__class__.__name__, required_columns[0], plural))\n             elif self.colnames[:len(required_columns)] != required_columns:\n-                raise ValueError(\"{} object is invalid - expected '{}' as the first column{} but found '{}'\".format(self.__class__.__name__, required_columns[0], plural, self.colnames[0]))\n+                for required, actual in zip(required_columns, self.colnames):\n+                    if required != actual:\n+                        missing_column = required\n+                        break\n+                else:\n+                    missing_column = required_columns[len(self.colnames)]\n+                raise ValueError(\"{} object is invalid - missing required column '{}'.\".format(self.__class__.__name__, missing_column))\n             if self._required_columns_relax and self._required_columns == self.colnames[:len(self._required_columns)]:\n                 self._required_columns_relax = False\n     @contextmanager"}
