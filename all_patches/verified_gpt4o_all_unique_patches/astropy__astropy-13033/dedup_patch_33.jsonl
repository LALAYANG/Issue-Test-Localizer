{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13033", "model_patch": "diff --git a/astropy/timeseries/core.py b/astropy/timeseries/core.py\nindex 99658fd..d3b2943 100644\n--- a/astropy/timeseries/core.py\n+++ b/astropy/timeseries/core.py\n@@ -31,9 +31,9 @@ class BaseTimeSeries(QTable):\n                 required_columns = self._required_columns\n             plural = 's' if len(required_columns) > 1 else ''\n             if not self._required_columns_relax and len(self.colnames) == 0:\n-                raise ValueError(\"{} object is invalid - expected '{}' as the first column{} but time series has no columns\".format(self.__class__.__name__, required_columns[0], plural))\n+                raise ValueError(\"{} object is invalid - required column(s) '{}' missing but time series has no columns\".format(self.__class__.__name__, \"', '\".join(required_columns)))\n             elif self.colnames[:len(required_columns)] != required_columns:\n-                raise ValueError(\"{} object is invalid - expected '{}' as the first column{} but found '{}'\".format(self.__class__.__name__, required_columns[0], plural, self.colnames[0]))\n+                raise ValueError(\"{} object is invalid - required column(s) '{}' missing, but found '{}'\".format(self.__class__.__name__, \"', '\".join(required_columns), \"', '\".join(self.colnames)))\n             if self._required_columns_relax and self._required_columns == self.colnames[:len(self._required_columns)]:\n                 self._required_columns_relax = False\n     @contextmanager"}
