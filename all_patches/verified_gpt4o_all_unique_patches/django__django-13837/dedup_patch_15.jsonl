{"model_name_or_path": "agentless", "instance_id": "django__django-13837", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 9acf8d8..825ad31 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -131,21 +131,20 @@ def sys_path_directories():\n         else:\n             yield resolved_path\n def get_child_arguments():\n-    import django.__main__\n-    django_main_path = Path(django.__main__.__file__)\n-    py_script = Path(sys.argv[0])\n+    import __main__\n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n-    if py_script == django_main_path:\n-        args += ['-m', 'django']\n+    main_module_spec = getattr(__main__.__spec__, 'parent', None)\n+    if main_module_spec:\n+        args += ['-m', main_module_spec]\n         args += sys.argv[1:]\n-    elif not py_script.exists():\n-        exe_entrypoint = py_script.with_suffix('.exe')\n+    elif not Path(sys.argv[0]).exists():\n+        exe_entrypoint = Path(sys.argv[0]).with_suffix('.exe')\n         if exe_entrypoint.exists():\n             return [str(exe_entrypoint), *sys.argv[1:]]\n-        script_entrypoint = py_script.with_name('%s-script.py' % py_script.name)\n+        script_entrypoint = Path(sys.argv[0]).with_name('%s-script.py' % Path(sys.argv[0]).name)\n         if script_entrypoint.exists():\n             return [*args, str(script_entrypoint), *sys.argv[1:]]\n-        raise RuntimeError('Script %s does not exist.' % py_script)\n+        raise RuntimeError('Script %s does not exist.' % sys.argv[0])\n     else:\n         args += sys.argv\n     return args"}
