{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9229", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..d5632e9 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -38,7 +38,7 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n \n \n def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n-    if domain != 'py':\n+    if domain != 'py' or objtype != 'module':\n         return\n     if app.config.autodoc_typehints not in ('both', 'description'):\n         return\n@@ -66,6 +66,17 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             else:\n                 augment_descriptions_with_types(field_list, annotations[fullname])\n \n+    # Ensure type aliases have their docstrings included in the documentation\n+    for name, obj in annotations.get(fullname, {}).items():\n+        if isinstance(obj, type) and hasattr(obj, '__doc__'):\n+            type_alias_doc = obj.__doc__\n+            if type_alias_doc:\n+                type_alias_field = nodes.field()\n+                type_alias_field += nodes.field_name(text=name)\n+                type_alias_field += nodes.field_body()\n+                type_alias_field[1] += nodes.paragraph(text=type_alias_doc)\n+                field_list.append(type_alias_field)\n+\n \n def insert_field_list(node: Element) -> nodes.field_list:\n     field_list = nodes.field_list()\n", "occurrence": 1}
