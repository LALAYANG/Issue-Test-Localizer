{"model_name_or_path": "agentless", "instance_id": "django__django-13406", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 3533127..804ca0b 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -195,7 +195,7 @@ class QuerySet:\n         self._prefetch_related_lookups = ()\n         self._prefetch_done = False\n         self._known_related_objects = {}  # {rel_field: {pk: rel_obj}}\n-        self._iterable_class = ModelIterable\n+        self._iterable_class = kwargs.get('_iterable_class', ModelIterable)\n         self._fields = None\n         self._defer_next_filter = False\n         self._deferred_filter = None\n@@ -823,12 +823,14 @@ class QuerySet:\n             clone = clone.annotate(**expressions)\n         clone._fields = fields\n         clone.query.set_values(fields)\n+        clone._iterable_class = self._iterable_class\n         return clone\n \n     def values(self, *fields, **expressions):\n         fields += tuple(expressions)\n         clone = self._values(*fields, **expressions)\n         clone._iterable_class = ValuesIterable\n+        clone._iterable_class = self._iterable_class\n         return clone\n \n     def values_list(self, *fields, flat=False, named=False):\n@@ -860,6 +862,7 @@ class QuerySet:\n             else FlatValuesListIterable if flat\n             else ValuesListIterable\n         )\n+        clone._iterable_class = self._iterable_class\n         return clone\n \n     def dates(self, field_name, kind, order='ASC'):\n"}
