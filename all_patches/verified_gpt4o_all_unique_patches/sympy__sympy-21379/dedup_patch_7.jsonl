{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..1c1b9d5 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -165,6 +165,15 @@ class Piecewise(Function):\n         if len(_args) == 1 and _args[0][-1] == True:\n             return _args[0][0]\n \n+        # Ensure all symbols have their assumptions properly propagated\n+        from sympy.assumptions import Q\n+        assumptions = {}\n+        for arg in _args:\n+            e, c = arg\n+            for symbol in e.free_symbols.union(c.free_symbols):\n+                assumptions[symbol] = symbol.assumptions0\n+        _args = [(e.xreplace(assumptions), c.xreplace(assumptions)) for e, c in _args]\n+\n         newargs = []  # the unevaluated conditions\n         current_cond = set()  # the conditions up to a given e, c pair\n         # make conditions canonical\n", "occurrence": 1}
