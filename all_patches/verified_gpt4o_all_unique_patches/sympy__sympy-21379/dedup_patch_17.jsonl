{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..7977e52 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -441,19 +441,10 @@ class Piecewise(Function):\n     def _eval_power(self, s):\n         return self.func(*[(e ** s, c) for e, c in self.args])\n     def _eval_subs(self, old, new):\n-        args = list(self.args)\n-        args_exist = False\n-        for i, (e, c) in enumerate(args):\n-            c = c._subs(old, new)\n-            if c != False:\n-                args_exist = True\n-                e = e._subs(old, new)\n-            args[i] = (e, c)\n-            if c == True:\n-                break\n-        if not args_exist:\n-            args = ((Undefined, True),)\n-        return self.func(*args)\n+        args = [(e._subs(old, new), c._subs(old, new)) for e, c in self.args if c._subs(old, new) != False]\n+        if not args:\n+            args = [(Undefined, True)]\n+        return self.func(*args, evaluate=False)\n     def _eval_transpose(self):\n         return self.func(*[(e.transpose(), c) for e, c in self.args])\n     def _eval_template_is_attr(self, is_attr):"}
