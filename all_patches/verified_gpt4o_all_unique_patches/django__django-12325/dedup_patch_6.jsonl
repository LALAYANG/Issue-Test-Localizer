{"model_name_or_path": "agentless", "instance_id": "django__django-12325", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 77c04dd..400b883 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -200,11 +200,18 @@ class ModelBase(type):\n             # Skip concrete parent classes.\n             if base != new_class and not base._meta.abstract:\n                 continue\n-            # Locate OneToOneField instances.\n+            # Locate OneToOneField instances and prioritize those with parent_link=True.\n+            parent_link_fields = []\n+            other_one_to_one_fields = []\n             for field in base._meta.local_fields:\n                 if isinstance(field, OneToOneField):\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+                    if field.parent_link:\n+                        parent_link_fields.append(field)\n+                    else:\n+                        other_one_to_one_fields.append(field)\n+            for field in parent_link_fields + other_one_to_one_fields:\n+                related = resolve_relation(new_class, field.remote_field.model)\n+                parent_links[make_model_tuple(related)] = field\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n"}
