{"model_name_or_path": "agentless", "instance_id": "django__django-12325", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 77c04dd..a772228 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -193,7 +193,7 @@ class ModelBase(type):\n \n         # Collect the parent links for multi-table inheritance.\n         parent_links = {}\n-        for base in reversed([new_class] + parents):\n+        for base in reversed(new_class.mro()):\n             # Conceptually equivalent to `if base is Model`.\n             if not hasattr(base, '_meta'):\n                 continue\n@@ -209,7 +209,7 @@ class ModelBase(type):\n         # Track fields inherited from base models.\n         inherited_attributes = set()\n         # Do the appropriate setup for any model parents.\n-        for base in new_class.mro():\n+        for base in reversed(new_class.mro()):\n             if base not in parents or not hasattr(base, '_meta'):\n                 # Things without _meta aren't functional models, so they're\n                 # uninteresting parents.\n", "occurrence": 1}
