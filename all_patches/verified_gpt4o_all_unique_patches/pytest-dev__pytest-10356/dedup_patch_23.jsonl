{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10356", "model_patch": "diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py\nindex d345d83..8386f7a 100644\n--- a/src/_pytest/mark/structures.py\n+++ b/src/_pytest/mark/structures.py\n@@ -388,7 +388,15 @@ def store_mark(obj, mark: Mark) -> None:\n     assert isinstance(mark, Mark), mark\n     # Always reassign name to avoid updating pytestmark in a reference that\n     # was only borrowed.\n-    obj.pytestmark = [*get_unpacked_marks(obj), mark]\n+    if not hasattr(obj, '_pytestmark'):\n+        obj._pytestmark = []\n+    obj._pytestmark.append(mark)\n+    \n+    # Merge markers from the MRO\n+    all_marks = set(obj._pytestmark)\n+    for cls in obj.__class__.__mro__:\n+        all_marks.update(getattr(cls, '_pytestmark', []))\n+    obj.pytestmark = list(all_marks)\n \n \n # Typing for builtin pytest marks. This is cheating; it gives builtin marks\n", "occurrence": 1}
