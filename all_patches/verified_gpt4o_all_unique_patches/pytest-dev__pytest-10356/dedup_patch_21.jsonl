{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10356", "model_patch": "diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py\nindex d345d83..7feeb6d 100644\n--- a/src/_pytest/mark/structures.py\n+++ b/src/_pytest/mark/structures.py\n@@ -388,7 +388,11 @@ def store_mark(obj, mark: Mark) -> None:\n     assert isinstance(mark, Mark), mark\n     # Always reassign name to avoid updating pytestmark in a reference that\n     # was only borrowed.\n-    obj.pytestmark = [*get_unpacked_marks(obj), mark]\n+    # Retrieve marks from the MRO and merge them with the new mark\n+    all_marks = []\n+    for cls in obj.__class__.__mro__:\n+        all_marks.extend(getattr(cls, \"pytestmark\", []))\n+    obj.pytestmark = list({m.name: m for m in all_marks + [mark]}.values())\n \n \n # Typing for builtin pytest marks. This is cheating; it gives builtin marks\n"}
