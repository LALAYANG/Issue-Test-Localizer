{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10356", "model_patch": "diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py\nindex c22bcf5..ba5cd97 100644\n--- a/src/_pytest/mark/structures.py\n+++ b/src/_pytest/mark/structures.py\n@@ -173,7 +173,10 @@ def normalize_mark_list(mark_list: Iterable[Union[Mark, MarkDecorator]]) -> Iter\n         yield mark_obj\n def store_mark(obj, mark: Mark) -> None:\n     assert isinstance(mark, Mark), mark\n-    obj.pytestmark = [*get_unpacked_marks(obj), mark]\n+    if not hasattr(obj, 'pytestmark'):\n+        obj.pytestmark = []\n+    obj.pytestmark.extend(get_unpacked_marks(obj))\n+    obj.pytestmark.append(mark)\n if TYPE_CHECKING:\n     from _pytest.scope import _ScopeName\n     class _SkipMarkDecorator(MarkDecorator):"}
