{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10356", "model_patch": "diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py\nindex d345d83..3eb658b 100644\n--- a/src/_pytest/mark/structures.py\n+++ b/src/_pytest/mark/structures.py\n@@ -388,7 +388,12 @@ def store_mark(obj, mark: Mark) -> None:\n     assert isinstance(mark, Mark), mark\n     # Always reassign name to avoid updating pytestmark in a reference that\n     # was only borrowed.\n-    obj.pytestmark = [*get_unpacked_marks(obj), mark]\n+    existing_marks = getattr(obj, \"pytestmark\", [])\n+    all_base_marks = []\n+    for base in getattr(obj, '__mro__', []):\n+        base_marks = getattr(base, 'pytestmark', [])\n+        all_base_marks.extend(base_marks)\n+    obj.pytestmark = [*existing_marks, *all_base_marks, mark]\n \n \n # Typing for builtin pytest marks. This is cheating; it gives builtin marks\n", "occurrence": 1}
