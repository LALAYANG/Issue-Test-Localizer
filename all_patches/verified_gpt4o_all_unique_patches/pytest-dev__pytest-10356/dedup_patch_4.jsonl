{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10356", "model_patch": "diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py\nindex c22bcf5..102de58 100644\n--- a/src/_pytest/mark/structures.py\n+++ b/src/_pytest/mark/structures.py\n@@ -162,6 +162,9 @@ class MarkDecorator:\n         return self.with_args(*args, **kwargs)\n def get_unpacked_marks(obj: object) -> Iterable[Mark]:\n     mark_list = getattr(obj, 'pytestmark', [])\n+    if inspect.isclass(obj):\n+        for base in inspect.getmro(obj)[1:]:\n+            mark_list.extend(getattr(base, 'pytestmark', []))\n     if not isinstance(mark_list, list):\n         mark_list = [mark_list]\n     return normalize_mark_list(mark_list)"}
