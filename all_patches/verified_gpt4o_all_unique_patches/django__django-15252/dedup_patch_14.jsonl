{"model_name_or_path": "agentless", "instance_id": "django__django-15252", "model_patch": "diff --git a/django/db/migrations/recorder.py b/django/db/migrations/recorder.py\nindex cf1aec2..7f382a5 100644\n--- a/django/db/migrations/recorder.py\n+++ b/django/db/migrations/recorder.py\n@@ -58,7 +58,11 @@ class MigrationRecorder:\n \n     def ensure_schema(self):\n         \"\"\"Ensure the table exists and has the correct schema.\"\"\"\n+        from django.apps import apps\n         # If the table's there, that's fine - we've never changed its schema\n+        # Check router to see if migrations are allowed on this database\n+        if not router.allow_migrate(self.connection.alias, apps.get_model('migrations', 'Migration')):\n+            return\n         # in the codebase.\n         if self.has_table():\n             return\n@@ -83,14 +87,18 @@ class MigrationRecorder:\n \n     def record_applied(self, app, name):\n         \"\"\"Record that a migration was applied.\"\"\"\n-        self.ensure_schema()\n+        from django.apps import apps\n+        if router.allow_migrate(self.connection.alias, apps.get_model('migrations', 'Migration')):\n+            self.ensure_schema()\n         self.migration_qs.create(app=app, name=name)\n \n     def record_unapplied(self, app, name):\n         \"\"\"Record that a migration was unapplied.\"\"\"\n-        self.ensure_schema()\n+        from django.apps import apps\n+        if router.allow_migrate(self.connection.alias, apps.get_model('migrations', 'Migration')):\n+            self.ensure_schema()\n         self.migration_qs.filter(app=app, name=name).delete()\n \n     def flush(self):\n         \"\"\"Delete all migration records. Useful for testing migrations.\"\"\"\n-        self.migration_qs.all().delete()\n+        self.migration_qs.all().delete()\n"}
