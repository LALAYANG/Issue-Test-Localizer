{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22865", "model_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex eb4d80e..6e1e993 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -302,7 +302,7 @@ class Colorbar:\n                 xy = xy[:, ::-1]\n             val = -1 if self._long_axis().get_inverted() else 0\n             color = self.cmap(self.norm(self._values[val]))\n-            patch = mpatches.PathPatch(mpath.Path(xy), facecolor=color, linewidth=0, antialiased=False, transform=self.ax.transAxes, hatch=hatches[0], clip_on=False, zorder=np.nextafter(self.ax.patch.zorder, -np.inf))\n+            patch = mpatches.PathPatch(mpath.Path(xy), facecolor=color, edgecolor='black', linewidth=1, antialiased=False, transform=self.ax.transAxes, hatch=hatches[0], clip_on=False, zorder=np.nextafter(self.ax.patch.zorder, -np.inf))\n             self.ax.add_patch(patch)\n             self._extend_patches.append(patch)\n         if self._extend_upper():\n@@ -314,7 +314,7 @@ class Colorbar:\n                 xy = xy[:, ::-1]\n             val = 0 if self._long_axis().get_inverted() else -1\n             color = self.cmap(self.norm(self._values[val]))\n-            patch = mpatches.PathPatch(mpath.Path(xy), facecolor=color, linewidth=0, antialiased=False, transform=self.ax.transAxes, hatch=hatches[-1], clip_on=False, zorder=np.nextafter(self.ax.patch.zorder, -np.inf))\n+            patch = mpatches.PathPatch(mpath.Path(xy), facecolor=color, edgecolor='black', linewidth=1, antialiased=False, transform=self.ax.transAxes, hatch=hatches[-1], clip_on=False, zorder=np.nextafter(self.ax.patch.zorder, -np.inf))\n             self.ax.add_patch(patch)\n             self._extend_patches.append(patch)\n         return"}
