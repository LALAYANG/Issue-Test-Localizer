{"model_name_or_path": "agentless", "instance_id": "django__django-14007", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex efe8580..4e0d544 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -907,10 +907,18 @@ class Model(metaclass=ModelBase):\n         Do an INSERT. If returning_fields is defined then this method should\n         return the newly created data for the model.\n         \"\"\"\n-        return manager._insert(\n+        objs = manager._insert(\n             [self], fields=fields, returning_fields=returning_fields,\n-            using=using, raw=raw,\n+            using=using, raw=raw\n         )\n+        for obj in objs:\n+            for field in returning_fields:\n+                setattr(obj, field.attname, field.from_db_value(\n+                    getattr(obj, field.attname),\n+                    expression=None,\n+                    connection=connections[using]\n+                ))\n+        return objs\n \n     def _prepare_related_fields_for_save(self, operation_name):\n         # Ensure that a model instance without a PK hasn't been assigned to\n"}
