{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10051", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex d320659..70a0331 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -183,6 +183,8 @@ class LogCaptureFixture:\n     def handler(self) -> LogCaptureHandler:\n         return self._item.stash[caplog_handler_key]\n     def get_records(self, when: str) -> List[logging.LogRecord]:\n+        if when == 'call':\n+            return self.handler.records\n         return self._item.stash[caplog_records_key].get(when, [])\n     @property\n     def text(self) -> str:\n@@ -197,6 +199,7 @@ class LogCaptureFixture:\n     def messages(self) -> List[str]:\n         return [r.getMessage() for r in self.records]\n     def clear(self) -> None:\n+        self._item.stash[caplog_records_key].clear()\n         self.handler.reset()\n     def set_level(self, level: Union[int, str], logger: Optional[str]=None) -> None:\n         logger_obj = logging.getLogger(logger)"}
