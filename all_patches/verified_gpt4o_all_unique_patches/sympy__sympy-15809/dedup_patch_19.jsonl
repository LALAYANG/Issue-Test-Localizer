{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15809", "model_patch": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 653d499..be5b3b0 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -138,7 +138,14 @@ class Function(Application, Expr):\n         if cls is Function:\n             return UndefinedFunction(*args, **options)\n         n = len(args)\n-        if n not in cls.nargs:\n+        if n == 0:\n+            if cls.__name__.lower() == 'min':\n+                from sympy import oo\n+                return -oo\n+            elif cls.__name__.lower() == 'max':\n+                from sympy import oo\n+                return oo\n+        elif n not in cls.nargs:\n             temp = '%(name)s takes %(qual)s %(args)s argument%(plural)s (%(given)s given)'\n             raise TypeError(temp % {'name': cls, 'qual': 'exactly' if len(cls.nargs) == 1 else 'at least', 'args': min(cls.nargs), 'plural': 's' * (min(cls.nargs) != 1), 'given': n})\n         evaluate = options.get('evaluate', global_evaluate[0])"}
