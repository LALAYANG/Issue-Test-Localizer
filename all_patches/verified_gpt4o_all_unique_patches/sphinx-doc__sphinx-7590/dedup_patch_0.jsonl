{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7590", "model_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 71a23bd..022518f 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -785,6 +785,10 @@ class ASTExpression(ASTBase):\n # Primary expressions\n ################################################################################\n \n+import re\n+\n+user_defined_literal_re = re.compile(r'(\"[^\"]*\"_\\w+|\\'[^\"]\\'_\\w+|\\d+_\\w+|\\d+\\.\\d+_\\w+|\\d+\\.\\d+[eE][+-]?\\d+_\\w+|\\d+[eE][+-]?\\d+_\\w+)')\n+\n class ASTLiteral(ASTExpression):\n     pass\n \n@@ -4682,7 +4686,10 @@ class DefinitionParser(BaseParser):\n                 self.fail(\"Can not handle character literal\"\n                           \" resulting in multiple decoded characters.\")\n \n-        # TODO: user-defined lit\n+        if self.match(user_defined_literal_re):\n+            suffix = self.last_match.group(1)\n+            literal = self.last_match.group(2)\n+            return ASTUserDefinedLiteral(suffix, literal)\n         return None\n \n     def _parse_fold_or_paren_expression(self) -> ASTExpression:\n"}
