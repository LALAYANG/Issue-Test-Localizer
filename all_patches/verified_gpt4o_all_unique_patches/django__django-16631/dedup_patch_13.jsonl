{"model_name_or_path": "agentless", "instance_id": "django__django-16631", "model_patch": "diff --git a/django/contrib/auth/base_user.py b/django/contrib/auth/base_user.py\nindex 04240b6..8812ae9 100644\n--- a/django/contrib/auth/base_user.py\n+++ b/django/contrib/auth/base_user.py\n@@ -64,7 +64,20 @@ class AbstractBaseUser(models.Model):\n         return is_password_usable(self.password)\n     def get_session_auth_hash(self):\n         key_salt = 'django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash'\n-        return salted_hmac(key_salt, self.password, algorithm='sha256').hexdigest()\n+        from django.conf import settings\n+        from django.core.signing import BadSignature\n+        def get_hmac(key):\n+            return salted_hmac(key_salt, self.password, secret=key, algorithm='sha256').hexdigest()\n+        try:\n+            return get_hmac(settings.SECRET_KEY)\n+        except BadSignature:\n+            pass\n+        for key in getattr(settings, 'SECRET_KEY_FALLBACKS', []):\n+            try:\n+                return get_hmac(key)\n+            except BadSignature:\n+                continue\n+        raise BadSignature('All secret keys failed to validate the session auth hash.')\n     @classmethod\n     def get_email_field_name(cls):\n         try:"}
