{"model_name_or_path": "agentless", "instance_id": "django__django-16631", "model_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex a2da098..bdb35dd 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -53,10 +53,21 @@ class SessionBase:\n     def delete_test_cookie(self):\n         del self[self.TEST_COOKIE_NAME]\n     def encode(self, session_dict):\n-        return signing.dumps(session_dict, salt=self.key_salt, serializer=self.serializer, compress=True)\n+        from django.conf import settings\n+        for secret_key in [settings.SECRET_KEY] + getattr(settings, 'SECRET_KEY_FALLBACKS', []):\n+            try:\n+                return signing.dumps(session_dict, salt=self.key_salt, serializer=self.serializer, compress=True, key=secret_key)\n+            except signing.BadSignature:\n+                continue\n+        raise signing.BadSignature('Could not sign the session data with any key.')\n     def decode(self, session_data):\n         try:\n-            return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            from django.conf import settings\n+            for secret_key in [settings.SECRET_KEY] + getattr(settings, 'SECRET_KEY_FALLBACKS', []):\n+                try:\n+                    return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer, key=secret_key)\n+                except signing.BadSignature:\n+                    continue\n         except signing.BadSignature:\n             logger = logging.getLogger('django.security.SuspiciousSession')\n             logger.warning('Session data corrupted')"}
