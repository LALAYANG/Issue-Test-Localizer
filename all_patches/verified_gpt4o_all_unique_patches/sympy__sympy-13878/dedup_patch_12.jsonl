{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13878", "model_patch": "--- a/sympy/stats/crv_types.py\n+++ b/sympy/stats/crv_types.py\n+    def _cdf(self, x):\n+        a, b = (self.a, self.b)\n+        return 2 / pi * asin(sqrt((x - a) / (b - a)))\n+    def _cdf(self, x):\n+        p, a, b = (self.p, self.a, self.b)\n+        return 1 - (1 + (x / b) ** (-a)) ** (-p)\n+class ErlangDistribution(SingleContinuousDistribution):\n+    _argnames = ('k', 'l')\n+    set = Interval(0, oo)\n+    def pdf(self, x):\n+        k, l = (self.k, self.l)\n+        return l ** k * x ** (k - 1) * exp(-l * x) / factorial(k - 1)\n+    def _cdf(self, x):\n+        k, l = (self.k, self.l)\n+        return lowergamma(k, l * x) / gamma(k)\n+    def _cdf(self, x):\n+        a, s, m = (self.a, self.s, self.m)\n+        return exp(-((x - m) / s) ** (-a))\n+    def _cdf(self, x):\n+        k, theta = (self.k, self.theta)\n+        return lowergamma(k, x / theta) / gamma(k)\n+    def _cdf(self, x):\n+        a, b = (self.a, self.b)\n+        return uppergamma(a, b / x) / gamma(a)\n+    def _cdf(self, x):\n+        a, b = (self.a, self.b)\n+        return 1 - (1 - x ** a) ** b"}
