{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24149", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 5336f05..6499640 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -454,24 +454,19 @@ class Axes(_AxesBase):\n         assert type(xconv) is np.ndarray\n         if xconv.size == 0:\n             return convert(dx)\n-        try:\n-            try:\n-                x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n-                pass\n-            try:\n-                x = cbook._safe_first_finite(xconv)\n-            except (TypeError, IndexError, KeyError):\n-                x = xconv\n-            delist = False\n-            if not np.iterable(dx):\n-                dx = [dx]\n-                delist = True\n-            dx = [convert(x0 + ddx) - x for ddx in dx]\n-            if delist:\n-                dx = dx[0]\n-        except (ValueError, TypeError, AttributeError):\n-            dx = convert(dx)\n+        finite_x0 = cbook._safe_first_finite(x0, skip_nonfinite=True)\n+        finite_xconv = cbook._safe_first_finite(xconv, skip_nonfinite=True)\n+        if np.isnan(finite_x0) or np.isnan(finite_xconv):\n+            return np.full_like(dx, np.nan, dtype=np.float64)\n+        x0 = finite_x0\n+        x = finite_xconv\n+        delist = False\n+        if not np.iterable(dx):\n+            dx = [dx]\n+            delist = True\n+        dx = [convert(x0 + ddx) - x for ddx in dx]\n+        if delist:\n+            dx = dx[0]\n         return dx\n     @_preprocess_data()\n     @_docstring.dedent_interpd"}
