{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..5c8144a 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -970,20 +970,37 @@ class RenameIndex(IndexOperation):\n             # Backward operation with unnamed index is a no-op.\n             return\n \n+        if self.old_fields:\n+            # Backward operation with unnamed index is a no-op.\n+            return\n+\n+        # Swap the names for the backward operation\n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n             self.new_name_lower,\n         )\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n+        # Perform the forward operation with swapped names\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n+        # Restore the original names\n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n             self.new_name_lower,\n         )\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n+        # Restore the old auto-generated name if the index was unnamed\n+        if not self.old_name:\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_name(self.new_name)\n+            schema_editor.rename_index(\n+                from_model_state,\n+                old_index,\n+                self.new_name,\n+            )\n+\n     def describe(self):\n         if self.old_name:\n             return (\n"}
