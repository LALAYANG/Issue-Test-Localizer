{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5631", "model_patch": "diff --git a/src/_pytest/compat.py b/src/_pytest/compat.py\nindex c84507d..af5b319 100644\n--- a/src/_pytest/compat.py\n+++ b/src/_pytest/compat.py\n@@ -67,8 +67,17 @@ def num_mock_patch_args(function):\n     mock_modules = [sys.modules.get(\"mock\"), sys.modules.get(\"unittest.mock\")]\n     if any(mock_modules):\n         sentinels = [m.DEFAULT for m in mock_modules if m is not None]\n+        def is_in_sentinels(p_new):\n+            for sentinel in sentinels:\n+                if isinstance(p_new, np.ndarray) and isinstance(sentinel, np.ndarray):\n+                    if np.array_equal(p_new, sentinel):\n+                        return True\n+                elif p_new == sentinel:\n+                    return True\n+            return False\n+\n         return len(\n-            [p for p in patchings if not p.attribute_name and p.new in sentinels]\n+            [p for p in patchings if not p.attribute_name and is_in_sentinels(p.new)]\n         )\n     return len(patchings)\n \n"}
