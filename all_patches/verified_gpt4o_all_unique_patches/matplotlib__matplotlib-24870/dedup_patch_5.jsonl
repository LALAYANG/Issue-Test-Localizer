{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..1f0405e 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -767,7 +767,10 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n                 mpl.rcParams['contour.negative_linestyle']\n \n         kwargs = self._process_args(*args, **kwargs)\n-        self._process_levels()\n+        if isinstance(args[0], np.ndarray) and args[0].dtype == bool:\n+            if levels is None:\n+                levels = [0.5]\n+        self._process_levels(levels)\n \n         self._extend_min = self.extend in ['min', 'both']\n         self._extend_max = self.extend in ['max', 'both']\n@@ -1117,11 +1120,12 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n \n         return lev[i0:i1]\n \n-    def _process_contour_level_args(self, args):\n+    def _process_contour_level_args(self, args, levels=None):\n         \"\"\"\n         Determine the contour levels and store in self.levels.\n         \"\"\"\n-        if self.levels is None:\n+        if levels is not None:\n+            levels_arg = levels\n             if len(args) == 0:\n                 levels_arg = 7  # Default, hard-wired.\n             else:\n"}
