{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12481", "model_patch": "diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\nindex 4042fdb..23874db 100644\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -897,10 +897,17 @@ class Permutation(Basic):\n         temp = flatten(args)\n         if has_dups(temp):\n             if is_cycle:\n-                raise ValueError('there were repeated elements; to resolve '\n-                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))\n-            else:\n-                raise ValueError('there were repeated elements.')\n+                # Apply non-disjoint cycles in left-to-right order\n+                c = Cycle()\n+                for ci in args:\n+                    c = c(*ci)\n+                aform = c.list()\n+                size = len(aform)\n+                obj = Basic.__new__(cls, aform)\n+                obj._array_form = aform\n+                obj._size = size\n+                return obj\n+            raise ValueError('there were repeated elements.')\n         temp = set(temp)\n \n         if not is_cycle and \\\n", "occurrence": 1}
