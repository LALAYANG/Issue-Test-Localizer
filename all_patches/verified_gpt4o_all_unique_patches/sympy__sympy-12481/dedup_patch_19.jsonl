{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12481", "model_patch": "diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\nindex 4042fdb..f427c07 100644\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -897,11 +897,11 @@ class Permutation(Basic):\n         temp = flatten(args)\n         if has_dups(temp):\n             if is_cycle:\n-                raise ValueError('there were repeated elements; to resolve '\n-                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))\n+                # Process non-disjoint cycles in left-to-right order\n+                pass\n             else:\n                 raise ValueError('there were repeated elements.')\n-        temp = set(temp)\n+        temp = list(dict.fromkeys(temp))  # Preserve order and remove duplicates\n \n         if not is_cycle and \\\n                 any(i not in temp for i in range(len(temp))):\n"}
