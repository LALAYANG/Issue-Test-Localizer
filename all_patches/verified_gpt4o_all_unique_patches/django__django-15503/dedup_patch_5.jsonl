{"model_name_or_path": "agentless", "instance_id": "django__django-15503", "model_patch": "diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\nindex 042ffd6..23244c3 100644\n--- a/django/db/backends/sqlite3/operations.py\n+++ b/django/db/backends/sqlite3/operations.py\n@@ -135,6 +135,13 @@ class DatabaseOperations(BaseDatabaseOperations):\n         if timezone.is_aware(value):\n             raise ValueError('SQLite backend does not support timezone-aware times.')\n         return str(value)\n+    def convert_jsonfield_value(self, value, expression, connection):\n+        if isinstance(value, str):\n+            try:\n+                value = json.loads(value)\n+            except json.JSONDecodeError:\n+                pass\n+        return value\n     def get_db_converters(self, expression):\n         converters = super().get_db_converters(expression)\n         internal_type = expression.output_field.get_internal_type()\n@@ -144,6 +151,9 @@ class DatabaseOperations(BaseDatabaseOperations):\n             converters.append(self.convert_datefield_value)\n         elif internal_type == 'TimeField':\n             converters.append(self.convert_timefield_value)\n+        elif internal_type == 'JSONField':\n+            converters.append(self.convert_jsonfield_value)\n+            converters.append(self.convert_timefield_value)\n         elif internal_type == 'DecimalField':\n             converters.append(self.get_decimalfield_converter(expression))\n         elif internal_type == 'UUIDField':"}
