{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex bb07c3d..e9e1a46 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -61,6 +61,10 @@ class ForwardManyToOneDescriptor:\n                 if not remote_field.multiple:\n                     remote_field.set_cached_value(rel_obj, instance)\n             self.field.set_cached_value(instance, rel_obj)\n+            if rel_obj is not None:\n+                rel_obj._state.adding = instance._state.adding\n+                rel_obj._state.db = instance._state.db\n+                rel_obj._deferred = instance._deferred\n         if rel_obj is None and (not self.field.null):\n             raise self.RelatedObjectDoesNotExist('%s has no %s.' % (self.field.model.__name__, self.field.name))\n         else:\n@@ -153,6 +157,10 @@ class ReverseOneToOneDescriptor:\n                 else:\n                     self.related.field.set_cached_value(rel_obj, instance)\n             self.related.set_cached_value(instance, rel_obj)\n+            if rel_obj is not None:\n+                rel_obj._state.adding = instance._state.adding\n+                rel_obj._state.db = instance._state.db\n+                rel_obj._deferred = instance._deferred\n         if rel_obj is None:\n             raise self.RelatedObjectDoesNotExist('%s has no %s.' % (instance.__class__.__name__, self.related.get_accessor_name()))\n         else:"}
