{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 2a14012..40dd3dc 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -190,6 +190,11 @@ class ForwardManyToOneDescriptor:\n                 # cache on the related object to the current instance to avoid\n                 # an extra SQL query if it's accessed later on.\n                 if not remote_field.multiple:\n+                    # Merge deferred fields from instance to rel_obj\n+                    rel_obj_deferred_fields = rel_obj.get_deferred_fields()\n+                    instance_deferred_fields = instance.get_deferred_fields()\n+                    rel_obj_deferred_fields.update(instance_deferred_fields)\n+                    rel_obj._deferred_fields = rel_obj_deferred_fields\n                     remote_field.set_cached_value(rel_obj, instance)\n             self.field.set_cached_value(instance, rel_obj)\n \n@@ -415,6 +420,11 @@ class ReverseOneToOneDescriptor:\n                     # the current instance to avoid an extra SQL query if it's\n                     # accessed later on.\n                     self.related.field.set_cached_value(rel_obj, instance)\n+                    # Merge deferred fields from instance to rel_obj\n+                    rel_obj_deferred_fields = rel_obj.get_deferred_fields()\n+                    instance_deferred_fields = instance.get_deferred_fields()\n+                    rel_obj_deferred_fields.update(instance_deferred_fields)\n+                    rel_obj._deferred_fields = rel_obj_deferred_fields\n             self.related.set_cached_value(instance, rel_obj)\n \n         if rel_obj is None:\n", "occurrence": 1}
