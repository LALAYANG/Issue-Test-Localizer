{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 2a14012..d062722 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -192,6 +192,11 @@ class ForwardManyToOneDescriptor:\n                 if not remote_field.multiple:\n                     remote_field.set_cached_value(rel_obj, instance)\n             self.field.set_cached_value(instance, rel_obj)\n+            if rel_obj is not None:\n+                # Ensure deferred fields are correctly set on the related object\n+                rel_obj._state.adding = instance._state.adding\n+                rel_obj._state.db = instance._state.db\n+                rel_obj._deferred = instance._deferred\n \n         if rel_obj is None and not self.field.null:\n             raise self.RelatedObjectDoesNotExist(\n@@ -416,6 +421,11 @@ class ReverseOneToOneDescriptor:\n                     # accessed later on.\n                     self.related.field.set_cached_value(rel_obj, instance)\n             self.related.set_cached_value(instance, rel_obj)\n+            if rel_obj is not None:\n+                # Ensure deferred fields are correctly set on the related object\n+                rel_obj._state.adding = instance._state.adding\n+                rel_obj._state.db = instance._state.db\n+                rel_obj._deferred = instance._deferred\n \n         if rel_obj is None:\n             raise self.RelatedObjectDoesNotExist(\n"}
