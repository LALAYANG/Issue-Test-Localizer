{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex bb07c3d..09ca43c 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -23,7 +23,10 @@ class ForwardManyToOneDescriptor:\n     def get_prefetch_queryset(self, instances, queryset=None):\n         if queryset is None:\n             queryset = self.get_queryset()\n+        queryset = queryset._clone()\n         queryset._add_hints(instance=instances[0])\n+        if instances:\n+            queryset = queryset.only(*{f.attname for f in queryset.model._meta.fields} - instances[0].get_deferred_fields())\n         rel_obj_attr = self.field.get_foreign_related_value\n         instance_attr = self.field.get_local_related_value\n         instances_dict = {instance_attr(inst): inst for inst in instances}\n@@ -125,7 +128,10 @@ class ReverseOneToOneDescriptor:\n     def get_prefetch_queryset(self, instances, queryset=None):\n         if queryset is None:\n             queryset = self.get_queryset()\n+        queryset = queryset._clone()\n         queryset._add_hints(instance=instances[0])\n+        if instances:\n+            queryset = queryset.only(*{f.attname for f in queryset.model._meta.fields} - instances[0].get_deferred_fields())\n         rel_obj_attr = self.related.field.get_local_related_value\n         instance_attr = self.related.field.get_foreign_related_value\n         instances_dict = {instance_attr(inst): inst for inst in instances}"}
