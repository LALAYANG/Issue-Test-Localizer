{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex bb07c3d..784d7b9 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -60,6 +60,12 @@ class ForwardManyToOneDescriptor:\n                 remote_field = self.field.remote_field\n                 if not remote_field.multiple:\n                     remote_field.set_cached_value(rel_obj, instance)\n+            if rel_obj is not None:\n+                deferred_fields = instance.get_deferred_fields()\n+                if deferred_fields:\n+                    for field in deferred_fields:\n+                        if field in rel_obj.get_deferred_fields():\n+                            rel_obj._deferred_fields.add(field)\n             self.field.set_cached_value(instance, rel_obj)\n         if rel_obj is None and (not self.field.null):\n             raise self.RelatedObjectDoesNotExist('%s has no %s.' % (self.field.model.__name__, self.field.name))\n@@ -152,6 +158,12 @@ class ReverseOneToOneDescriptor:\n                     rel_obj = None\n                 else:\n                     self.related.field.set_cached_value(rel_obj, instance)\n+            if rel_obj is not None:\n+                deferred_fields = instance.get_deferred_fields()\n+                if deferred_fields:\n+                    for field in deferred_fields:\n+                        if field in rel_obj.get_deferred_fields():\n+                            rel_obj._deferred_fields.add(field)\n             self.related.set_cached_value(instance, rel_obj)\n         if rel_obj is None:\n             raise self.RelatedObjectDoesNotExist('%s has no %s.' % (instance.__class__.__name__, self.related.get_accessor_name()))"}
