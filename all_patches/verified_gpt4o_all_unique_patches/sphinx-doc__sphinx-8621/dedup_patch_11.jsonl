{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+def split_kbd_keys(text):\n+    separators = ['+', '-', '^']\n+    keys = []\n+    current_key = ''\n+    i = 0\n+    while i < len(text):\n+        if text[i] in separators:\n+            if current_key:\n+                keys.append(current_key)\n+                current_key = ''\n+            keys.append(text[i])\n+        else:\n+            current_key += text[i]\n+        i += 1\n+    if current_key:\n+        keys.append(current_key)\n+    return keys\n+def kbd_role(typ, rawtext, text, lineno, inliner, options={}, content=[]):\n+    nodes_list = []\n+    for key in split_kbd_keys(text):\n+        node = nodes.literal(key, key)\n+        node['classes'].append('kbd')\n+        nodes_list.append(node)\n+    return (nodes_list, [])\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': kbd_role, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}"}
