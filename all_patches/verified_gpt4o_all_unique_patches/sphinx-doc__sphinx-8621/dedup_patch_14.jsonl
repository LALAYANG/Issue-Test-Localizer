{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': addnodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+def process_kbd(text):\n+    parts = re.split('([+\\\\-^])', text)\n+    kbd_parts = [f'<kbd>{part}</kbd>' if part not in '+-^' else part for part in parts if part]\n+    return ''.join(kbd_parts)\n+class KbdRole:\n+    def __init__(self, rawtext, text, lineno, inliner, options={}, content=[]):\n+        self.rawtext = rawtext\n+        self.text = text\n+        self.lineno = lineno\n+        self.inliner = inliner\n+        self.options = options\n+        self.content = content\n+    def run(self):\n+        processed_text = process_kbd(self.text)\n+        node = nodes.raw('', processed_text, format='html')\n+        return ([node], [])\n+roles.register_local_role('kbd', KbdRole)"}
