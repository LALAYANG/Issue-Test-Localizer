{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+def split_keystrokes(text):\n+    parts = re.split('(?<!\\\\S)-(?!\\\\S)', text)\n+    keystrokes = []\n+    for part in parts:\n+        subparts = re.split('(?<!\\\\S)\\\\+(?!\\\\S)', part)\n+        keystrokes.extend(subparts)\n+    return keystrokes\n+def kbd_role(name, rawtext, text, lineno, inliner, options={}, content=[]):\n+    keystrokes = split_keystrokes(text)\n+    nodes_list = []\n+    for keystroke in keystrokes:\n+        if keystroke:\n+            node = nodes.literal(keystroke, keystroke)\n+            node['classes'].append('kbd')\n+            nodes_list.append(node)\n+            nodes_list.append(nodes.Text(' + ' if '+' in keystroke else ' - '))\n+    if nodes_list:\n+        nodes_list.pop()\n+    return (nodes_list, [])\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': kbd_role, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}"}
