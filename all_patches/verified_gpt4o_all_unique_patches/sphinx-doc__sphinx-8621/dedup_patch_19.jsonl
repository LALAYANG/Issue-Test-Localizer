{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+import re\n+def split_kbd_sequence(text):\n+    parts = text.split()\n+    sequences = []\n+    for part in parts:\n+        if part in ('-', '+', '^') or re.match('^[\\\\-\\\\+\\\\^]', part):\n+            sequences.append(part)\n+        else:\n+            sequences.extend(re.split('(?<!^)[\\\\-\\\\+\\\\^]', part))\n+    return sequences\n+def custom_kbd_role(typ, rawtext, text, lineno, inliner, options={}, content=[]):\n+    nodes = []\n+    sequences = split_kbd_sequence(text)\n+    for seq in sequences:\n+        kbd_node = nodes.literal(rawtext, seq)\n+        kbd_node['classes'].append('kbd')\n+        nodes.append(kbd_node)\n+    return (nodes, [])\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': custom_kbd_role, 'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}"}
