{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+def kbd_role(name, rawtext, text, lineno, inliner, options={}, content=[]):\n+    nodes_kbd = []\n+    for part in text.split('-'):\n+        subparts = part.split('+')\n+        for i, subpart in enumerate(subparts):\n+            if i > 0:\n+                nodes_kbd.append(nodes.Text('+'))\n+            nodes_kbd.append(nodes.literal('', subpart))\n+        nodes_kbd.append(nodes.Text('-'))\n+    if nodes_kbd and isinstance(nodes_kbd[-1], nodes.Text) and (nodes_kbd[-1] == nodes.Text('-')):\n+        nodes_kbd.pop()\n+    node = nodes.inline(rawtext, '', *nodes_kbd, classes=['kbd'])\n+    return ([node], [])\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': kbd_role, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}"}
