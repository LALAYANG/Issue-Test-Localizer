{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..7a4906f 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -32,10 +32,35 @@ if False:\n     from sphinx.environment import BuildEnvironment\n \n \n+def custom_kbd_role(name, rawtext, text, lineno, inliner, options={}, content=[]):\n+    from docutils import nodes\n+    import re\n+\n+    # Split compound keystrokes by comma, then split individual keystrokes by separators\n+    parts = [part.strip() for part in text.split(',')]\n+    keys = []\n+    for part in parts:\n+        tokens = re.split(r'(?<!\\\\)([-+^])', part)  # match separators not preceded by a backslash\n+        tokens = [token.replace('\\\\', '') for token in tokens]  # remove escape characters\n+        keys.append(tokens)\n+\n+    # Build the node tree\n+    node = nodes.literal()\n+    for key in keys:\n+        for i, token in enumerate(key):\n+            subnode = nodes.literal()\n+            subnode += nodes.Text(token)\n+            node += subnode\n+            if i < len(key) - 1:\n+                node += nodes.Text('-')\n+\n+    return [node], []\n+\n+\n generic_docroles = {\n     'command': addnodes.literal_strong,\n     'dfn': nodes.emphasis,\n-    'kbd': nodes.literal,\n+    'kbd': custom_kbd_role,\n     'mailheader': addnodes.literal_emphasis,\n     'makevar': addnodes.literal_strong,\n     'manpage': addnodes.manpage,\n", "occurrence": 1}
