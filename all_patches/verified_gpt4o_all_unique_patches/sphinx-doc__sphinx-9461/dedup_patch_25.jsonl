{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9461", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 00b90de..fdafda6 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2069,7 +2069,7 @@ class MethodDocumenter(DocstringSignatureMixin, ClassLevelDocumenter):  # type:\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n                             ) -> bool:\n-        return inspect.isroutine(member) and not isinstance(parent, ModuleDocumenter)\n+        return (inspect.isroutine(member) or inspect.isclassproperty(member)) and not isinstance(parent, ModuleDocumenter)\n \n     def import_object(self, raiseerror: bool = False) -> bool:\n         ret = super().import_object(raiseerror)\n@@ -2661,7 +2661,7 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n                             ) -> bool:\n-        return inspect.isproperty(member) and isinstance(parent, ClassDocumenter)\n+        return (inspect.isproperty(member) or inspect.isclassproperty(member)) and isinstance(parent, ClassDocumenter)\n \n     def document_members(self, all_members: bool = False) -> None:\n         pass\n", "occurrence": 1}
