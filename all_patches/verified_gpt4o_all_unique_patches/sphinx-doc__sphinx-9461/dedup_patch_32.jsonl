{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9461", "model_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 9e39b23..815f65d 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -390,7 +390,13 @@ def isproperty(obj: Any) -> bool:\n         if isinstance(obj, cached_property):\n             return True\n \n-    return isinstance(obj, property)\n+    if isinstance(obj, property):\n+        return True\n+    if isinstance(obj, classmethod):\n+        obj = obj.__func__\n+        if isinstance(obj, property):\n+            return True\n+    return False\n \n \n def isgenericalias(obj: Any) -> bool:\n@@ -862,4 +868,9 @@ def getdoc(obj: Any, attrgetter: Callable = safe_getattr,\n         if doc is None:\n             doc = inspect.getdoc(obj)\n \n+    if doc is None and isinstance(obj, classmethod):\n+        # Check if the classmethod wraps a property\n+        func = safe_getattr(obj, '__func__', None)\n+        if func and isinstance(func, property):\n+            doc = attrgetter(func, '__doc__', None)\n     return doc\n"}
