{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9461", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex ee3bdad..915de35 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1200,7 +1200,7 @@ class MethodDocumenter(DocstringSignatureMixin, ClassLevelDocumenter):\n     priority = 1\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any) -> bool:\n-        return inspect.isroutine(member) and (not isinstance(parent, ModuleDocumenter))\n+        return inspect.isroutine(member) and (not isinstance(parent, ModuleDocumenter)) or type(member).__name__ == 'classmethod_property'\n     def import_object(self, raiseerror: bool=False) -> bool:\n         ret = super().import_object(raiseerror)\n         if not ret:"}
