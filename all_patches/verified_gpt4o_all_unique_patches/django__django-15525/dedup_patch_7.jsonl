{"model_name_or_path": "agentless", "instance_id": "django__django-15525", "model_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex e82a744..6692482 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -329,7 +329,7 @@ def build_instance(Model, data, db):\n     If the model instance doesn't have a primary key and the model supports\n     natural keys, try to retrieve it from the database.\n     \"\"\"\n-    default_manager = Model._meta.default_manager\n+    default_manager = Model._base_manager\n     pk = data.get(Model._meta.pk.attname)\n     if (\n         pk is None\n@@ -337,12 +337,20 @@ def build_instance(Model, data, db):\n         and hasattr(Model, \"natural_key\")\n     ):\n         natural_key = Model(**data).natural_key()\n-        try:\n-            data[Model._meta.pk.attname] = Model._meta.pk.to_python(\n-                default_manager.db_manager(db).get_by_natural_key(*natural_key).pk\n-            )\n-        except Model.DoesNotExist:\n-            pass\n+        if db:\n+            try:\n+                data[Model._meta.pk.attname] = Model._meta.pk.to_python(\n+                    default_manager.db_manager(db).get_by_natural_key(*natural_key).pk\n+                )\n+            except Model.DoesNotExist:\n+                pass\n+        else:\n+            try:\n+                data[Model._meta.pk.attname] = Model._meta.pk.to_python(\n+                    default_manager.get_by_natural_key(*natural_key).pk\n+                )\n+            except Model.DoesNotExist:\n+                pass\n     return Model(**data)\n \n \n", "occurrence": 1}
