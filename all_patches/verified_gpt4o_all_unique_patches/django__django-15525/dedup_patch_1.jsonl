{"model_name_or_path": "agentless", "instance_id": "django__django-15525", "model_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex e82a744..0fb3fd3 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -343,7 +343,20 @@ def build_instance(Model, data, db):\n             )\n         except Model.DoesNotExist:\n             pass\n-    return Model(**data)\n+    obj = Model(**data)\n+    for field in Model._meta.get_fields():\n+        if field.is_relation and field.many_to_one:\n+            related_model = field.related_model\n+            if hasattr(related_model._meta.default_manager, \"get_by_natural_key\"):\n+                rel_field_value = data.get(field.attname)\n+                if rel_field_value:\n+                    try:\n+                        # Fetch related object from the correct database\n+                        related_obj = related_model._meta.default_manager.db_manager(db).get(pk=rel_field_value)\n+                        setattr(obj, field.name, related_obj)\n+                    except related_model.DoesNotExist:\n+                        pass\n+    return obj\n \n \n def deserialize_m2m_values(field, field_value, using, handle_forward_references):\n", "occurrence": 1}
