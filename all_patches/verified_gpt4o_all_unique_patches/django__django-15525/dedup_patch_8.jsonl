{"model_name_or_path": "agentless", "instance_id": "django__django-15525", "model_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex 65e3dcb..5194c4a 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -141,14 +141,20 @@ class DeserializedObject:\n                 setattr(self.object, field.attname, value)\n         self.save()\n def build_instance(Model, data, db):\n-    default_manager = Model._meta.default_manager\n+    default_manager = Model._base_manager\n     pk = data.get(Model._meta.pk.attname)\n     if pk is None and hasattr(default_manager, 'get_by_natural_key') and hasattr(Model, 'natural_key'):\n         natural_key = Model(**data).natural_key()\n-        try:\n-            data[Model._meta.pk.attname] = Model._meta.pk.to_python(default_manager.db_manager(db).get_by_natural_key(*natural_key).pk)\n-        except Model.DoesNotExist:\n-            pass\n+        if db:\n+            try:\n+                data[Model._meta.pk.attname] = Model._meta.pk.to_python(default_manager.db_manager(db).get_by_natural_key(*natural_key).pk)\n+            except Model.DoesNotExist:\n+                pass\n+        else:\n+            try:\n+                data[Model._meta.pk.attname] = Model._meta.pk.to_python(default_manager.get_by_natural_key(*natural_key).pk)\n+            except Model.DoesNotExist:\n+                pass\n     return Model(**data)\n def deserialize_m2m_values(field, field_value, using, handle_forward_references):\n     model = field.remote_field.model"}
