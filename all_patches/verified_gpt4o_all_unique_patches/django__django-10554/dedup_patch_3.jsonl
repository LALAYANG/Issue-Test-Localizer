{"model_name_or_path": "agentless", "instance_id": "django__django-10554", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex ab425fb..15c91ab 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -353,10 +353,14 @@ class SQLCompiler:\n                     elif col_alias:\n                         continue\n                     if src == sel_expr:\n+                        # Ensure the order by references a valid column in the combined result set\n                         resolved.set_source_expressions([RawSQL('%d' % (idx + 1), ())])\n                         break\n                 else:\n-                    raise DatabaseError('ORDER BY term does not match any column in the result set.')\n+                    if isinstance(src, Ref) and src.refs in [alias for _, _, alias in self.select]:\n+                        resolved.set_source_expressions([RawSQL('%d' % (self.query.annotation_select[src.refs].get_col_alias(self.query.get_meta(), self.query.get_initial_alias()))), ()])\n+                    else:\n+                        raise DatabaseError('ORDER BY term does not match any column in the result set.')\n             sql, params = self.compile(resolved)\n             # Don't add the same column twice, but the order direction is\n             # not taken into account so we strip it. When this entire method\n", "occurrence": 1}
